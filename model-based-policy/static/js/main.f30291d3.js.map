{"version":3,"sources":["../webpack/bootstrap 561b433a4e5552990741","../node_modules/react/index.js","../node_modules/tslib/tslib.es6.js","../node_modules/webpack/buildin/global.js","../node_modules/three/build/three.module.js","Canvas.tsx","../node_modules/object-assign/index.js","../node_modules/promise/lib/core.js","common.ts","../node_modules/react-scripts-ts/config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","index.tsx","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","App.tsx","Body.tsx","../node_modules/react-resize-detector/lib/index.js","../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/lodash.debounce/index.js","../node_modules/lodash.throttle/index.js","../node_modules/lodash.isfunction/index.js","Orbit.tsx","Player.tsx","timeSeries.ts","lerp.ts","Trajectory.tsx","trajectory.json","registerServiceWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","b","__","this","constructor","extendStatics","create","setPrototypeOf","__proto__","Array","g","Function","eval","e","window","EventDispatcher","WebGLRenderer","Scene","Mesh","Line","Group","PerspectiveCamera","BufferGeometry","Euler","Vector3","Quaternion","Color","AxesHelper","SphereBufferGeometry","RingBufferGeometry","MeshBasicMaterial","LineBasicMaterial","BufferAttribute","undefined","Number","EPSILON","Math","pow","isInteger","value","isFinite","floor","sign","x","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","min","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","console","error","z","w","_x","_y","_z","_w","Matrix3","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","warn","addVectors","addScalar","a","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","src","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","data","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","isArray","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","lerpHSL","hslA","hslB","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","Float32Array","Float64Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Int8Array","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Face3","materialIndex","vertexNormals","vertexColors","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","element","JSON","stringify","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","child","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","keys","morphAttribute","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","ShaderMaterial","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","setValues","Ray","origin","Triangle","combine","wireframeLinecap","wireframeLinejoin","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","DataTexture3D","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","barycoord","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","result","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","isMeshBasicMaterial","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","isDataTexture3D","emptyTexture","emptyTexture3d","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","renderer","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","lines","split","join","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","capabilities","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","isWebGL2","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","logarithmicDepthBuffer","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","getTexelEncodingFunction","depthPacking","isGLSL3ShaderMaterial","versionRegex","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","prefix","deleteShader","getUniforms","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","painterSortStable","reversePainterSortStable","WebGLRenderLists","lists","scene","list","renderItems","renderItemsIndex","opaque","init","renderItem","WebGLLights","light","halfWidth","halfHeight","state","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","render","faceCount","_state","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","WebGLTextures","_gl","utils","_canvas","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","filterFallback","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","updateVideoTexture","__version","complete","uploadTexture","activeTexture","bindTexture","setTextureParameters","textureType","isPowerOfTwoImage","extension","texParameteri","convert","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","createTexture","pixelStorei","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","glInternalFormat","mipmap","isDepthTexture","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","texImage3D","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isCompressed","cubeImage","maxCubemapSize","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","updateRenderTargetMipmap","webglTexture","Camera","projectionMatrixInverse","fov","aspect","zoom","focus","view","filmGauge","filmOffset","ArrayCamera","cameras","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","frameOfReferenceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","bounds","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","renderStates","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","maxAnisotropy","WebGL2RenderingContext","maxPrecision","maxTextures","maxVertexTextures","maxAttributes","maxVaryings","maxFragmentUniforms","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","clearColor","reset","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","setBlending","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","boundTexture","apply","calls","triangles","autoReset","mode","instanceCount","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","renderState","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","maxInstancedCount","drawElements","vr","session","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","then","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","THREE","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","isLight","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","InterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","linecap","linejoin","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","matrixPosition","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","createElement","fillStyle","fillRect","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","toLowerCase","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","DataTextureLoader","_parser","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","LoaderUtils","lastIndexOf","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","JSONLoader","ObjectLoader","resourcePath","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setResourcePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","substring","AudioContext","webkitAudioContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","Clock","autoStart","oldTime","elapsedTime","running","AudioListener","gain","createGain","connect","destination","timeDelta","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","eyeSep","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","performance","Date","now","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setValueAtTime","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","PointCloud","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CameraContext","__WEBPACK_IMPORTED_MODULE_1_react__","FrameContext","Canvas","_super","props","cameraFrame","__WEBPACK_IMPORTED_MODULE_3_three__","ogScale","handleCanvas","devicePixelRatio","handleGestureStart","handleGestureChange","handleResize","handleWheel","ctrlKey","gestureZoom","exp","deltaY","gesturePan","deltaX","clearRendered","rendered","webGLRender","__WEBPACK_IMPORTED_MODULE_0_tslib__","Provider","className","ref","onWheel","__WEBPACK_IMPORTED_MODULE_2_react_resize_detector___default","handleWidth","handleHeight","onResize","Consumer","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","fromCharCode","test3","letter","err","shouldUseNative","symbols","val","toObject","asap","noop","LAST_ERROR","IS_ERROR","Promise","fn","_75","_83","_18","_38","doResolve","handle","self","deferred","_47","onFulfilled","onRejected","ex","tryCallOne","reject","promise","resolve","handleResolved","getThen","finale","_71","Handler","done","tryCallTwo","reason","_44","safeThen","SPHERE_GEO","CIRCLE_GEO","__WEBPACK_IMPORTED_MODULE_0_three__","DEFAULT_WHITELIST","ReferenceError","RangeError","matchWhitelist","some","cls","displayId","rejections","onUnhandled","allRejections","whitelist","logged","stack","logError","_56","onHandled","clearTimeout","timeout","global","rawAsap","task","requestFlush","capacity","flush","currentIndex","scan","newLength","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","observer","createTextNode","observe","characterData","makeRequestCallFromMutationObserver","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","args","remaining","race","support","searchParams","iterable","Symbol","formData","arrayBuffer","viewClasses","isDataView","isPrototypeOf","isArrayBufferView","Headers","append","normalizeName","normalizeValue","oldValue","has","thisArg","items","iteratorFor","entries","iterator","methods","Request","body","_bodyInit","Body","Response","statusText","headers","redirectStatuses","redirect","location","input","xhr","onload","rawHeaders","parseHeaders","getAllResponseHeaders","responseURL","responseText","onerror","ontimeout","method","credentials","polyfill","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","buf","byteLength","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","readAsText","readBlobAsText","readArrayBufferAsText","decode","upcased","normalizeMethod","referrer","form","bytes","bodyInit","ok","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_2__App__","__WEBPACK_IMPORTED_MODULE_3__index_css__","__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__","getElementById","for","A","C","D","encodeURIComponent","framesToPop","aa","E","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","F","G","refs","updater","H","I","isReactComponent","forceUpdate","J","isPureReactComponent","K","currentDispatcher","L","M","__self","__source","defaultProps","$$typeof","_owner","O","Q","R","keyPrefix","S","V","U","=",":","escape","ca","da","W","ba","X","Children","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","forwardRef","lazy","_ctor","_status","_result","memo","compare","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","unstable_ConcurrentMode","unstable_Profiler","Y","default","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","ea","fa","ia","ja","ka","ma","na","oa","pa","extractEvents","eventTypes","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","wa","xa","currentTarget","la","ya","za","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ca","injectEventPluginOrder","injectEventPluginsByName","Da","stateNode","disabled","Ea","Fa","Ga","Ha","Ia","parentNode","tag","Ja","Ka","La","Ma","return","Na","dispatchConfig","Oa","_targetInst","Pa","Qa","Ra","Sa","Ta","Ua","animationend","animationiteration","animationstart","transitionend","Va","Wa","Xa","transition","Ya","Za","$a","bb","eb","fb","gb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","lb","destructor","jb","getPooled","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","extend","mb","nb","ob","pb","documentMode","rb","sb","tb","ub","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","wb","keyCode","xb","yb","Bb","locale","which","zb","altKey","metaKey","Ab","Cb","Db","Eb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","date","datetime","datetime-local","email","month","number","password","tel","week","Qb","Rb","srcElement","correspondingUseElement","nodeType","Sb","setAttribute","Tb","Vb","_valueTracker","getOwnPropertyDescriptor","stopTracking","Ub","Wb","checked","Xb","Yb","Zb","$b","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","displayName","nc","_debugOwner","_debugSource","fileName","lineNumber","oc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","xc","yc","tc","uc","sc","setAttributeNS","zc","Ac","defaultChecked","defaultValue","_wrapperState","initialChecked","Bc","initialValue","controlled","Cc","Dc","Ec","Fc","ownerDocument","activeElement","tabIndex","Gc","change","Hc","Jc","Kc","Lc","Mc","Nc","Oc","Pc","detachEvent","Qc","Rc","attachEvent","Sc","Tc","Uc","Vc","_isInputEventSupported","Wc","Xc","Alt","Control","Meta","Shift","Yc","getModifierState","Zc","$c","cd","dd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","relatedTarget","fromElement","toElement","movementX","movementY","ed","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","fd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","gd","defaultView","parentWindow","alternate","hd","jd","kd","effectTag","ld","nd","sibling","md","od","animationName","pseudoElement","pd","clipboardData","qd","rd","charCode","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","wheelDeltaX","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Jd","Kd","Ld","Md","Nd","Od","Pd","Qd","firstChild","Rd","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","onSelect","ee","fe","selected","defaultSelected","ge","dangerouslySetInnerHTML","he","ie","je","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ke","html","mathml","svg","le","ne","oe","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","removeChild","appendChild","pe","lastChild","nodeValue","qe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","zIndex","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","re","se","setProperty","ue","menuitem","br","col","embed","hr","img","keygen","link","param","wbr","ve","we","is","xe","blur","ye","ze","Ae","Be","autoFocus","Ce","__html","De","Ee","Fe","Ge","Set","He","Ie","Je","Ke","Le","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Me","Ne","Oe","Pe","getChildContext","Qe","__reactInternalMemoizedMergedChildContext","Re","Se","Te","Ue","elementType","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Xe","Ze","$e","pendingChildren","implementation","ef","didError","earliestPendingTime","latestPendingTime","ff","gf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","hf","nextExpirationTimeToWorkOn","jf","kf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","lf","mf","payload","nf","of","pf","qf","rf","tf","uf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","observedBits","Ef","Ff","Gf","Hf","If","documentElement","tagName","Jf","Kf","Lf","Nf","Of","Pf","Uf","_reactInternalFiber","Qf","Rf","Sf","Tf","Vf","shouldComponentUpdate","Wf","contextType","readContext","Xf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Zf","$f","_stringRef","ag","bg","Map","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","vg","getDerivedStateFromError","wg","pendingContext","xg","timedOutAt","fallback","yg","Mf","Ye","hydrate","hidden","unstable_observedBits","zg","Ag","Bg","Fg","Gg","Hg","Ig","Jg","Kg","componentWillUnmount","Lg","Mg","Ng","insertBefore","_reactRootContainer","onclick","Og","wasMultiple","multiple","display","Pg","Qg","Rg","componentDidCatch","Sg","componentStack","Tg","onClick","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","unstable_cancelCallback","eh","fh","gh","pendingCommitExpirationTime","hh","maxDuration","ih","finishedWork","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","zh","unstable_now","Ah","Bh","Ch","Dh","Eh","unstable_scheduleCallback","Fh","Hh","Ih","nextScheduledRoot","Jh","Kh","Lh","unstable_shouldYield","_onComplete","Mh","firstBatch","_expirationTime","_defer","db","focusedElem","selectionRange","Th","__reactInternalSnapshotBeforeUpdate","Sd","contains","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Fb","Gb","wc","ci","Cg","Dg","di","Ic","Eg","Nh","Oh","Ph","Qh","Rh","Sh","Vh","_callbacks","_next","_hasChildren","_didComplete","_children","Wh","_didCommit","_onCommit","Xh","_internalRoot","Yh","$h","legacy_renderSubtreeIntoContainer","hasAttribute","Zh","ai","Uh","querySelectorAll","commit","unmount","createBatch","bi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","Events","unstable_createRoot","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Ve","findHostInstanceByFiber","bundleType","rendererPackageName","ei","previous","priorityLevel","cancelAnimationFrame","_schedMock","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","App","playing","tick","maxTime","handlePlay","interval","handlePause","handleTimeChange","row","__WEBPACK_IMPORTED_MODULE_8__trajectory_json__","__WEBPACK_IMPORTED_MODULE_6__timeSeries__","__WEBPACK_IMPORTED_MODULE_3__Canvas__","__WEBPACK_IMPORTED_MODULE_2__Body__","focused","__WEBPACK_IMPORTED_MODULE_4__Orbit__","__WEBPACK_IMPORTED_MODULE_7__Trajectory__","__WEBPACK_IMPORTED_MODULE_5__Player__","onPlay","onPause","onTimeChange","__WEBPACK_IMPORTED_MODULE_2_three__","handleFrame","__WEBPACK_IMPORTED_MODULE_4__common__","withResizeDetector","_react","newObj","desc","_interopRequireWildcard","_propTypes","_interopRequireDefault","_resizeObserverPolyfill","_lodash","_lodash2","_lodash3","_typeof","_toConsumableArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_classCallCheck","Constructor","_defineProperties","descriptor","writable","_createClass","protoProps","staticProps","_possibleConstructorReturn","_assertThisInitialized","_getPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","_setPrototypeOf","_defineProperty","listMode","debounce","throttle","styles","visibility","ResizeDetector","_PureComponent","resizableElementId","otherElement","parentElement","el","_this$props","entry","_entry$contentRect","contentRect","notifyWidth","notifyHeight","skipOnMount","animationFrameID","_this$state","_this$state2","convertChildrenToArray","refreshMode","refreshRate","resizeHandler","createResizeHandler","ro","resizableElement","getElement","unobserve","cancel","_this2","handleRenderProp","renderChildren","propTypes","bool","any","WrappedComponent","_Component","ResizeDetectorHOC","_default","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","MapShim","anonymous","__entries__","prototypeAccessors","ctx","isBrowser","global$1","requestAnimationFrame$1","trailingTimeout","transitionKeys","mutationObserverSupported","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","childList","subtree","getInstance","instance_","defineConfigurable","getWindowOf","emptyRect","createRectInit","toFloat","getBordersSize","reduce","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","vertPad","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","clearActive","this$1","observation","ResizeObserver","FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","freeSelf","objectToString","nativeMax","nativeMin","isObject","toNumber","isObjectLike","isSymbol","valueOf","isBinary","wait","lastArgs","lastThis","maxWait","timerId","lastInvokeTime","leading","maxing","trailing","invokeFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","remainingWait","debounced","isInvoking","leadingEdge","asyncTag","funcTag","genTag","nullTag","proxyTag","undefinedTag","objectProto","nativeObjectToString","symToStringTag","toStringTag","baseGetTag","isOwn","unmasked","getRawTag","Orbit","Player","scrubbing","wasPlaying","scrubberRef","handleScrubDown","handleScrubMove","handleScrubUp","_a","getBoundingClientRect","renderPauseButton","renderPlayButton","renderScrubber","formatTime","viewBox","onMouseDown","formatTimePrecise","splitTime","sStr","minStr","msStr","Proxy","handler","__WEBPACK_IMPORTED_MODULE_0__lerp__","NaN","lo","hi","cmp","Trajectory","verts","geo","publicUrl","URL","swUrl","isLocalhost","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","register","onupdatefound","installingWorker","installing","onstatechange"],"mappings":"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","file":"static/js/main.f30291d3.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/332/model-based-policy/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 561b433a4e5552990741","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '98';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\\n\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n}\\n\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position, 1.0 );\\n\\tgl_Position.z = 1.0;\\n}\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = ( background.isWebGLRenderTargetCube ) ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: UniformsUtils.clone( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.push( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8B5F: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( 3042 );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) return 33326;\n\t\t\tif ( glType === 5131 ) return 33325;\n\t\t\tif ( glType === 5121 ) return 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) return 34837;\n\t\t\tif ( glType === 5131 ) return 34843;\n\t\t\tif ( glType === 5121 ) return 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) return 34836;\n\t\t\tif ( glType === 5131 ) return 34842;\n\t\t\tif ( glType === 5121 ) return 32856;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType;\n\n\t\tif ( texture.isDataTexture3D ) {\n\n\t\t\ttextureType = 32879;\n\n\t\t} else {\n\n\t\t\ttextureType = 3553;\n\n\t\t}\n\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\t\tstate.activeTexture( 33984 + slot );\n\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( 36161, 32854, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture3D = ( function () {\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture3D( texture, slot ) {\n\n\t\t\ttextures.setTexture3D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n\t// a matcap is required\n\n\tif ( this.matcap === null ) {\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\n\t\tvar context = canvas.getContext( '2d' );\n\n\t\tcontext.fillStyle = '#fff';\n\t\tcontext.fillRect( 0, 0, 1, 1 );\n\n\t\tthis.matcap = new THREE.CanvasTexture( canvas );\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\tonLoad( animations );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g$/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, path );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, path ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\t\t\t\t\tcache[ data.uuid ] = materials[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new THREE.Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new THREE.Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, AnimationLoader, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/three/build/three.module.js\n// module id = 3\n// module chunks = 0","import * as React from 'react';\nimport ReactResizeDetector from 'react-resize-detector';\nimport * as THREE from 'three';\n\nimport './Canvas.css';\n\ninterface ICanvasState {\n  height: number;\n  width: number;\n}\n\nconst CameraContext = React.createContext<THREE.Camera>(null as any);\nconst FrameContext = React.createContext<THREE.Object3D>(null as any);\n\nexport let instance: Canvas = null as any;\n\nexport default class Canvas extends React.Component<{}, ICanvasState> {\n  public static CameraContext = CameraContext.Consumer;\n  public static FrameContext = FrameContext.Consumer;\n  public state = {\n    height: 0,\n    width: 0,\n  };\n  public cameraFrame = new THREE.Group();\n\n  // Used for zooming in Safari.\n  private ogScale: number = 0;\n\n  private scene = new THREE.Scene();\n  private renderer: THREE.WebGLRenderer | null;\n  private camera = new THREE.PerspectiveCamera(60, 1, 1e-1, 1e16);\n  private rendered: boolean;\n  public constructor(props: {}) {\n    super(props);\n    this.scene.add(new THREE.AxesHelper(1e16));\n    this.cameraFrame.add(this.camera);\n    this.camera.position.set(0, 0, 1e8);\n    this.scene.add(this.cameraFrame);\n    instance = this;\n  }\n  public render() {\n    this.webGLRender();\n    return (\n      <CameraContext.Provider value={this.camera}>\n        <FrameContext.Provider value={this.scene}>\n          <div className=\"Canvas\">\n            <canvas className=\"Canvas-canvas\"\n              width={this.state.width * window.devicePixelRatio}\n              height={this.state.height * window.devicePixelRatio}\n              ref={this.handleCanvas}\n              onWheel={this.handleWheel}\n            />\n            <ReactResizeDetector\n              handleWidth={true}\n              handleHeight={true}\n              onResize={this.handleResize}\n            />\n            {this.props.children}\n          </div>\n        </FrameContext.Provider>\n      </CameraContext.Provider>\n    );\n  }\n  private handleCanvas = (canvas: HTMLCanvasElement) => {\n    if (canvas) {\n      this.renderer = new THREE.WebGLRenderer({\n        alpha: true,\n        antialias: true,\n        canvas,\n        clearAlpha: 0,\n        devicePixelRatio: window.devicePixelRatio,\n      });\n      canvas.addEventListener('gesturestart', this.handleGestureStart);\n      canvas.addEventListener('gesturechange', this.handleGestureChange);\n    } else {\n      this.renderer = null;\n    }\n  }\n  private handleResize = (width: number, height: number) => {\n    this.renderer!.setDrawingBufferSize(width, height, window.devicePixelRatio);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.setState({ width, height });\n  }\n  private handleWheel = (e: React.WheelEvent) => {\n    e.preventDefault();\n    if (e.ctrlKey) {\n      this.gestureZoom(Math.exp(e.deltaY / 80));\n    } else {\n      this.gesturePan(e.deltaX, e.deltaY);\n    }\n  }\n  private handleGestureStart = (e: any) => {\n    e.preventDefault();\n    this.ogScale = 1;\n  }\n  private handleGestureChange = (e: any) => {\n    e.preventDefault();\n    this.gestureZoom(this.ogScale / e.scale);\n    this.ogScale = e.scale;\n  }\n  private gestureZoom(s: number) {\n    this.camera.position.multiplyScalar(s);\n    this.webGLRender();\n  }\n  private gesturePan(x: number, y: number) {\n    const q = new THREE.Quaternion().setFromEuler(new THREE.Euler(y / 100, x / 100))\n    this.cameraFrame.quaternion.multiply(q);\n    this.webGLRender();\n  }\n  private clearRendered = () => {\n    this.rendered = false;\n  }\n  private webGLRender = () => {\n    if (this.renderer && !this.rendered) {\n      this.renderer!.render(this.scene, this.camera);\n      this.rendered = true;\n      requestAnimationFrame(this.clearRendered);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Canvas.tsx","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 6\n// module chunks = 0","import * as THREE from 'three';\n\nexport const ORIGIN = new THREE.Vector3(0, 0, 0);\nexport const X_AXIS = new THREE.Vector3(1, 0, 0);\nexport const Y_AXIS = new THREE.Vector3(0, 1, 0);\nexport const Z_AXIS = new THREE.Vector3(0, 0, 1);\n\nexport const SPHERE_GEO = new THREE.SphereBufferGeometry(1, 60, 30);\nexport const CIRCLE_GEO = new THREE.RingBufferGeometry(1, 1, 120, 0);\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.ts","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts-ts/config/polyfills.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 11\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 12\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 13\n// module chunks = 0","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","/** @license React v16.6.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.6.3\",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}};X.unstable_ConcurrentMode=x;X.unstable_Profiler=u;var Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 16\n// module chunks = 0","/** @license React v16.6.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"scheduler\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=wa(c);la(d,b,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)xa(a,b[d],c[d]);else b&&xa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ca={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Da(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ea(a){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(za(a,Ba),Aa?t(\"95\"):void 0,ha))throw a=ia,ha=!1,ia=null,a;}var Fa=Math.random().toString(36).slice(2),Ga=\"__reactInternalInstance$\"+Fa,Ha=\"__reactEventHandlers$\"+Fa;function Ia(a){if(a[Ga])return a[Ga];for(;!a[Ga];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ga];return 5===a.tag||6===a.tag?a:null}function Ja(a){a=a[Ga];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ka(a){if(5===a.tag||6===a.tag)return a.stateNode;t(\"33\")}function La(a){return a[Ha]||null}function Ma(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Na(a,b,c){if(b=Da(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Oa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Ma(b);for(b=c.length;0<b--;)Na(c[b],\"captured\",a);for(b=0;b<c.length;b++)Na(c[b],\"bubbled\",a)}}function Pa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Da(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Qa(a){a&&a.dispatchConfig.registrationName&&Pa(a._targetInst,null,a)}\nfunction Ra(a){za(a,Oa)}var Sa=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Ta(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ua={animationend:Ta(\"Animation\",\"AnimationEnd\"),animationiteration:Ta(\"Animation\",\"AnimationIteration\"),animationstart:Ta(\"Animation\",\"AnimationStart\"),transitionend:Ta(\"Transition\",\"TransitionEnd\")},Va={},Wa={};\nSa&&(Wa=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),\"TransitionEvent\"in window||delete Ua.transitionend.transition);function Xa(a){if(Va[a])return Va[a];if(!Ua[a])return a;var b=Ua[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Wa)return Va[a]=b[c];return a}\nvar Ya=Xa(\"animationend\"),Za=Xa(\"animationiteration\"),$a=Xa(\"animationstart\"),ab=Xa(\"transitionend\"),bb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),cb=null,eb=null,fb=null;\nfunction gb(){if(fb)return fb;var a,b=eb,c=b.length,d,e=\"value\"in cb?cb.value:cb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return fb=e.slice(a,1<d?1-d:void 0)}function hb(){return!0}function ib(){return!1}\nfunction A(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?hb:ib;this.isPropagationStopped=ib;return this}\nn(A.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=hb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=hb)},persist:function(){this.isPersistent=hb},isPersistent:ib,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ib;this._dispatchInstances=this._dispatchListeners=null}});A.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nA.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;jb(c);return c};jb(A);function kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function lb(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction jb(a){a.eventPool=[];a.getPooled=kb;a.release=lb}var mb=A.extend({data:null}),nb=A.extend({data:null}),ob=[9,13,27,32],pb=Sa&&\"CompositionEvent\"in window,qb=null;Sa&&\"documentMode\"in document&&(qb=document.documentMode);\nvar rb=Sa&&\"TextEvent\"in window&&!qb,sb=Sa&&(!pb||qb&&8<qb&&11>=qb),tb=String.fromCharCode(32),ub={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},vb=!1;\nfunction wb(a,b){switch(a){case \"keyup\":return-1!==ob.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function xb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var yb=!1;function zb(a,b){switch(a){case \"compositionend\":return xb(b);case \"keypress\":if(32!==b.which)return null;vb=!0;return tb;case \"textInput\":return a=b.data,a===tb&&vb?null:a;default:return null}}\nfunction Ab(a,b){if(yb)return\"compositionend\"===a||!pb&&wb(a,b)?(a=gb(),fb=eb=cb=null,yb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return sb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Bb={eventTypes:ub,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(pb)b:{switch(a){case \"compositionstart\":e=ub.compositionStart;break b;case \"compositionend\":e=ub.compositionEnd;break b;case \"compositionupdate\":e=ub.compositionUpdate;break b}e=void 0}else yb?wb(a,c)&&(e=ub.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=ub.compositionStart);e?(sb&&\"ko\"!==c.locale&&(yb||e!==ub.compositionStart?e===ub.compositionEnd&&yb&&(f=gb()):(cb=d,eb=\"value\"in cb?cb.value:cb.textContent,yb=\n!0)),e=mb.getPooled(e,b,c,d),f?e.data=f:(f=xb(c),null!==f&&(e.data=f)),Ra(e),f=e):f=null;(a=rb?zb(a,c):Ab(a,c))?(b=nb.getPooled(ub.beforeInput,b,c,d),b.data=a,Ra(b)):b=null;return null===f?b:null===b?f:[f,b]}},Cb=null,Db=null,Eb=null;function Hb(a){if(a=va(a)){\"function\"!==typeof Cb?t(\"280\"):void 0;var b=ua(a.stateNode);Cb(a.stateNode,a.type,b)}}function Ib(a){Db?Eb?Eb.push(a):Eb=[a]:Db=a}function Jb(){if(Db){var a=Db,b=Eb;Eb=Db=null;Hb(a);if(b)for(a=0;a<b.length;a++)Hb(b[a])}}\nfunction Kb(a,b){return a(b)}function Lb(a,b,c){return a(b,c)}function Mb(){}var Nb=!1;function Ob(a,b){if(Nb)return a(b);Nb=!0;try{return Kb(a,b)}finally{if(Nb=!1,null!==Db||null!==Eb)Mb(),Jb()}}var Pb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Pb[a.type]:\"textarea\"===b?!0:!1}\nfunction Rb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Sb(a){if(!Sa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Tb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ub(a){var b=Tb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Vb(a){a._valueTracker||(a._valueTracker=Ub(a))}function Wb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Tb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Xb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Yb=/^(.*)[\\\\\\/]/,D=\"function\"===typeof Symbol&&Symbol.for,Zb=D?Symbol.for(\"react.element\"):60103,$b=D?Symbol.for(\"react.portal\"):60106,ac=D?Symbol.for(\"react.fragment\"):60107,bc=D?Symbol.for(\"react.strict_mode\"):60108,cc=D?Symbol.for(\"react.profiler\"):60114,dc=D?Symbol.for(\"react.provider\"):60109,ec=D?Symbol.for(\"react.context\"):60110,fc=D?Symbol.for(\"react.concurrent_mode\"):60111,gc=D?Symbol.for(\"react.forward_ref\"):60112,hc=D?Symbol.for(\"react.suspense\"):\n60113,ic=D?Symbol.for(\"react.memo\"):60115,jc=D?Symbol.for(\"react.lazy\"):60116,kc=\"function\"===typeof Symbol&&Symbol.iterator;function lc(a){if(null===a||\"object\"!==typeof a)return null;a=kc&&a[kc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction mc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case fc:return\"ConcurrentMode\";case ac:return\"Fragment\";case $b:return\"Portal\";case cc:return\"Profiler\";case bc:return\"StrictMode\";case hc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ec:return\"Context.Consumer\";case dc:return\"Context.Provider\";case gc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ic:return mc(a.type);case jc:if(a=1===a._status?a._result:null)return mc(a)}return null}function nc(a){var b=\"\";do{a:switch(a.tag){case 2:case 16:case 0:case 1:case 5:case 8:case 13:var c=a._debugOwner,d=a._debugSource,e=mc(a.type);var f=null;c&&(f=mc(c.type));c=e;e=\"\";d?e=\" (at \"+d.fileName.replace(Yb,\"\")+\":\"+d.lineNumber+\")\":f&&(e=\" (created by \"+f+\")\");f=\"\\n    in \"+(c||\"Unknown\")+e;break a;default:f=\"\"}b+=f;a=a.return}while(a);return b}\nvar oc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(oc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function E(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var F={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){F[a]=new E(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];F[b]=new E(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){F[a]=new E(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){F[a]=new E(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){F[a]=new E(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){F[a]=new E(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){F[a]=new E(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){F[a]=new E(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){F[a]=new E(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function xc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nxc);F[b]=new E(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,xc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,xc);F[b]=new E(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});F.tabIndex=new E(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction yc(a,b,c,d){var e=F.hasOwnProperty(b)?F[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction zc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ac(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=zc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){b=b.checked;null!=b&&yc(a,\"checked\",b,!1)}\nfunction Dc(a,b){Cc(a,b);var c=zc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Ec(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Ec(a,b.type,zc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Fc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Ec(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Gc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Hc(a,b,c){a=A.getPooled(Gc.change,a,b,c);a.type=\"change\";Ib(c);Ra(a);return a}var Jc=null,Kc=null;function Lc(a){Ea(a)}\nfunction Mc(a){var b=Ka(a);if(Wb(b))return a}function Nc(a,b){if(\"change\"===a)return b}var Oc=!1;Sa&&(Oc=Sb(\"input\")&&(!document.documentMode||9<document.documentMode));function Pc(){Jc&&(Jc.detachEvent(\"onpropertychange\",Qc),Kc=Jc=null)}function Qc(a){\"value\"===a.propertyName&&Mc(Kc)&&(a=Hc(Kc,a,Rb(a)),Ob(Lc,a))}function Rc(a,b,c){\"focus\"===a?(Pc(),Jc=b,Kc=c,Jc.attachEvent(\"onpropertychange\",Qc)):\"blur\"===a&&Pc()}function Sc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Mc(Kc)}\nfunction Tc(a,b){if(\"click\"===a)return Mc(b)}function Uc(a,b){if(\"input\"===a||\"change\"===a)return Mc(b)}\nvar Vc={eventTypes:Gc,_isInputEventSupported:Oc,extractEvents:function(a,b,c,d){var e=b?Ka(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Nc:Qb(e)?Oc?f=Uc:(f=Sc,g=Rc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Tc);if(f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Ec(e,\"number\",e.value)}},Wc=A.extend({view:null,detail:null}),Xc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Yc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Xc[a])?!!b[a]:!1}function Zc(){return Yc}\nvar $c=0,ad=0,bd=!1,cd=!1,dd=Wc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=$c;$c=a.screenX;return bd?\"mousemove\"===a.type?a.screenX-b:0:(bd=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=ad;ad=a.screenY;return cd?\"mousemove\"===a.type?a.screenY-b:0:(cd=!0,0)}}),ed=dd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),fd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},gd={eventTypes:fd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ia(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=dd,h=fd.mouseLeave,k=fd.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=ed,h=fd.pointerLeave,k=fd.pointerEnter,l=\"pointer\";var m=null==f?e:Ka(f);e=null==b?e:Ka(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Ma(g))l++;g=0;for(k=e;k;k=Ma(k))g++;for(;0<l-g;)b=Ma(b),l--;for(;0<g-l;)e=Ma(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Ma(b);e=Ma(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Ma(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Ma(d)}for(d=0;d<b.length;d++)Pa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Pa(f[d],\"captured\",c);return[a,c]}},hd=Object.prototype.hasOwnProperty;function id(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction jd(a,b){if(id(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!hd.call(b,c[d])||!id(a[c[d]],b[c[d]]))return!1;return!0}function kd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){2!==kd(a)?t(\"188\"):void 0}\nfunction md(a){var b=a.alternate;if(!b)return b=kd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return ld(e),a;if(g===d)return ld(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}3!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function nd(a){a=md(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar od=A.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=A.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=Wc.extend({relatedTarget:null});function rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=Wc.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zc,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=dd.extend({dataTransfer:null}),wd=Wc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zc}),xd=A.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=dd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[Ya,\"animationEnd\"],[Za,\"animationIteration\"],[$a,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ab,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=dd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case Ya:case Za:case $a:a=od;break;case ab:a=xd;break;case \"scroll\":a=Wc;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=ed;break;default:a=A}b=a.getPooled(e,b,c,d);Ra(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ia(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Rb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ea(g)}}var Hd=!0;\nfunction G(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!1)}function Kd(a,b){if(!b)return null;var c=(Ed(a)?Id:Jd).bind(null,a);b.addEventListener(a,c,!0)}function Id(a,b){Lb(Jd,a,b)}\nfunction Jd(a,b){if(Hd){var c=Rb(b);c=Ia(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Ob(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}var Ld={},Md=0,Nd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Od(a){Object.prototype.hasOwnProperty.call(a,Nd)||(a[Nd]=Md++,Ld[a[Nd]]={});return Ld[a[Nd]]}function Pd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Pd();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Pd(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Sa&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Pd(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&jd(Zd,c)?null:(Zd=c,a=A.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ra(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Od(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ka(b):window;switch(a){case \"focus\":if(Qb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=La;va=Ja;wa=Ka;Ca.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:gd,ChangeEventPlugin:Vc,SelectEventPlugin:be,BeforeInputEventPlugin:Bb});function de(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction ee(a,b){a=n({children:void 0},b);if(b=de(b.children))a.children=b;return a}function fe(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+zc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction ge(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function he(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:zc(c)}}\nfunction ie(a,b){var c=zc(b.value),d=zc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function je(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var ke={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction le(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function me(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?le(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ne=void 0,oe=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==ke.svg||\"innerHTML\"in a)a.innerHTML=b;else{ne=ne||document.createElement(\"div\");ne.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ne.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},re=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qe).forEach(function(a){re.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qe[b]=qe[a]})});function se(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qe.hasOwnProperty(a)&&qe[a]?(\"\"+b).trim():b+\"px\"}\nfunction te(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=se(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ue=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ve(a,b){b&&(ue[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction we(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction xe(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Od(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Kd(\"scroll\",a);break;case \"focus\":case \"blur\":Kd(\"focus\",a);Kd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Sb(e)&&Kd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===bb.indexOf(e)&&G(e,a)}c[e]=!0}}}function ye(){}var ze=null,Ae=null;\nfunction Be(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ce(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var De=\"function\"===typeof setTimeout?setTimeout:void 0,Ee=\"function\"===typeof clearTimeout?clearTimeout:void 0;\nfunction Fe(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ge(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var He=[],Ie=-1;function H(a){0>Ie||(a.current=He[Ie],He[Ie]=null,Ie--)}function I(a,b){Ie++;He[Ie]=a.current;a.current=b}var Je={},J={current:Je},K={current:!1},Ke=Je;\nfunction Le(a,b){var c=a.type.contextTypes;if(!c)return Je;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Me(a){H(K,a);H(J,a)}function Ne(a){H(K,a);H(J,a)}\nfunction Oe(a,b,c){J.current!==Je?t(\"168\"):void 0;I(J,b,a);I(K,c,a)}function Pe(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",mc(b)||\"Unknown\",e);return n({},c,d)}function Qe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Je;Ke=J.current;I(J,b,a);I(K,K.current,a);return!0}\nfunction Re(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Pe(a,b,Ke),d.__reactInternalMemoizedMergedChildContext=b,H(K,a),H(J,a),I(J,b,a)):H(K,a);I(K,c,a)}var Se=null,Te=null;function Ue(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Ve(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Se=Ue(function(a){return b.onCommitFiberRoot(c,a)});Te=Ue(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction We(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function M(a,b,c,d){return new We(a,b,c,d)}\nfunction Xe(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Ye(a){if(\"function\"===typeof a)return Xe(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gc)return 11;if(a===ic)return 14}return 2}\nfunction Ze(a,b){var c=a.alternate;null===c?(c=M(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.firstContextDependency=a.firstContextDependency;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction $e(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Xe(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ac:return af(c.children,e,f,b);case fc:return bf(c,e|3,f,b);case bc:return bf(c,e|2,f,b);case cc:return a=M(12,c,b,e|4),a.elementType=cc,a.type=cc,a.expirationTime=f,a;case hc:return a=M(13,c,b,e),a.elementType=hc,a.type=hc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case dc:g=10;break a;case ec:g=9;break a;case gc:g=11;break a;case ic:g=\n14;break a;case jc:g=16;d=null;break a}t(\"130\",null==a?a:typeof a,\"\")}b=M(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function af(a,b,c,d){a=M(7,a,d,b);a.expirationTime=c;return a}function bf(a,b,c,d){a=M(8,a,d,b);b=0===(b&1)?bc:fc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function cf(a,b,c){a=M(6,a,null,b);a.expirationTime=c;return a}\nfunction df(a,b,c){b=M(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function ef(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);ff(b,a)}\nfunction gf(a,b){a.didError=!1;var c=a.latestPingedTime;0!==c&&c>=b&&(a.latestPingedTime=0);c=a.earliestPendingTime;var d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);ff(b,a)}\nfunction hf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function ff(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var jf=!1;\nfunction kf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function lf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction mf(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function nf(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction of(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=kf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=kf(a.memoizedState),e=c.updateQueue=kf(c.memoizedState)):d=a.updateQueue=lf(e):null===e&&(e=c.updateQueue=lf(d));null===e||d===e?nf(d,b):null===d.lastUpdate||null===e.lastUpdate?(nf(d,b),nf(e,b)):(nf(d,b),e.lastUpdate=b)}\nfunction pf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=kf(a.memoizedState):qf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function qf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=lf(b));return b}\nfunction rf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-2049|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:jf=!0}return d}\nfunction sf(a,b,c,d,e){jf=!1;b=qf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;m<e?(null===g&&(g=k,f=l),h<m&&(h=m)):(l=rf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k)));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var q=k.expirationTime;q<e?(null===m&&(m=k,null===g&&(f=l)),h<q&&(h=q)):(l=rf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=\n32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k)));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction tf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);uf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;uf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function uf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction vf(a,b){return{value:a,source:b,stack:nc(b)}}var wf={current:null},xf=null,yf=null,zf=null;function Af(a,b){var c=a.type._context;I(wf,c._currentValue,a);c._currentValue=b}function Bf(a){var b=wf.current;H(wf,a);a.type._context._currentValue=b}function Cf(a){xf=a;zf=yf=null;a.firstContextDependency=null}\nfunction Df(a,b){if(zf!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)zf=a,b=1073741823;b={context:a,observedBits:b,next:null};null===yf?(null===xf?t(\"293\"):void 0,xf.firstContextDependency=yf=b):yf=yf.next=b}return a._currentValue}var Ef={},N={current:Ef},Ff={current:Ef},Gf={current:Ef};function Hf(a){a===Ef?t(\"174\"):void 0;return a}\nfunction If(a,b){I(Gf,b,a);I(Ff,a,a);I(N,Ef,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:me(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=me(b,c)}H(N,a);I(N,b,a)}function Jf(a){H(N,a);H(Ff,a);H(Gf,a)}function Kf(a){Hf(Gf.current);var b=Hf(N.current);var c=me(b,a.type);b!==c&&(I(Ff,a,a),I(N,c,a))}function Lf(a){Ff.current===a&&(H(N,a),H(Ff,a))}\nfunction O(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}function Mf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:throw a._status=0,b=a._ctor,b=b(),b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)}),a._result=b,b;}}var Nf=Xb.ReactCurrentOwner,Of=(new aa.Component).refs;\nfunction Pf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Uf={isMounted:function(a){return(a=a._reactInternalFiber)?2===kd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Qf();d=Rf(d,a);var e=mf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Sf();of(a,e);Tf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Qf();d=Rf(d,a);var e=mf(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Sf();of(a,e);Tf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Qf();c=Rf(c,a);var d=mf(c);d.tag=\n2;void 0!==b&&null!==b&&(d.callback=b);Sf();of(a,d);Tf(a,c)}};function Vf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!jd(c,d)||!jd(e,f):!0}\nfunction Wf(a,b,c){var d=!1,e=Je;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Nf.currentDispatcher.readContext(f):(e=L(b)?Ke:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Le(a,e):Je);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Uf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Xf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Uf.enqueueReplaceState(b,b.state,null)}\nfunction Yf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Of;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Nf.currentDispatcher.readContext(f):(f=L(b)?Ke:J.current,e.context=Le(a,f));f=a.updateQueue;null!==f&&(sf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Pf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\n\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Uf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(sf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Zf=Array.isArray;\nfunction $f(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?t(\"289\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Of&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"290\",a)}return a}\nfunction ag(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction bg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=$f(a,b,c),d.return=a,d;d=$e(c.type,c.key,c.props,null,a.mode,d);d.ref=$f(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=df(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,g){if(null===b||7!==b.tag)return b=af(c,a.mode,d,g),b.return=a,b;b=e(b,c,d);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Zb:return c=$e(b.type,b.key,b.props,null,a.mode,c),c.ref=$f(a,null,b),c.return=a,c;case $b:return b=df(b,a.mode,c),b.return=a,b}if(Zf(b)||\nlc(b))return b=af(b,a.mode,c,null),b.return=a,b;ag(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Zb:return c.key===e?c.type===ac?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $b:return c.key===e?l(a,b,c,d):null}if(Zf(c)||lc(c))return null!==e?null:m(a,b,c,d,null);ag(a,c)}return null}function z(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Zb:return a=a.get(null===d.key?c:d.key)||null,d.type===ac?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $b:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Zf(d)||lc(d))return a=a.get(c)||null,m(b,a,d,e,null);ag(b,d)}return null}function B(e,g,h,k){for(var l=null,r=null,m=g,u=g=0,p=null;null!==m&&u<h.length;u++){m.index>u?(p=m,m=null):p=m.sibling;var v=x(e,m,h[u],k);if(null===v){null===m&&(m=p);break}a&&\nm&&null===v.alternate&&b(e,m);g=f(v,g,u);null===r?l=v:r.sibling=v;r=v;m=p}if(u===h.length)return c(e,m),l;if(null===m){for(;u<h.length;u++)if(m=q(e,h[u],k))g=f(m,g,u),null===r?l=m:r.sibling=m,r=m;return l}for(m=d(e,m);u<h.length;u++)if(p=z(m,e,u,h[u],k))a&&null!==p.alternate&&m.delete(null===p.key?u:p.key),g=f(p,g,u),null===r?l=p:r.sibling=p,r=p;a&&m.forEach(function(a){return b(e,a)});return l}function Q(e,g,h,k){var l=lc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;\nfor(var m=l=null,r=g,u=g=0,p=null,v=h.next();null!==r&&!v.done;u++,v=h.next()){r.index>u?(p=r,r=null):p=r.sibling;var y=x(e,r,v.value,k);if(null===y){r||(r=p);break}a&&r&&null===y.alternate&&b(e,r);g=f(y,g,u);null===m?l=y:m.sibling=y;m=y;r=p}if(v.done)return c(e,r),l;if(null===r){for(;!v.done;u++,v=h.next())v=q(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(r=d(e,r);!v.done;u++,v=h.next())v=z(r,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&r.delete(null===v.key?u:\nv.key),g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);a&&r.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ac&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Zb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===ac:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===ac?f.props.children:f.props,h);d.ref=$f(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===ac?(d=af(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=$e(f.type,f.key,f.props,null,a.mode,h),h.ref=$f(a,d,f),h.return=a,a=h)}return g(a);case $b:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=cf(f,a.mode,h),d.return=a,a=d),g(a);if(Zf(f))return B(a,d,f,h);if(lc(f))return Q(a,d,f,h);l&&ag(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var cg=bg(!0),dg=bg(!1),eg=null,fg=null,gg=!1;\nfunction hg(a,b){var c=M(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function ig(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}\nfunction jg(a){if(gg){var b=fg;if(b){var c=b;if(!ig(a,b)){b=Fe(c);if(!b||!ig(a,b)){a.effectTag|=2;gg=!1;eg=a;return}hg(eg,c)}eg=a;fg=Ge(b)}else a.effectTag|=2,gg=!1,eg=a}}function kg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;eg=a}function lg(a){if(a!==eg)return!1;if(!gg)return kg(a),gg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ce(b,a.memoizedProps))for(b=fg;b;)hg(a,b),b=Fe(b);kg(a);fg=eg?Fe(a.stateNode):null;return!0}function mg(){fg=eg=null;gg=!1}var ng=Xb.ReactCurrentOwner;\nfunction P(a,b,c,d){b.child=null===a?dg(b,null,c,d):cg(b,a.child,c,d)}function og(a,b,c,d,e){c=c.render;var f=b.ref;Cf(b,e);d=c(d,f);b.effectTag|=1;P(a,b,d,e);return b.child}\nfunction pg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Xe(g)&&void 0===g.defaultProps&&null===c.compare)return b.tag=15,b.type=g,qg(a,b,g,d,e,f);a=$e(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:jd,c(e,d)&&a.ref===b.ref))return rg(a,b,f);b.effectTag|=1;a=Ze(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction qg(a,b,c,d,e,f){return null!==a&&e<f&&jd(a.memoizedProps,d)&&a.ref===b.ref?rg(a,b,f):sg(a,b,c,d,f)}function tg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function sg(a,b,c,d,e){var f=L(c)?Ke:J.current;f=Le(b,f);Cf(b,e);c=c(d,f);b.effectTag|=1;P(a,b,c,e);return b.child}\nfunction ug(a,b,c,d,e){if(L(c)){var f=!0;Qe(b)}else f=!1;Cf(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Wf(b,c,d,e),Yf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Nf.currentDispatcher.readContext(l):(l=L(c)?Ke:J.current,l=Le(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Xf(b,g,d,l);jf=!1;var x=b.memoizedState;k=g.state=x;var z=b.updateQueue;null!==z&&(sf(b,z,d,g,e),k=b.memoizedState);h!==d||x!==k||K.current||jf?(\"function\"===typeof m&&(Pf(b,c,m,d),k=b.memoizedState),(h=jf||Vf(b,c,h,d,x,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:O(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=Nf.currentDispatcher.readContext(l):(l=L(c)?Ke:J.current,l=Le(b,l)),m=c.getDerivedStateFromProps,\n(q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Xf(b,g,d,l),jf=!1,k=b.memoizedState,x=g.state=k,z=b.updateQueue,null!==z&&(sf(b,z,d,g,e),x=b.memoizedState),h!==d||k!==x||K.current||jf?(\"function\"===typeof m&&(Pf(b,c,m,d),x=b.memoizedState),(m=jf||Vf(b,c,h,d,k,x,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||\n(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,x,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=\nd,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return vg(a,b,c,d,f,e)}\nfunction vg(a,b,c,d,e,f){tg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Re(b,c,!1),rg(a,b,f);d=b.stateNode;ng.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=cg(b,a.child,null,f),b.child=cg(b,null,h,f)):P(a,b,h,f);b.memoizedState=d.state;e&&Re(b,c,!0);return b.child}function wg(a){var b=a.stateNode;b.pendingContext?Oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Oe(a,b.context,!1);If(a,b.containerInfo)}\nfunction xg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;null===a?g?(g=e.fallback,e=af(null,d,0,null),0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=af(g,d,c,null),e.sibling=d,c=e,c.return=d.return=b):c=d=dg(b,null,e.children,c):null!==a.memoizedState?(d=a.child,a=d.sibling,g?(c=e.fallback,e=Ze(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==b.memoizedState?\nb.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Ze(a,c,a.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=cg(b,d.child,e.children,c)):(a=a.child,g?(g=e.fallback,e=af(null,d,0,null),e.child=a,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=af(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=cg(b,a,e.children,c));b.memoizedState=f;b.child=c;return d}\nfunction rg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=Ze(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ze(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction yg(a,b,c){var d=b.expirationTime;if(null!==a&&a.memoizedProps===b.pendingProps&&!K.current&&d<c){switch(b.tag){case 3:wg(b);mg();break;case 5:Kf(b);break;case 1:L(b.type)&&Qe(b);break;case 4:If(b,b.stateNode.containerInfo);break;case 10:Af(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return xg(a,b,c);b=rg(a,b,c);return null!==b?b.sibling:null}}return rg(a,b,c)}b.expirationTime=0;switch(b.tag){case 2:d=b.elementType;null!==\na&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Le(b,J.current);Cf(b,c);e=d(a,e);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;if(L(d)){var f=!0;Qe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Pf(b,d,g,a);e.updater=Uf;b.stateNode=e;e._reactInternalFiber=b;Yf(b,d,a,c);b=vg(null,b,d,!0,f,c)}else b.tag=0,P(null,b,e,c),b=b.child;\nreturn b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=Mf(e);b.type=a;e=b.tag=Ye(a);f=O(a,f);g=void 0;switch(e){case 0:g=sg(null,b,a,f,c);break;case 1:g=ug(null,b,a,f,c);break;case 11:g=og(null,b,a,f,c);break;case 14:g=pg(null,b,a,O(a.type,f),d,c);break;default:t(\"283\",a)}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),sg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),ug(a,b,d,\ne,c);case 3:wg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;sf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)mg(),b=rg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)fg=Ge(b.stateNode.containerInfo),eg=b,e=gg=!0;e?(b.effectTag|=2,b.child=dg(b,null,d,c)):(P(a,b,d,c),mg());b=b.child}return b;case 5:return Kf(b),null===a&&jg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ce(d,e)?g=null:null!==\nf&&Ce(d,f)&&(b.effectTag|=16),tg(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=1,b=null):(P(a,b,g,c),b=b.child),b;case 6:return null===a&&jg(b),null;case 13:return xg(a,b,c);case 4:return If(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=cg(b,null,d,c):P(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),og(a,b,d,e,c);case 7:return P(a,b,b.pendingProps,c),b.child;case 8:return P(a,b,b.pendingProps.children,c),b.child;case 12:return P(a,b,b.pendingProps.children,\nc),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Af(b,f);if(null!==g){var h=g.value;f=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!K.current){b=rg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(1===g.tag){var k=mf(c);k.tag=2;of(g,k)}g.expirationTime<\nc&&(g.expirationTime=c);k=g.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(l.childExpirationTime<c)l.childExpirationTime=c,null!==k&&k.childExpirationTime<c&&(k.childExpirationTime=c);else if(null!==k&&k.childExpirationTime<c)k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=10===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==k;){if(k===b){k=null;break}g=k.sibling;\nif(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}P(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Cf(b,c),e=Df(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,P(a,b,d,c),b.child;case 14:return e=b.type,f=O(e.type,b.pendingProps),pg(a,b,e,f,d,c);case 15:return qg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:O(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Qe(b)):\na=!1,Cf(b,c),Wf(b,d,e,c),Yf(b,d,e,c),vg(null,b,d,!0,a,c);default:t(\"156\")}}function zg(a){a.effectTag|=4}var Ag=void 0,Bg=void 0,Fg=void 0,Gg=void 0;Ag=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bg=function(){};\nFg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;Hf(N.current);a=null;switch(c){case \"input\":f=Ac(g,f);d=Ac(g,d);a=[];break;case \"option\":f=ee(g,f);d=ee(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=ge(g,f);d=ge(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=ye)}ve(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&xe(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&zg(b)}};Gg=function(a,b,c,d){c!==d&&zg(b)};\nfunction Hg(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=nc(c));null!==c&&mc(c.type);b=b.value;null!==a&&1===a.tag&&mc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Ig(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Jg(a,c)}else b.current=null}\nfunction Kg(a){\"function\"===typeof Te&&Te(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(null!==d){var e=a;try{d()}catch(f){Jg(e,f)}}c=c.next}while(c!==b)}break;case 1:Ig(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){Jg(a,f)}break;case 5:Ig(a);break;case 4:Lg(a)}}\nfunction Mg(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Ng(a){a:{for(var b=a.return;null!==b;){if(Mg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(pe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Mg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=ye)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction Lg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(Kg(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?(d=b.stateNode.containerInfo,e=!0):Kg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Og(a,b){switch(b.tag){case 0:case 11:case 14:case 15:break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Ha]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cc(c,d);we(a,e);b=we(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?te(c,h):\"dangerouslySetInnerHTML\"===g?oe(c,h):\"children\"===g?pe(c,h):yc(c,g,h,b)}switch(a){case \"input\":Dc(c,d);break;case \"textarea\":ie(c,\nd);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?fe(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?fe(c,!!d.multiple,d.defaultValue,!0):fe(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 6:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=Qf()));if(null!==a)a:for(b=c=a;;){if(5===\nb.tag)a=b.stateNode,d?a.style.display=\"none\":(a=b.stateNode,f=b.memoizedProps.style,f=void 0!==f&&null!==f&&f.hasOwnProperty(\"display\")?f.display:null,a.style.display=se(\"display\",f));else if(6===b.tag)b.stateNode.nodeValue=d?\"\":b.memoizedProps;else if(13===b.tag&&null!==b.memoizedState){a=b.child.sibling;a.return=b;b=a;continue}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===c)break a;for(;null===b.sibling;){if(null===b.return||b.return===c)break a;b=b.return}b.sibling.return=\nb.return;b=b.sibling}break;case 17:break;default:t(\"163\")}}function Pg(a,b,c){c=mf(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qg(d);Hg(a,b)};return c}\nfunction Rg(a,b,c){c=mf(c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Sg?Sg=new Set([this]):Sg.add(this));var c=b.value,e=b.stack;Hg(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Tg(a){switch(a.tag){case 1:L(a.type)&&Me(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Jf(a),Ne(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Lf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 4:return Jf(a),null;case 10:return Bf(a),null;default:return null}}\nvar Ug={readContext:Df},Vg=Xb.ReactCurrentOwner,Wg=1073741822,Xg=0,Yg=!1,R=null,S=null,T=0,Zg=-1,$g=!1,U=null,ah=!1,bh=null,ch=null,Sg=null;function dh(){if(null!==R)for(var a=R.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Me(b);break;case 3:Jf(b);Ne(b);break;case 5:Lf(b);break;case 4:Jf(b);break;case 10:Bf(b)}a=a.return}S=null;T=0;Zg=-1;$g=!1;R=null}function Sf(){null!==ch&&(ba.unstable_cancelCallback(bh),ch())}\nfunction eh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){R=a;a:{var e=b;b=a;var f=T;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:L(b.type)&&Me(b);break;case 3:Jf(b);Ne(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)lg(b),b.effectTag&=-3;Bg(b);break;case 5:Lf(b);var h=Hf(Gf.current);f=b.type;if(null!==e&&null!=b.stateNode)Fg(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var k=Hf(N.current);if(lg(b)){g=b;e=g.stateNode;var l=g.type,m=g.memoizedProps,q=h;e[Ga]=g;e[Ha]=m;f=void 0;h=l;switch(h){case \"iframe\":case \"object\":G(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<bb.length;l++)G(bb[l],e);break;case \"source\":G(\"error\",e);break;case \"img\":case \"image\":case \"link\":G(\"error\",e);G(\"load\",e);break;case \"form\":G(\"reset\",e);G(\"submit\",e);break;case \"details\":G(\"toggle\",e);break;case \"input\":Bc(e,m);G(\"invalid\",e);xe(q,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};G(\"invalid\",e);xe(q,\"onChange\");break;case \"textarea\":he(e,m),G(\"invalid\",e),xe(q,\"onChange\")}ve(h,m);l=null;for(f in m)m.hasOwnProperty(f)&&(k=m[f],\"children\"===f?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(f)&&null!=k&&xe(q,f));switch(h){case \"input\":Vb(e);Fc(e,m,!0);break;case \"textarea\":Vb(e);je(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=ye)}f=l;g.updateQueue=f;g=null!==f?!0:!1;g&&zg(b)}else{m=b;e=f;q=g;l=9===h.nodeType?h:h.ownerDocument;k===ke.html&&(k=le(e));k===ke.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof q.is?l=l.createElement(e,{is:q.is}):(l=l.createElement(e),\"select\"===e&&q.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ga]=m;e[Ha]=g;Ag(e,b,!1,!1);q=e;l=f;m=g;var x=h,z=we(l,m);switch(l){case \"iframe\":case \"object\":G(\"load\",\nq);h=m;break;case \"video\":case \"audio\":for(h=0;h<bb.length;h++)G(bb[h],q);h=m;break;case \"source\":G(\"error\",q);h=m;break;case \"img\":case \"image\":case \"link\":G(\"error\",q);G(\"load\",q);h=m;break;case \"form\":G(\"reset\",q);G(\"submit\",q);h=m;break;case \"details\":G(\"toggle\",q);h=m;break;case \"input\":Bc(q,m);h=Ac(q,m);G(\"invalid\",q);xe(x,\"onChange\");break;case \"option\":h=ee(q,m);break;case \"select\":q._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});G(\"invalid\",q);xe(x,\"onChange\");break;case \"textarea\":he(q,\nm);h=ge(q,m);G(\"invalid\",q);xe(x,\"onChange\");break;default:h=m}ve(l,h);k=void 0;var B=l,Q=q,v=h;for(k in v)if(v.hasOwnProperty(k)){var r=v[k];\"style\"===k?te(Q,r):\"dangerouslySetInnerHTML\"===k?(r=r?r.__html:void 0,null!=r&&oe(Q,r)):\"children\"===k?\"string\"===typeof r?(\"textarea\"!==B||\"\"!==r)&&pe(Q,r):\"number\"===typeof r&&pe(Q,\"\"+r):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=r&&xe(x,k):null!=r&&yc(Q,k,r,z))}switch(l){case \"input\":Vb(q);\nFc(q,m,!1);break;case \"textarea\":Vb(q);je(q,m);break;case \"option\":null!=m.value&&q.setAttribute(\"value\",\"\"+zc(m.value));break;case \"select\":h=q;h.multiple=!!m.multiple;q=m.value;null!=q?fe(h,!!m.multiple,q,!1):null!=m.defaultValue&&fe(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(q.onclick=ye)}(g=Be(f,g))&&zg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?Gg(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?t(\"166\"):void 0),e=Hf(Gf.current),Hf(N.current),lg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Ga]=g,(g=f.nodeValue!==e)&&zg(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Ga]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;R=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g!==f||0===(b.effectTag&1)&&g)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Jf(b);Bg(b);break;case 10:Bf(b);break;case 9:break;case 14:break;case 17:L(b.type)&&Me(b);break;default:t(\"156\")}R=null}b=a;if(1===T||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==R)return R;null!==c&&0===(c.effectTag&1024)&&(null===\nc.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Tg(a,T);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction fh(a){var b=yg(a.alternate,a,T);a.memoizedProps=a.pendingProps;null===b&&(b=eh(a));Vg.current=null;return b}\nfunction gh(a,b){Yg?t(\"243\"):void 0;Sf();Yg=!0;Vg.currentDispatcher=Ug;var c=a.nextExpirationTimeToWorkOn;if(c!==T||a!==S||null===R)dh(),S=a,T=c,R=Ze(S.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;do{try{if(b)for(;null!==R&&!hh();)R=fh(R);else for(;null!==R;)R=fh(R)}catch(B){if(zf=yf=xf=null,null===R)d=!0,Qg(B);else{null===R?t(\"271\"):void 0;var e=R,f=e.return;if(null===f)d=!0,Qg(B);else{a:{var g=a,h=f,k=e,l=B;f=T;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==l&&\"object\"===\ntypeof l&&\"function\"===typeof l.then){var m=l;l=h;var q=-1,x=-1;do{if(13===l.tag){var z=l.alternate;if(null!==z&&(z=z.memoizedState,null!==z)){x=10*(1073741822-z.timedOutAt);break}z=l.pendingProps.maxDuration;if(\"number\"===typeof z)if(0>=z)q=0;else if(-1===q||z<q)q=z}l=l.return}while(null!==l);l=h;do{if(z=13===l.tag)z=void 0===l.memoizedProps.fallback?!1:null===l.memoizedState;if(z){h=ih.bind(null,g,l,k,0===(l.mode&1)?1073741823:f);m.then(h,h);if(0===(l.mode&1)){l.effectTag|=64;k.effectTag&=-1957;\n1===k.tag&&null===k.alternate&&(k.tag=17);k.expirationTime=f;break a}-1===q?g=1073741823:(-1===x&&(x=10*(1073741822-hf(g,f))-5E3),g=x+q);0<=g&&Zg<g&&(Zg=g);l.effectTag|=2048;l.expirationTime=f;break a}l=l.return}while(null!==l);l=Error((mc(k.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+nc(k))}$g=!0;l=vf(l,k);g=h;do{switch(g.tag){case 3:k=\nl;g.effectTag|=2048;g.expirationTime=f;f=Pg(g,k,f);pf(g,f);break a;case 1:if(k=l,h=g.type,m=g.stateNode,0===(g.effectTag&64)&&(\"function\"===typeof h.getDerivedStateFromError||null!==m&&\"function\"===typeof m.componentDidCatch&&(null===Sg||!Sg.has(m)))){g.effectTag|=2048;g.expirationTime=f;f=Rg(g,k,f);pf(g,f);break a}}g=g.return}while(null!==g)}R=eh(e);continue}}}break}while(1);Yg=!1;zf=yf=xf=Vg.currentDispatcher=null;if(d)S=null,a.finishedWork=null;else if(null!==R)a.finishedWork=null;else{d=a.current.alternate;\nnull===d?t(\"281\"):void 0;S=null;if($g){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<c||0!==f&&f<c||0!==g&&g<c){gf(a,c);jh(a,d,c,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;c=a.nextExpirationTimeToWorkOn=c;b=a.expirationTime=1073741823;jh(a,d,c,b,-1);return}}b&&-1!==Zg?(gf(a,c),b=10*(1073741822-hf(a,c)),b<Zg&&(Zg=b),b=10*(1073741822-Qf()),b=Zg-b,jh(a,d,c,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=c,a.finishedWork=d)}}\nfunction Jg(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Sg||!Sg.has(d))){a=vf(b,a);a=Rg(c,a,1073741823);of(c,a);Tf(c,1073741823);return}break;case 3:a=vf(b,a);a=Pg(c,a,1073741823);of(c,a);Tf(c,1073741823);return}c=c.return}3===a.tag&&(c=vf(b,a),c=Pg(a,c,1073741823),of(a,c),Tf(a,1073741823))}\nfunction Rf(a,b){0!==Xg?a=Xg:Yg?a=ah?1073741823:T:b.mode&1?(a=kh?1073741822-10*(((1073741822-a+15)/10|0)+1):1073741822-25*(((1073741822-a+500)/25|0)+1),null!==S&&a===T&&--a):a=1073741823;kh&&(0===lh||a<lh)&&(lh=a);return a}\nfunction ih(a,b,c,d){var e=a.earliestSuspendedTime;var f=a.latestSuspendedTime;if(0!==e&&d<=e&&d>=f){f=e=d;a.didError=!1;var g=a.latestPingedTime;if(0===g||g>f)a.latestPingedTime=f;ff(f,a)}else e=Qf(),e=Rf(e,b),ef(a,e);0!==(b.mode&1)&&a===S&&T===d&&(S=null);mh(b,e);0===(b.mode&1)&&(mh(c,e),1===c.tag&&null!==c.stateNode&&(b=mf(e),b.tag=2,of(c,b)));c=a.expirationTime;0!==c&&nh(a,c)}\nfunction mh(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction Tf(a,b){a=mh(a,b);null!==a&&(!Yg&&0!==T&&b>T&&dh(),ef(a,b),Yg&&!ah&&S===a||nh(a,a.expirationTime),oh>ph&&(oh=0,t(\"185\")))}function qh(a,b,c,d,e){var f=Xg;Xg=1073741823;try{return a(b,c,d,e)}finally{Xg=f}}var rh=null,V=null,sh=0,th=void 0,W=!1,uh=null,X=0,lh=0,vh=!1,wh=null,Z=!1,xh=!1,kh=!1,yh=null,zh=ba.unstable_now(),Ah=1073741822-(zh/10|0),Bh=Ah,ph=50,oh=0,Ch=null;function Dh(){Ah=1073741822-((ba.unstable_now()-zh)/10|0)}\nfunction Eh(a,b){if(0!==sh){if(b<sh)return;null!==th&&ba.unstable_cancelCallback(th)}sh=b;a=ba.unstable_now()-zh;th=ba.unstable_scheduleCallback(Fh,{timeout:10*(1073741822-b)-a})}function jh(a,b,c,d,e){a.expirationTime=d;0!==e||hh()?0<e&&(a.timeoutHandle=De(Gh.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Gh(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;Dh();Bh=Ah;Hh(a,c)}function Qf(){if(W)return Bh;Ih();if(0===X||1===X)Dh(),Bh=Ah;return Bh}\nfunction nh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===V?(rh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=rh)):b>a.expirationTime&&(a.expirationTime=b);W||(Z?xh&&(uh=a,X=1073741823,Jh(a,1073741823,!1)):1073741823===b?Kh(1073741823,!1):Eh(a,b))}\nfunction Ih(){var a=0,b=null;if(null!==V)for(var c=V,d=rh;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===V?t(\"244\"):void 0;if(d===d.nextScheduledRoot){rh=V=d.nextScheduledRoot=null;break}else if(d===rh)rh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=rh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===V)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}uh=b;X=a}var Lh=!1;function hh(){return Lh?!0:ba.unstable_shouldYield()?Lh=!0:!1}function Fh(){try{if(!hh()&&null!==rh){Dh();var a=rh;do{var b=a.expirationTime;0!==b&&Ah<=b&&(a.nextExpirationTimeToWorkOn=Ah);a=a.nextScheduledRoot}while(a!==rh)}Kh(0,!0)}finally{Lh=!1}}\nfunction Kh(a,b){Ih();if(b)for(Dh(),Bh=Ah;null!==uh&&0!==X&&a<=X&&!(Lh&&Ah>X);)Jh(uh,X,Ah>X),Ih(),Dh(),Bh=Ah;else for(;null!==uh&&0!==X&&a<=X;)Jh(uh,X,!1),Ih();b&&(sh=0,th=null);0!==X&&Eh(uh,X);oh=0;Ch=null;if(null!==yh)for(a=yh,yh=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){vh||(vh=!0,wh=d)}}if(vh)throw a=wh,wh=null,vh=!1,a;}function Hh(a,b){W?t(\"253\"):void 0;uh=a;X=b;Jh(a,b,!1);Kh(1073741823,!1)}\nfunction Jh(a,b,c){W?t(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Mh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),gh(a,c),d=a.finishedWork,null!==d&&(hh()?a.finishedWork=d:Mh(a,d,b)))}else d=a.finishedWork,null!==d?Mh(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,Ee(d)),gh(a,c),d=a.finishedWork,null!==d&&Mh(a,d,b));W=!1}\nfunction Mh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===yh?yh=[d]:yh.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===Ch?oh++:(Ch=a,oh=0);ah=Yg=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=e>d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=\n0):(e=a.latestPendingTime,0!==e&&(e>d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?ef(a,d):d<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,ef(a,d)):d>e&&ef(a,d));ff(0,a);Vg.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ze=Hd;e=Td();if(Ud(e)){if(\"selectionStart\"in e)var f={start:e.selectionStart,\nend:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(db){f=null;break a}var l=0,m=-1,q=-1,x=0,z=0,B=e,Q=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(q=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;Q=B;B=v}for(;;){if(B===e)break b;Q===f&&\n++x===h&&(m=l);Q===k&&++z===g&&(q=l);if(null!==(v=B.nextSibling))break;B=Q;Q=B.parentNode}B=v}f=-1===m||-1===q?null:{start:m,end:q}}else f=null}f=f||{start:0,end:0}}else f=null;Ae={focusedElem:e,selectionRange:f};Hd=!1;for(U=d;null!==U;){e=!1;f=void 0;try{for(;null!==U;){if(U.effectTag&256)a:{var r=U.alternate;h=U;switch(h.tag){case 0:case 11:case 15:break a;case 1:if(h.effectTag&256&&null!==r){var u=r.memoizedProps,y=r.memoizedState,Y=h.stateNode,Th=Y.getSnapshotBeforeUpdate(h.elementType===h.type?\nu:O(h.type,u),y);Y.__reactInternalSnapshotBeforeUpdate=Th}break a;case 3:case 5:case 6:case 4:case 17:break a;default:t(\"163\")}}U=U.nextEffect}}catch(db){e=!0,f=db}e&&(null===U?t(\"178\"):void 0,Jg(U,f),null!==U&&(U=U.nextEffect))}for(U=d;null!==U;){r=!1;u=void 0;try{for(;null!==U;){var w=U.effectTag;w&16&&pe(U.stateNode,\"\");if(w&128){var C=U.alternate;if(null!==C){var p=C.ref;null!==p&&(\"function\"===typeof p?p(null):p.current=null)}}switch(w&14){case 2:Ng(U);U.effectTag&=-3;break;case 6:Ng(U);U.effectTag&=\n-3;Og(U.alternate,U);break;case 4:Og(U.alternate,U);break;case 8:y=U,Lg(y),y.return=null,y.child=null,y.alternate&&(y.alternate.child=null,y.alternate.return=null)}U=U.nextEffect}}catch(db){r=!0,u=db}r&&(null===U?t(\"178\"):void 0,Jg(U,u),null!==U&&(U=U.nextEffect))}p=Ae;C=Td();w=p.focusedElem;u=p.selectionRange;if(C!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(C=u.start,p=u.end,void 0===p&&(p=C),\"selectionStart\"in w?(w.selectionStart=C,w.selectionEnd=Math.min(p,\nw.value.length)):(p=(C=w.ownerDocument||document)&&C.defaultView||window,p.getSelection&&(p=p.getSelection(),y=w.textContent.length,r=Math.min(u.start,y),u=void 0===u.end?r:Math.min(u.end,y),!p.extend&&r>u&&(y=u,u=r,r=y),y=Rd(w,r),Y=Rd(w,u),y&&Y&&(1!==p.rangeCount||p.anchorNode!==y.node||p.anchorOffset!==y.offset||p.focusNode!==Y.node||p.focusOffset!==Y.offset)&&(C=C.createRange(),C.setStart(y.node,y.offset),p.removeAllRanges(),r>u?(p.addRange(C),p.extend(Y.node,Y.offset)):(C.setEnd(Y.node,Y.offset),\np.addRange(C))))));C=[];for(p=w;p=p.parentNode;)1===p.nodeType&&C.push({element:p,left:p.scrollLeft,top:p.scrollTop});\"function\"===typeof w.focus&&w.focus();for(w=0;w<C.length;w++)p=C[w],p.element.scrollLeft=p.left,p.element.scrollTop=p.top}Ae=null;Hd=!!ze;ze=null;a.current=b;for(U=d;null!==U;){d=!1;w=void 0;try{for(C=c;null!==U;){var Fb=U.effectTag;if(Fb&36){var Gb=U.alternate;p=U;r=C;switch(p.tag){case 0:case 11:case 15:break;case 1:var wc=p.stateNode;if(p.effectTag&4)if(null===Gb)wc.componentDidMount();\nelse{var ci=p.elementType===p.type?Gb.memoizedProps:O(p.type,Gb.memoizedProps);wc.componentDidUpdate(ci,Gb.memoizedState,wc.__reactInternalSnapshotBeforeUpdate)}var Cg=p.updateQueue;null!==Cg&&tf(p,Cg,wc,r);break;case 3:var Dg=p.updateQueue;if(null!==Dg){u=null;if(null!==p.child)switch(p.child.tag){case 5:u=p.child.stateNode;break;case 1:u=p.child.stateNode}tf(p,Dg,u,r)}break;case 5:var di=p.stateNode;null===Gb&&p.effectTag&4&&Be(p.type,p.memoizedProps)&&di.focus();break;case 6:break;case 4:break;\ncase 12:break;case 13:break;case 17:break;default:t(\"163\")}}if(Fb&128){var Ic=U.ref;if(null!==Ic){var Eg=U.stateNode;switch(U.tag){case 5:var ce=Eg;break;default:ce=Eg}\"function\"===typeof Ic?Ic(ce):Ic.current=ce}}U=U.nextEffect}}catch(db){d=!0,w=db}d&&(null===U?t(\"178\"):void 0,Jg(U,w),null!==U&&(U=U.nextEffect))}Yg=ah=!1;\"function\"===typeof Se&&Se(b.stateNode);Fb=b.expirationTime;b=b.childExpirationTime;b=b>Fb?b:Fb;0===b&&(Sg=null);a.expirationTime=b;a.finishedWork=null}\nfunction Qg(a){null===uh?t(\"246\"):void 0;uh.expirationTime=0;vh||(vh=!0,wh=a)}function Nh(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Kh(1073741823,!1)}}function Oh(a,b){if(Z&&!xh){xh=!0;try{return a(b)}finally{xh=!1}}return a(b)}function Ph(a,b,c){if(kh)return a(b,c);Z||W||0===lh||(Kh(lh,!1),lh=0);var d=kh,e=Z;Z=kh=!0;try{return a(b,c)}finally{kh=d,(Z=e)||W||Kh(1073741823,!1)}}\nfunction Qh(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===kd(c)&&1===c.tag?void 0:t(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(L(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);t(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(L(h)){c=Pe(c,h,g);break a}}c=g}else c=Je;null===b.context?b.context=c:b.pendingContext=c;b=e;e=mf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nSf();of(f,e);Tf(f,d);return d}function Rh(a,b,c,d){var e=b.current,f=Qf();e=Rf(f,e);return Qh(a,b,c,e,d)}function Sh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Uh(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$b,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nCb=function(a,b,c){switch(b){case \"input\":Dc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=La(d);e?void 0:t(\"90\");Wb(d);Dc(d,e)}}}break;case \"textarea\":ie(a,c);break;case \"select\":b=c.value,null!=b&&fe(a,!!c.multiple,b,!1)}};\nfunction Vh(a){var b=1073741822-25*(((1073741822-Qf()+500)/25|0)+1);b>=Wg&&(b=Wg-1);this._expirationTime=Wg=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Vh.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Wh;Qh(a,b,null,c,d._onCommit);return d};\nVh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nVh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Hh(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Vh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Wh(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Wh.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nWh.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction Xh(a,b,c){b=M(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nXh.prototype.render=function(a,b){var c=this._internalRoot,d=new Wh;b=void 0===b?null:b;null!==b&&d.then(b);Rh(a,c,null,d._onCommit);return d};Xh.prototype.unmount=function(a){var b=this._internalRoot,c=new Wh;a=void 0===a?null:a;null!==a&&c.then(a);Rh(null,b,null,c._onCommit);return c};Xh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Wh;c=void 0===c?null:c;null!==c&&e.then(c);Rh(b,d,a,e._onCommit);return e};\nXh.prototype.createBatch=function(){var a=new Vh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Yh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Kb=Nh;Lb=Ph;Mb=function(){W||0===lh||(Kh(lh,!1),lh=0)};\nfunction Zh(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Xh(a,!1,b)}\nfunction $h(a,b,c,d,e){Yh(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Sh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Zh(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Sh(f._internalRoot);h.call(a)}}Oh(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Sh(f._internalRoot)}\nfunction ai(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Yh(b)?void 0:t(\"200\");return Uh(a,b,null,c)}\nvar bi={createPortal:ai,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=nd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return $h(null,a,b,!0,c)},render:function(a,b,c){return $h(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return $h(a,b,c,!1,d)},unmountComponentAtNode:function(a){Yh(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(Oh(function(){$h(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ai.apply(void 0,arguments)},unstable_batchedUpdates:Nh,unstable_interactiveUpdates:Ph,flushSync:function(a,b){W?t(\"187\"):void 0;var c=Z;Z=!0;try{return qh(a,b)}finally{Z=c,Kh(1073741823,!1)}},unstable_flushControlled:function(a){var b=Z;Z=!0;try{qh(a)}finally{(Z=b)||W||Kh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ja,\nKa,La,Ca.injectEventPluginsByName,qa,Ra,function(a){za(a,Qa)},Ib,Jb,Jd,Ea]},unstable_createRoot:function(a,b){Yh(a)?void 0:t(\"299\",\"unstable_createRoot\");return new Xh(a,!0,null!=b&&!0===b.hydrate)}};(function(a){var b=a.findFiberByHostInstance;return Ve(n({},a,{findHostInstanceByFiber:function(a){a=nd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ia,bundleType:0,version:\"16.6.3\",rendererPackageName:\"react-dom\"});\nvar ei={default:bi},fi=ei&&bi||ei;module.exports=fi.default||fi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scheduler/index.js\n// module id = 18\n// module chunks = 0","/** @license React v16.6.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,f=!1,h=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var e=h,Q=l;h=a;l=b;try{var g=c()}finally{h=e,l=Q}if(\"function\"===typeof g)if(g={callback:g,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=g.next=g.previous=g;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=g,p());b=c.previous;b.next=c.previous=g;g.next=c;g.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=f;f=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,f=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w;\nif(\"undefined\"!==typeof window&&window._schedMock){var G=window._schedMock;r=G[0];q=G[1];w=G[2]}else if(\"undefined\"===typeof window||\"function\"!==typeof window.addEventListener){var H=null,I=-1,J=function(a,b){if(null!==H){var c=H;H=null;try{I=b,c(a)}finally{I=-1}}};r=function(a,b){-1!==I?setTimeout(r,0,a,b):(H=a,setTimeout(J,b,!0,b),setTimeout(J,1073741823,!1,1073741823))};q=function(){H=null};w=function(){return!1};exports.unstable_now=function(){return-1===I?0:I}}else{\"undefined\"!==typeof console&&\n(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);\nwindow.addEventListener(\"message\",function(a){if(a.source===window&&a.data===T){L=!1;a=K;var b=M;K=null;M=-1;var c=exports.unstable_now(),e=!1;if(0>=P-c)if(-1!==b&&b<=c)e=!0;else{N||(N=!0,E(U));K=a;M=b;return}if(null!==a){O=!0;try{a(e)}finally{O=!1}}}},!1);var U=function(a){if(null!==K){E(U);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,window.postMessage(T,\"*\"))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?window.postMessage(T,\"*\"):N||(N=!0,E(U))};q=function(){K=null;L=!1;M=-1}}\nexports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=h,e=k;h=a;k=exports.unstable_now();try{return b()}finally{h=c,k=e,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(h){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:h,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var e=d;do{if(e.expirationTime>b){c=e;break}e=e.next}while(e!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=h;return function(){var c=h,e=k;h=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{h=c,k=e,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return h};\nexports.unstable_shouldYield=function(){return!f&&(null!==d&&d.expirationTime<l||w())};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scheduler/cjs/scheduler.production.min.js\n// module id = 19\n// module chunks = 0","import * as React from 'react';\n\nimport Body from './Body';\nimport Canvas from './Canvas';\nimport Orbit from './Orbit';\nimport Player from './Player';\nimport { makeTimeSeries } from './timeSeries';\nimport Trajectory from './Trajectory';\n\nimport * as simData from './trajectory.json';\n\nimport './App.css';\n\nfunction transpose(arr: number[][]): number[][] {\n  const result: number[][] = arr[0].map(x => []);\n  arr.forEach(row => {\n    result.forEach((col, j) => {\n      col.push(row[j]);\n    });\n  });\n  return result;\n}\n\nexport default class App extends React.Component {\n  public state = {\n    playing: false,\n    t: 0,\n  };\n  // private a: number[];\n  private sx: number[];\n  private sy: number[];\n  // private sz: number[];\n  // private x: number[];\n  // private y: number[];\n  // private mx: number[];\n  // private my: number[];\n  private data: number[][];\n  private interval?: NodeJS.Timeout;\n  private maxTime: number;\n  public constructor(props: {}) {\n    super(props);\n    const data = this.data = transpose(simData);\n    const times = data[3];\n    this.maxTime = times[times.length - 1];\n    \n    // this.a = makeTimeSeries(times, data[4]);\n    this.sx = makeTimeSeries(times, data[0]);\n    this.sy = makeTimeSeries(times, data[1]);\n    // this.sz = makeTimeSeries(times, data[2]);\n  }\n  public componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n  public render() {\n    const t = this.state.t;\n    return (\n      <div className=\"App\">\n        <Canvas>\n          <Body x={0} y={0} z={0} r={6.955e6} color={'blue'} focused={true} />\n          <Body x={this.sx[t]} y={this.sy[t]} z={0} r={1.7371e6} color={'orange'}  />\n          <Orbit r={2e7} color=\"white\" />\n          <Trajectory x={this.data[0]} y={this.data[1]} z={this.data[2]} color={'orange'} />\n        </Canvas>\n        {/* <div style={{\n          color: 'white',\n          left: '1.5rem',\n          position: 'absolute',\n          top: '1rem',\n        }}>{this.a[t]}</div> */}\n        <Player\n          min={0}\n          max={this.maxTime}\n          time={t}\n          playing={this.state.playing}\n          onPlay={this.handlePlay}\n          onPause={this.handlePause}\n          onTimeChange={this.handleTimeChange}\n        />\n      </div>\n    );\n  }\n  private tick = () => {\n    this.setState({ t: (this.state.t + 400) % this.maxTime });\n  }\n  private handlePlay = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n    this.interval = setInterval(this.tick, 16);\n    this.setState({ playing: true });\n  }\n  private handlePause = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = undefined;\n    }\n    this.setState({ playing: false });\n  }\n  private handleTimeChange = (t: number) => {\n    this.setState({ t });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.tsx","import * as React from 'react';\nimport * as THREE from 'three';\n\nimport Canvas, { instance } from './Canvas';\nimport { SPHERE_GEO } from './common';\n\ninterface IBodyProps {\n  color: string;\n  r: number;\n  x: number;\n  y: number;\n  z: number;\n  focused: boolean;\n}\n\nexport default class Body extends React.Component<IBodyProps> {\n  public static defaultProps: Partial<IBodyProps> = {\n    color: 'black',\n    focused: false,\n    r: 1,\n    x: 0,\n    y: 0,\n    z: 0,\n  };\n  private frame: THREE.Object3D;\n  private object: THREE.Mesh;\n  private group = new THREE.Group();\n  public constructor(props: IBodyProps) {\n    super(props);\n    const mat = new THREE.MeshBasicMaterial({color: this.props.color});\n    const obj = new THREE.Mesh(SPHERE_GEO, mat);\n    obj.scale.setScalar(this.props.r);\n    this.object = obj;\n    this.group.add(obj);\n  }\n  public componentDidMount() {\n    this.group.position.set(this.props.x, this.props.y, this.props.z);\n    if (this.props.focused) {\n      console.log(instance.cameraFrame);\n      this.group.add(instance.cameraFrame);\n    }\n  }\n  public componentWillReceiveProps(props: IBodyProps) {\n    if (props.color !== this.props.color) {\n      (this.object.material as THREE.MeshBasicMaterial).color = new THREE.Color(props.color);\n    }\n    this.group.position.set(props.x, props.y, props.z);\n  }\n  public render() {\n    return <Canvas.FrameContext>{this.handleFrame}</Canvas.FrameContext>;\n  }\n  private handleFrame = (frame: THREE.Object3D) => {\n    if (frame !== this.frame) {\n      if (this.frame) {\n        this.frame.remove(this.group);\n      }\n      if (frame) {\n        frame.add(this.group);\n      }\n      this.frame = frame;\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Body.tsx","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.withResizeDetector = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.throttle\"));\n\nvar _lodash3 = _interopRequireDefault(require(\"lodash.isfunction\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar listMode = {\n  debounce: _lodash.default,\n  throttle: _lodash2.default\n};\nvar styles = {\n  position: 'absolute',\n  width: 0,\n  height: 0,\n  visibility: 'hidden',\n  display: 'none'\n};\n/**\n * detect component's children and convert them to array\n * @param {*} children - component's children\n */\n\nfunction convertChildrenToArray(children) {\n  if (!children) return [];\n  if (!Array.isArray(children)) return [children];\n  return children;\n}\n\nvar ResizeDetector =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ResizeDetector, _PureComponent);\n\n  function ResizeDetector(props) {\n    var _this;\n\n    _classCallCheck(this, ResizeDetector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResizeDetector).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getElement\", function () {\n      var resizableElementId = _this.props.resizableElementId;\n      var otherElement = resizableElementId && document.getElementById(resizableElementId);\n      var parentElement = _this.el && _this.el.parentElement;\n      var resizableElement = otherElement || parentElement;\n      return resizableElement;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createResizeHandler\", function (entries) {\n      var _this$props = _this.props,\n          handleWidth = _this$props.handleWidth,\n          handleHeight = _this$props.handleHeight,\n          onResize = _this$props.onResize;\n      entries.forEach(function (entry) {\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n        var notifyWidth = handleWidth && _this.state.width !== width;\n        var notifyHeight = handleHeight && _this.state.height !== height;\n\n        if (!_this.skipOnMount && (notifyWidth || notifyHeight) && typeof window !== 'undefined') {\n          _this.animationFrameID = window.requestAnimationFrame(function () {\n            onResize(width, height);\n\n            _this.setState({\n              width: width,\n              height: height\n            });\n          });\n        }\n\n        _this.skipOnMount = false;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleRenderProp\", function () {\n      var _this$state = _this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      var render = _this.props.render;\n\n      if (render && typeof render === 'function') {\n        return (0, _react.cloneElement)(render({\n          width: width,\n          height: height\n        }), {\n          key: 'render'\n        });\n      }\n\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderChildren\", function () {\n      var _this$state2 = _this.state,\n          width = _this$state2.width,\n          height = _this$state2.height;\n      var children = _this.props.children;\n      return convertChildrenToArray(children).filter(function (child) {\n        return !!child;\n      }).map(function (child, key) {\n        if ((0, _lodash3.default)(child)) return (0, _react.cloneElement)(child(width, height), {\n          key: key\n        });\n        if ((0, _react.isValidElement)(child)) return (0, _react.cloneElement)(child, {\n          width: width,\n          height: height,\n          key: key\n        });\n        return child;\n      });\n    });\n\n    var skipOnMount = props.skipOnMount,\n        refreshMode = props.refreshMode,\n        refreshRate = props.refreshRate;\n    _this.state = {\n      width: undefined,\n      height: undefined\n    };\n    _this.skipOnMount = skipOnMount;\n    _this.animationFrameID = null;\n    _this.resizeHandler = listMode[refreshMode] && listMode[refreshMode](_this.createResizeHandler, refreshRate) || _this.createResizeHandler;\n    _this.ro = new _resizeObserverPolyfill.default(_this.resizeHandler);\n    return _this;\n  }\n\n  _createClass(ResizeDetector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var resizableElement = this.getElement();\n      if (resizableElement) this.ro.observe(resizableElement);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var resizableElement = this.getElement();\n      if (resizableElement) this.ro.unobserve(resizableElement);\n\n      if (typeof window !== 'undefined' && this.animationFrameID) {\n        window.cancelAnimationFrame(this.animationFrameID);\n      }\n\n      if (this.resizeHandler && this.resizeHandler.cancel) {\n        // cancel debounced handler\n        this.resizeHandler.cancel();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [_react.default.createElement(\"div\", {\n        key: \"resize-detector\",\n        style: styles,\n        ref: function ref(el) {\n          _this2.el = el;\n        }\n      }), this.handleRenderProp()].concat(_toConsumableArray(this.renderChildren()));\n    }\n  }]);\n\n  return ResizeDetector;\n}(_react.PureComponent);\n\nResizeDetector.propTypes = {\n  handleWidth: _propTypes.default.bool,\n  handleHeight: _propTypes.default.bool,\n  skipOnMount: _propTypes.default.bool,\n  refreshRate: _propTypes.default.number,\n  refreshMode: _propTypes.default.string,\n  resizableElementId: _propTypes.default.string,\n  onResize: _propTypes.default.func,\n  render: _propTypes.default.func,\n  children: _propTypes.default.any // eslint-disable-line react/forbid-prop-types\n\n};\nResizeDetector.defaultProps = {\n  handleWidth: false,\n  handleHeight: false,\n  skipOnMount: false,\n  refreshRate: 1000,\n  refreshMode: undefined,\n  resizableElementId: '',\n  onResize: function onResize(e) {\n    return e;\n  },\n  render: undefined,\n  children: null\n};\n\nvar withResizeDetector = function withResizeDetector(WrappedComponent) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    handleWidth: true,\n    handleHeight: true\n  };\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    function (_Component) {\n      _inherits(ResizeDetectorHOC, _Component);\n\n      function ResizeDetectorHOC() {\n        _classCallCheck(this, ResizeDetectorHOC);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(ResizeDetectorHOC).apply(this, arguments));\n      }\n\n      _createClass(ResizeDetectorHOC, [{\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(ResizeDetector, props, _react.default.createElement(WrappedComponent, this.props));\n        }\n      }]);\n\n      return ResizeDetectorHOC;\n    }(_react.Component)\n  );\n};\n\nexports.withResizeDetector = withResizeDetector;\nvar _default = ResizeDetector;\nexports.default = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resize-detector/lib/index.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 25\n// module chunks = 0","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 26\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.debounce/index.js\n// module id = 27\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.throttle/index.js\n// module id = 28\n// module chunks = 0","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    nullTag = '[object Null]',\n    proxyTag = '[object Proxy]',\n    undefinedTag = '[object Undefined]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.isfunction/index.js\n// module id = 29\n// module chunks = 0","import * as React from 'react';\nimport * as THREE from 'three';\n\nimport Canvas from './Canvas';\nimport { CIRCLE_GEO } from './common';\n\ninterface IOrbitProps {\n  color: string;\n  r: number;\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport default class Orbit extends React.Component<IOrbitProps> {\n  public static defaultProps: Partial<IOrbitProps> = {\n    color: 'black',\n    r: 1,\n    x: 0,\n    y: 0,\n    z: 0,\n  };\n  private frame: THREE.Object3D;\n  private object: THREE.Line;\n  public constructor(props: IOrbitProps) {\n    super(props);\n    const mat = new THREE.LineBasicMaterial({\n      color: new THREE.Color(this.props.color),\n      linewidth: 2,\n      opacity: 0.1,\n      transparent: true,\n    });\n    const obj = new THREE.Line(CIRCLE_GEO, mat);\n    obj.scale.setScalar(this.props.r);\n    this.object = obj;\n  }\n  public componentWillReceiveProps(props: IOrbitProps) {\n    if (props.color !== this.props.color) {\n      (this.object.material as THREE.LineBasicMaterial).color = new THREE.Color(props.color);\n    }\n    this.object.position.set(props.x, props.y, props.z);\n    this.object.scale.setScalar(props.r);\n  }\n  public render() {\n    return <Canvas.FrameContext>{this.handleFrame}</Canvas.FrameContext>;\n  }\n  private handleFrame = (frame: THREE.Object3D) => {\n    if (frame !== this.frame) {\n      if (this.frame) {\n        this.frame.remove(this.object);\n      }\n      if (frame) {\n        frame.add(this.object);\n      }\n      this.frame = frame;\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Orbit.tsx","import * as React from 'react';\n\nimport './Player.css';\n\ninterface IPlayerProps {\n  min: number;\n  max: number;\n  time: number;\n  playing: boolean;\n  onPlay: () => void;\n  onPause: () => void;\n  onTimeChange: (t: number) => void;\n}\n\nexport default class Player extends React.Component<IPlayerProps> {\n  public state = {\n    scrubbing: false,\n  };\n  private wasPlaying = false;\n  private scrubberRef = React.createRef<HTMLDivElement>();\n  public render() {\n    return (\n      <div className=\"Player\">\n        {this.props.playing ? this.renderPauseButton() : this.renderPlayButton()}\n        {this.renderScrubber()}\n        <span className=\"Player-CurrTime\">{this.formatTime(this.props.time)}</span>\n        <span className=\"Player-Separator\">/</span>\n        <span className=\"Player-EndTime\">{this.formatTime(this.props.max)}</span>\n      </div>\n    );\n  }\n  private renderPlayButton() {\n    return (\n      <svg className=\"Player-PlayButton\"\n        width={16}\n        height={16}\n        viewBox=\"0 0 16 16\"\n        onClick={this.props.onPlay}\n      >\n        <path d=\"M3 0l12 8l-12 8Z\" />\n      </svg>\n    );\n  }\n  private renderPauseButton() {\n    return (\n      <svg className=\"Player-PauseButton\"\n        width={16}\n        height={16}\n        viewBox=\"0 0 16 16\"\n        onClick={this.props.onPause}\n      >\n        <rect x=\"2\" y=\"0\" width=\"4\" height=\"16\" />\n        <rect x=\"10\" y=\"0\" width=\"4\" height=\"16\" />\n      </svg>\n    );\n  }\n  private renderScrubber() {\n    const width = this.props.time / this.props.max * 100 + '%';\n    return (\n      <div className=\"Player-Scrubber\"\n        ref={this.scrubberRef}\n        onMouseDown={this.handleScrubDown}\n      >\n        <div className=\"Player-ScrubberBackground\">\n          <div className=\"Player-ScrubberBar\" style={{width}} />\n        </div>\n        {this.state.scrubbing && (\n          <span className=\"Player-ScrubberTime\" style={{ left: width }}>\n            {this.formatTimePrecise(this.props.time)}\n          </span>\n        )}\n      </div>\n    );\n  }\n  private handleScrubDown = (e: React.MouseEvent) => {\n    this.setState({ scrubbing: true });\n    this.wasPlaying = this.props.playing;\n    e.preventDefault();\n    window.addEventListener('mousemove', this.handleScrubMove);\n    window.addEventListener('mouseup', this.handleScrubUp);\n    this.props.onPause.call(undefined);\n    this.handleScrubMove(e.nativeEvent);\n  }\n  private handleScrubMove = (e: MouseEvent) => {\n    if (this.scrubberRef.current) {\n      const {left, width} = this.scrubberRef.current.getBoundingClientRect();\n      const time = Math.max(0, Math.min(1, (e.clientX - left) / width)) * this.props.max;\n      this.props.onTimeChange.call(undefined, time);\n    }\n  }\n  private handleScrubUp = () => {\n    this.setState({ scrubbing: false });\n    window.removeEventListener('mousemove', this.handleScrubMove);\n    window.removeEventListener('mouseup', this.handleScrubUp);\n    if (this.wasPlaying) {\n      this.props.onPlay.call(undefined);\n    }\n  }\n  private formatTime(t: number) {\n    const [d, h, min, s] = this.splitTime(t);\n\n    const sStr = ('00' + s).substr(-2);\n    const minStr = h ? ('00' + min).substr(-2) : '' + min;\n    const hStr = h ? h + ':' : '';\n    const dStr = d ? d + 'd ' : '';\n\n    return dStr + hStr + minStr + ':' + sStr;\n  }\n  private formatTimePrecise(t: number) {\n    const [d, h, min, s, f] = this.splitTime(t);\n    const ms = Math.floor(f * 1000);\n\n    const msStr = ('000' + ms).substr(-3);\n    const sStr = ('00' + s).substr(-2);\n    const minStr = h ? ('00' + min).substr(-2) : '' + min;\n    const hStr = h ? h + ':' : '';\n    const dStr = d ? d + 'd ' : '';\n\n    return dStr + hStr + minStr + ':' + sStr + '.' + msStr;\n  }\n  private splitTime(t: number): [number, number, number, number, number] {\n    const f = t % 1;\n    const s = Math.floor(t % 60);\n    const min = Math.floor(t / 60 % 60);\n    const h = Math.floor(t / 3600 % 24);\n    const d = Math.floor(t / 86400);\n    return [d, h, min, s, f];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Player.tsx","import { lerpLookup, lerpSearch } from './lerp';\n\ntype TimeSeries = [number[], number[]];\n\nconst handler = {\n  get(obj: TimeSeries, key: string) {\n    return lerpLookup(obj[1], lerpSearch(obj[0], parseFloat(key)));\n  }\n};\n\nexport function makeTimeSeries(times: number[], values: number[]): number[] {\n  return new Proxy([times, values], handler) as any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/timeSeries.ts","\nexport function lerp(a: number, b: number, t: number) {\n  return a + (b - a) * t;\n}\n\nexport function lerpSearch(arr: number[], val: number): number {\n  const len = arr.length;\n  const last = len - 1;\n\n  // Return NaN if the value cannot be found meaningfully at all in the array.\n  if (len === 0 || isNaN(val)) {\n    return NaN;\n  }\n\n  // If the array is only one element long, three cases.\n  if (last === 0) {\n    if (val === arr[0]) {\n      return 0;\n    } else if (val < arr[0]) {\n      return -Infinity;\n    } else {\n      return Infinity;\n    }\n  }\n\n  // We now know the array has at least two elements. See if we can extrapolate\n  // past the ends.\n  if (val < arr[0]) {\n    return (val - arr[0]) / (arr[1] - arr[0]);\n  } else if (val > arr[last]) {\n    return last + (val - arr[last]) / (arr[last] - arr[last - 1]);\n  }\n\n  // The value is somewhere in range. Perform binary search with lerping.\n  let lo = 0;\n  let hi = last;\n  while (true) {\n    if (hi === lo + 1) {\n      return lo + (val - arr[lo]) / (arr[hi] - arr[lo]);\n    }\n    const mid = Math.floor((lo + hi) / 2);\n    const cmp = arr[mid];\n    if (val === cmp) {\n      return mid;\n    } else if (val < cmp) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n}\n\nexport function lerpLookup(arr: number[], i: number): number {\n  if (arr.length === 0 || isNaN(i)) {\n    return NaN;\n  }\n\n  // If the array is only one element long, use that as a constant.\n  if (arr.length === 1) {\n    return arr[0];\n  }\n\n  if (i < 0) {\n    return arr[0] + i * (arr[1] - arr[0]);\n  }\n  const last = arr.length - 1;\n  if (i > last) {\n    return arr[last] + (i - last) * (arr[last] - arr[last - 1]);\n  }\n  const floor = Math.floor(i);\n  const ceil = Math.ceil(i);\n  const a = arr[floor];\n  const b = arr[ceil];\n  const t = i - floor;\n  return lerp(a, b, t);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/lerp.ts","import * as React from 'react';\nimport * as THREE from 'three';\n\nimport Canvas from './Canvas';\n\ninterface ITrajectoryProps {\n  color: string;\n  x: number[];\n  y: number[];\n  z: number[];\n}\n\nexport default class Trajectory extends React.Component<ITrajectoryProps> {\n  public static defaultProps: Partial<ITrajectoryProps> = {\n    color: 'yellow',\n  };\n  private frame: THREE.Object3D;\n  private object: THREE.Line;\n  private geo: THREE.BufferGeometry;\n  public constructor(props: ITrajectoryProps) {\n    super(props);\n    const mat = new THREE.LineBasicMaterial({\n      color: new THREE.Color(this.props.color),\n      linewidth: 2,\n      opacity: 0.5,\n      transparent: true,\n    });\n    const verts = new Float32Array(3 * props.x.length);\n    for (let i = 0; i < props.x.length; i += 1) {\n      verts[3 * i] = props.x[i];\n      verts[3 * i + 1] = props.y[i];\n      verts[3 * i + 2] = props.z[i];\n    }\n    console.log(props.x);\n    this.geo = new THREE.BufferGeometry();\n    this.geo.addAttribute('position', new THREE.BufferAttribute(verts, 3));\n    const obj = new THREE.Line(this.geo, mat);\n    this.object = obj;\n  }\n  public componentWillReceiveProps(props: ITrajectoryProps) {\n    const verts = new Float32Array(3 * props.x.length);\n    for (let i = 0; i < props.x.length; i += 1) {\n      verts[3 * i] = props.x[i];\n      verts[3 * i + 1] = props.y[i];\n      verts[3 * i + 2] = props.z[i];\n    }\n    this.geo.addAttribute('position', new THREE.BufferAttribute(verts, 3));\n  }\n  public render() {\n    return <Canvas.FrameContext>{this.handleFrame}</Canvas.FrameContext>;\n  }\n  private handleFrame = (frame: THREE.Object3D) => {\n    if (frame !== this.frame) {\n      if (this.frame) {\n        this.frame.remove(this.object);\n      }\n      if (frame) {\n        frame.add(this.object);\n      }\n      this.frame = frame;\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Trajectory.tsx","module.exports = [[7255000,0,0,0,2,0],[7241140.971117991,444642.2944655738,0,60,2,0],[7200058.477015387,887966.036086195,0,120,2,0],[7131878.487218976,1328318.7078178597,0,180,2,0],[7036837.165103726,1764027.595974397,0,240,2,0],[6915268.4607427195,2193462.52767303,0,300,2,0],[6767608.963724145,2614999.7465928467,0,360,2,0],[6594403.876477641,3027046.3163567334,0,420,2,0],[6396288.146646778,3428055.076570838,0,480,2,0],[6173991.249156882,3816518.276234045,0,540,2,0],[5928351.456910493,4190966.1863435656,0,600,2,0],[5660277.625576205,4550004.189678326,0,660,2,0],[5370785.250199918,4892280.518542113,0,720,2,0],[5060953.450649497,5216523.670712364,0,780,2,0],[4731964.24003697,5521529.15765834,0,840,2,0],[4385045.07576308,5806172.998765195,0,900,2,0],[4021510.809014691,6069415.847547465,0,960,2,0],[3642734.9050768227,6310296.838050275,0,1020,2,0],[3250138.7078917185,6527970.192838934,0,1080,2,0],[2845202.912678173,6721658.324378158,0,1140,2,0],[2429434.921672147,6890692.606619846,0,1200,2,0],[2004396.9674789642,7034516.205028384,0,1260,2,0],[1571665.3100431033,7152656.507901208,0,1320,2,0],[1132843.2387569016,7244756.712111723,0,1380,2,0],[689550.9596455189,7310565.504141075,0,1440,2,0],[243395.63603401085,7349923.002132476,0,1500,2,0],[-203999.00239685734,7362798.605747827,0,1560,2,0],[-651020.4840246631,7349242.156203463,0,1620,2,0],[-1096072.9926213978,7309410.494423499,0,1680,2,0],[-1537594.5867559938,7243568.516347033,0,1740,2,0],[-1974042.1072687209,7152074.913364293,0,1800,2,0],[-2403901.325694681,7035374.109003876,0,1860,2,0],[-2825720.3057317208,6894016.105708941,0,1920,2,0],[-3238075.964747757,6728618.032425031,0,1980,2,0],[-3639610.0830489304,6539891.53026317,0,2040,2,0],[-4029010.6897829385,6328626.892634301,0,2100,2,0],[-4405030.741497367,6095679.853328629,0,2160,2,0],[-4766509.025196976,5841983.184757341,0,2220,2,0],[-5112318.0436534565,5568511.772185395,0,2280,2,0],[-5441424.216856206,5276320.254422914,0,2340,2,0],[-5752874.9023867315,4966494.275192501,0,2400,2,0],[-6045766.9670033585,4640177.185371034,0,2460,2,0],[-6319309.50002322,4298545.645546205,0,2520,2,0],[-6572754.06791451,3942812.752709144,0,2580,2,0],[-6805460.652434911,3574218.2626955793,0,2640,2,0],[-7016866.158377832,3194026.059507104,0,2700,2,0],[-7206460.176352032,2803510.7483663172,0,2760,2,0],[-7373849.460530376,2403968.3635073286,0,2820,2,0],[-7518696.01942566,1996695.1131814574,0,2880,2,0],[-7640740.530401328,1582991.891633095,0,2940,2,0],[-7739813.198563472,1164158.8816956752,0,3000,2,0],[-7815791.894327243,741498.0907716632,0,3060,2,0],[-7868662.501029349,316266.3814959068,0,3120,2,0],[-7898444.393257124,-110243.36238797565,0,3180,2,0],[-7905260.910374289,-536797.23221761,0,3240,2,0],[-7889267.731141995,-962167.7425913984,0,3300,2,0],[-7850706.650229557,-1385139.6256235049,0,3360,2,0],[-7789876.704243266,-1804555.419215297,0,3420,2,0],[-7707129.3452217225,-2219269.7416018695,0,3480,2,0],[-7602866.0448336555,-2628154.102240466,0,3540,2,0],[-7477549.512703765,-3030151.78826848,0,3600,2,0],[-7331693.507148373,-3424211.1667851126,0,3660,2,0],[-7165848.448867259,-3809336.240450769,0,3720,2,0],[-6980615.972207797,-4184556.3414474125,0,3780,2,0],[-6776644.819228919,-4548966.519452588,0,3840,2,0],[-6554601.129131317,-4901684.762366468,0,3900,2,0],[-6315210.569667295,-5241878.4966413155,0,3960,2,0],[-6059217.993787593,-5568755.245748114,0,4020,2,0],[-5787395.936610381,-5881583.214240414,0,4080,2,0],[-5500548.371074824,-6179655.739119832,0,4140,2,0],[-5199510.50107586,-6462321.7788939355,0,4200,2,0],[-4885129.999301326,-6728979.0041921185,0,4260,2,0],[-4558277.375525827,-6979075.963305641,0,4320,2,0],[-4219839.02123018,-7212097.827104723,0,4380,2,0],[-3870730.493796333,-7427584.951334011,0,4440,2,0],[-3511848.7613988505,-7625116.103531263,0,4500,2,0],[-3144141.191142156,-7804320.433624577,0,4560,2,0],[-2768522.280702646,-7964870.791585656,0,4620,2,0],[-2385950.450429432,-8106505.100887026,0,4680,2,0],[-1997359.7609381736,-8228984.61127754,0,4740,2,0],[-1603706.4288492603,-8332111.836020684,0,4800,2,0],[-1205932.8358338089,-8415762.63719491,0,4860,2,0],[-804991.4406756378,-8479820.575664567,0,4920,2,0],[-401820.7346969505,-8524248.224140158,0,4980,2,0],[2636.0977470186954,-8549023.67672109,0,5040,2,0],[407447.17340299045,-8554188.029097635,0,5100,2,0],[811691.5004299949,-8539803.15871912,0,5160,2,0],[1214440.85836229,-8505990.24131634,0,5220,2,0],[1614813.530137789,-8452894.57651035,0,5280,2,0],[2011900.8952972386,-8380727.0367914075,0,5340,2,0],[2404828.549723005,-8289694.29811094,0,5400,2,0],[2792749.6277931514,-8180088.11758121,0,5460,2,0],[3174804.972549169,-8052190.16681472,0,5520,2,0],[3550178.3156531057,-7906363.092042131,0,5580,2,0],[3918060.078255086,-7742965.431105129,0,5640,2,0],[4277663.979487308,-7562417.015438729,0,5700,2,0],[4628226.721306365,-7365165.957715969,0,5760,2,0],[4969016.102303617,-7151663.130653465,0,5820,2,0],[5299307.700558984,-6922433.797376031,0,5880,2,0],[5618413.979094267,-6677998.039365335,0,5940,2,0],[5925681.286759332,-6418923.446830276,0,6000,2,0],[6220462.14096935,-6145804.213444945,0,6060,2,0],[6502154.120308301,-5859238.14877777,0,6120,2,0],[6770175.234996568,-5559874.345087064,0,6180,2,0],[7023990.186855223,-5248372.560930076,0,6240,2,0],[7263075.4966915585,-4925416.777963898,0,6300,2,0],[7486950.059984789,-4591709.592726106,0,6360,2,0],[7695163.164370795,-4247976.654082203,0,6420,2,0],[7887300.042588482,-3894961.291287411,0,6480,2,0],[8062972.2847089255,-3533407.834926387,0,6540,2,0],[8221845.602386282,-3164100.063929424,0,6600,2,0],[8363597.050775139,-2787814.2747286865,0,6660,2,0],[8487955.20514085,-2405360.8078373773,0,6720,2,0],[8594681.409165477,-2017528.533636104,0,6780,2,0],[8683574.933602784,-1625141.614404235,0,6840,2,0],[8754473.72768162,-1229018.9870357916,0,6900,2,0],[8807239.831256926,-829989.9099488109,0,6960,2,0],[8841804.098472148,-428889.29479987425,0,7020,2,0],[8858094.823914224,-26530.073303753572,0,7080,2,0],[8856108.057535661,376229.8558089676,0,7140,2,0],[8835871.4854985,778590.5539321533,0,7200,2,0],[8797439.65819552,1179703.332666813,0,7260,2,0],[8740927.049098067,1578746.3982873915,0,7320,2,0],[8666454.18309332,1974921.054950816,0,7380,2,0],[8574198.118319916,2367413.7742639775,0,7440,2,0],[8464373.2154948,2755424.40465909,0,7500,2,0],[8337231.032711133,3138176.7440110426,0,7560,2,0],[8193049.819179215,3514897.8343855757,0,7620,2,0],[8032131.6711400775,3884837.0801009005,0,7680,2,0],[7854847.432745676,4247257.716818763,0,7740,2,0],[7661571.49934383,4601440.03072052,0,7800,2,0],[7452715.461899704,4946690.177764067,0,7860,2,0],[7228728.249514739,5282317.185254021,0,7920,2,0],[6990075.07962529,5607691.446226246,0,7980,2,0],[6737271.408131931,5922157.785679475,0,8040,2,0],[6470841.3203878645,6225141.4598408695,0,8100,2,0],[6191352.917625262,6516044.615790283,0,8160,2,0],[5899372.276408979,6794333.243806689,0,8220,2,0],[5595506.798101753,7059484.053555751,0,8280,2,0],[5280375.704344826,7311007.970457607,0,8340,2,0],[4954645.658366277,7548455.152525239,0,8400,2,0],[4618953.481925794,7771390.119750309,0,8460,2,0],[4273986.139951134,7979427.498993605,0,8520,2,0],[3920446.21889836,8172218.289294996,0,8580,2,0],[3559024.784863706,8349423.22458971,0,8640,2,0],[3190452.2823039982,8510754.699221676,0,8700,2,0],[2815444.364581739,8655974.514803303,0,8760,2,0],[2434749.6866050665,8784836.917102676,0,8820,2,0],[2049094.3987806307,8897172.465169143,0,8880,2,0],[1659224.8147606475,8992832.233089285,0,8940,2,0],[1265898.607609707,9071702.718074368,0,9000,2,0],[869853.7113540664,9133694.81837623,0,9060,2,0],[471830.40701849136,9178762.774207577,0,9120,2,0],[72583.16592061022,9206915.498191854,0,9180,2,0],[-327167.03971466207,9218149.182967965,0,9240,2,0],[-726673.4481393796,9212542.465296945,0,9300,2,0],[-1125216.108225268,9190164.415603943,0,9360,2,0],[-1522089.8061252062,9151159.538278392,0,9420,2,0],[-1916590.0344081325,9095659.94889017,0,9480,2,0],[-2308017.8857948724,9023844.538941903,0,9540,2,0],[-2695692.35956852,8935947.237010127,0,9600,2,0],[-3078971.1767683397,8832202.381210903,0,9660,2,0],[-3457199.119048852,8712853.985714417,0,9720,2,0],[-3829746.117890516,8578221.738766836,0,9780,2,0],[-4195994.361572412,8428617.41799956,0,9840,2,0],[-4555363.303509253,8264377.035835782,0,9900,2,0],[-4907283.7065774985,8085871.668869046,0,9960,2,0],[-5251204.092271572,7893484.748729506,0,10020,2,0],[-5586590.674892443,7687629.505594221,0,10080,2,0],[-5912932.609644337,7468724.102748836,0,10140,2,0],[-6229768.289482082,7237215.417855922,0,10200,2,0],[-6536618.393887528,6993565.45535606,0,10260,2,0],[-6833062.12731196,6738243.119075216,0,10320,2,0],[-7118678.618133235,6471743.090365479,0,10380,2,0],[-7393087.372334262,6194570.013508035,0,10440,2,0],[-7655916.317775549,5907223.346671279,0,10500,2,0],[-7906836.337664556,5610235.888187607,0,10560,2,0],[-8145545.354027829,5304139.667800927,0,10620,2,0],[-8371736.008217337,4989459.710106496,0,10680,2,0],[-8585156.67319898,4666751.305214518,0,10740,2,0],[-8785567.441843707,4336567.511000197,0,10800,2,0],[-8972752.890137332,3999451.3807467464,0,10860,2,0],[-9146535.053844983,3655963.7896375423,0,10920,2,0],[-9306742.860377982,3306665.9683386083,0,10980,2,0],[-9453231.827686738,2952109.911540528,0,11040,2,0],[-9585882.910706678,2592855.4708103505,0,11100,2,0],[-9704616.950158257,2229470.2083236743,0,11160,2,0],[-9809351.800404921,1862492.4533817356,0,11220,2,0],[-9900030.851868702,1492482.1851105466,0,11280,2,0],[-9976649.378609383,1119986.2869912789,0,11340,2,0],[-10039174.734643001,745545.8350749162,0,11400,2,0],[-10087644.81275455,369702.9337531834,0,11460,2,0],[-10122076.95186403,-7012.140370687645,0,11520,2,0],[-10142530.0384137,-384086.0281079827,0,11580,2,0],[-10149080.964141607,-760985.6462983525,0,11640,2,0],[-10141815.587209271,-1137203.392071162,0,11700,2,0],[-10120843.690367691,-1512257.2233782923,0,11760,2,0],[-10086300.38470169,-1885645.674863306,0,11820,2,0],[-10038323.142674157,-2256884.2813128475,0,11880,2,0],[-9977063.099288106,-2625509.326513721,0,11940,2,0],[-9902701.832403837,-2991047.380679,0,12000,2,0],[-9815429.957460627,-3353079.47841661,0,12060,2,0],[-9715441.779832019,-3711132.8226972804,0,12120,2,0],[-9602966.661200752,-4064808.9299860257,0,12180,2,0],[-9478221.786077572,-4413681.180381937,0,12240,2,0],[-9341452.889708417,-4757339.011011331,0,12300,2,0],[-9192905.130264318,-5095411.484994027,0,12360,2,0],[-9032850.764018532,-5427527.620336968,0,12420,2,0],[-8861558.609965041,-5753303.5195492245,0,12480,2,0],[-8679315.02621376,-6072386.326851485,0,12540,2,0],[-8486403.990308069,-6384455.429117859,0,12600,2,0],[-8283136.15438538,-6689182.850838894,0,12660,2,0],[-8069809.099512003,-6986248.128696462,0,12720,2,0],[-7846755.545322294,-7275360.628926102,0,12780,2,0],[-7614283.94539409,-7556231.438078225,0,12840,2,0],[-7372720.110697601,-7828598.713601846,0,12900,2,0],[-7122411.998580213,-8092200.05673587,0,12960,2,0],[-6863697.502623049,-8346792.87024754,0,13020,2,0],[-6596915.304195025,-8592137.655698547,0,13080,2,0],[-6322410.795906076,-8828019.273547567,0,13140,2,0],[-6040546.887766659,-9054246.834198931,0,13200,2,0],[-5751684.911800986,-9270618.163162723,0,13260,2,0],[-5456167.917110769,-9476957.110580524,0,13320,2,0],[-5154365.393680739,-9673094.080886632,0,13380,2,0],[-4846647.901209622,-9858884.642567882,0,13440,2,0],[-4533364.136801941,-10034196.468292367,0,13500,2,0],[-4214892.821720582,-10198876.952369723,0,13560,2,0],[-3891599.805793391,-10352839.334754474,0,13620,2,0],[-3563856.776306379,-10495976.34797959,0,13680,2,0],[-3232025.3675775942,-10628180.611686962,0,13740,2,0],[-2896467.352856939,-10749400.92335906,0,13800,2,0],[-2557561.234631553,-10859552.233046226,0,13860,2,0],[-2215663.975643357,-10958592.45884025,0,13920,2,0],[-1871154.749887871,-11046468.569629733,0,13980,2,0],[-1524375.7338784004,-11123170.264101498,0,14040,2,0],[-1175703.7586349624,-11188660.717067394,0,14100,2,0],[-825492.5768764529,-11242936.560060147,0,14160,2,0],[-474083.1323818771,-11286000.028140454,0,14220,2,0],[-121860.49890762942,-11317872.536652016,0,14280,2,0],[230844.02028043562,-11338568.433503337,0,14340,2,0],[583685.9360024731,-11348123.877207106,0,14400,2,0],[936318.9797236874,-11346594.646431262,0,14460,2,0],[1288396.9285118473,-11334022.168556772,0,14520,2,0],[1639590.2257326557,-11310470.80371526,0,14580,2,0],[1989573.3626857556,-11276016.235698061,0,14640,2,0],[2338003.602104422,-11230742.977732552,0,14700,2,0],[2684568.9836174594,-11174755.055202384,0,14760,2,0],[3028955.225454215,-11108128.23052765,0,14820,2,0],[3370854.2746206694,-11030997.076379009,0,14880,2,0],[3709937.042777339,-10943460.990714636,0,14940,2,0],[4045923.201563194,-10845646.750959711,0,15000,2,0],[4378508.923892881,-10737701.540606385,0,15060,2,0],[4707410.675976103,-10619759.485266455,0,15120,2,0],[5032341.635177688,-10491969.671676433,0,15180,2,0],[5353019.9184981,-10354475.819366634,0,15240,2,0],[5669172.832845934,-10207471.74654635,0,15300,2,0],[5980548.395461168,-10051102.587079344,0,15360,2,0],[6286873.9212149065,-9885545.569329038,0,15420,2,0],[6587908.423972835,-9711001.189692376,0,15480,2,0],[6883401.5306944335,-9527645.34086065,0,15540,2,0],[7173104.994627332,-9335681.082709717,0,15600,2,0],[7456807.997957177,-9135295.746586451,0,15660,2,0],[7734273.211842622,-8926710.48894717,0,15720,2,0],[8005296.910340099,-8710133.016676642,0,15780,2,0],[8269648.198353722,-8485768.890054313,0,15840,2,0],[8527148.264301013,-8253859.574121663,0,15900,2,0],[8777589.418490155,-8014612.015580684,0,15960,2,0],[9020787.37879266,-7768271.585702926,0,16020,2,0],[9256565.584286755,-7515051.193179863,0,16080,2,0],[9484740.95720161,-7255207.503175567,0,16140,2,0],[9705164.593884923,-6988985.484282788,0,16200,2,0],[9917667.213031046,-6716612.981639924,0,16260,2,0],[10122112.31997447,-6438340.749746324,0,16320,2,0],[10318355.098468574,-6154437.709373086,0,16380,2,0],[10506255.15898544,-5865128.861714464,0,16440,2,0],[10685697.235471185,-5570697.9264715435,0,16500,2,0],[10856561.222182835,-5271377.5760834925,0,16560,2,0],[11018735.881977003,-4967445.0051442385,0,16620,2,0],[11172115.171481688,-4659150.958664212,0,16680,2,0],[11316623.631578783,-4346769.709895834,0,16740,2,0],[11452157.584837303,-4030561.8412702773,0,16800,2,0],[11578652.616114562,-3710773.962359719,0,16860,2,0],[11696026.249362288,-3387696.2733779033,0,16920,2,0],[11804228.799140368,-3061588.7304972247,0,16980,2,0],[11903186.906426579,-2732715.4931595903,0,17040,2,0],[11992885.870583484,-2401339.0681120353,0,17100,2,0],[12073252.317994386,-2067733.462160668,0,17160,2,0],[12144286.955836779,-1732158.7117146652,0,17220,2,0],[12205943.05835928,-1394890.57501491,0,17280,2,0],[12258214.316537155,-1056183.2986509206,0,17340,2,0],[12301095.532029228,-716301.1940520006,0,17400,2,0],[12334591.250528093,-375519.2506080283,0,17460,2,0],[12358687.763204757,-34085.34828266758,0,17520,2,0],[12373403.991930097,307728.09373432957,0,17580,2,0],[12378779.126431381,649676.815631915,0,17640,2,0],[12374822.323863177,991480.4136731551,0,17700,2,0],[12361584.260226468,1332912.5016894382,0,17760,2,0],[12339089.955535421,1673709.080636183,0,17820,2,0],[12307402.339523884,2013624.8447915583,0,17880,2,0],[12266575.111800915,2352402.7412988916,0,17940,2,0],[12216659.601544715,2689800.332052611,0,18000,2,0],[12157735.231219925,3025581.223087339,0,18060,2,0],[12089873.116433287,3359524.3809710843,0,18120,2,0],[12013159.900686767,3691361.5264387648,0,18180,2,0],[11927670.477248099,4020887.8831192716,0,18240,2,0],[11833503.376110537,4347869.859763951,0,18300,2,0],[11730752.725473924,4672086.998297258,0,18360,2,0],[11619536.13335064,4993302.118098889,0,18420,2,0],[11499953.432078792,5311328.832231336,0,18480,2,0],[11372121.75537865,5625935.441586259,0,18540,2,0],[11236161.829503775,5936920.310070577,0,18600,2,0],[11092196.166278284,6244085.686794384,0,18660,2,0],[10940355.9992211,6547226.792635324,0,18720,2,0],[10780782.439696804,6846159.821394537,0,18780,2,0],[10613600.360942677,7140695.432908938,0,18840,2,0],[10438962.245693306,7430632.623607566,0,18900,2,0],[10257014.698620003,7715814.31821075,0,18960,2,0],[10067909.203580523,7996076.526451441,0,19020,2,0],[9871803.100728186,8271208.569773567,0,19080,2,0],[9668848.77211755,8541087.000233276,0,19140,2,0],[9459226.068484928,8805558.351562208,0,19200,2,0],[9243071.154455716,9064437.148071483,0,19260,2,0],[9020575.624024324,9317603.910033224,0,19320,2,0],[8791902.93832935,9564902.560630972,0,19380,2,0],[8557235.185201108,9806214.582393417,0,19440,2,0],[8316741.872089633,10041392.327422291,0,19500,2,0],[8070608.781052446,10270308.131764075,0,19560,2,0],[7818993.261111778,10492864.157714572,0,19620,2,0],[7562124.0535806995,10708931.638760325,0,19680,2,0],[7300142.763196151,10918420.567468533,0,19740,2,0],[7033258.532668287,11121207.677631462,0,19800,2,0],[6761655.9655338805,11317193.150352105,0,19860,2,0],[6485525.69933808,11506306.968811218,0,19920,2,0],[6205052.954663324,11688466.836406581,0,19980,2,0],[5920442.092443195,11863571.730145417,0,20040,2,0],[5631865.638193213,12031555.779224114,0,20100,2,0],[5339543.154473413,12192354.234973062,0,20160,2,0],[5043646.308071664,12345905.76240455,0,20220,2,0],[4744376.572891238,12492148.880827812,0,20280,2,0],[4441922.288510017,12631041.169862222,0,20340,2,0],[4136497.8211600995,12762522.216468027,0,20400,2,0],[3828281.1173430043,12886572.189129595,0,20460,2,0],[3517450.7838351936,13003123.403129965,0,20520,2,0],[3204229.323832564,13112177.748170972,0,20580,2,0],[2888799.538423878,13213687.054942423,0,20640,2,0],[2571348.958906945,13307638.431937177,0,20700,2,0],[2252065.1937640836,13394028.492300142,0,20760,2,0],[1931142.5145911023,13472830.408760337,0,20820,2,0],[1608779.479951611,13544050.801846981,0,20880,2,0],[1285145.218683794,13607674.529127859,0,20940,2,0],[960434.1640059793,13663728.424215784,0,21000,2,0],[634839.471103945,13712205.219386822,0,21060,2,0],[308524.9238111719,13753132.540605465,0,21120,2,0],[-18304.0499804377,13786509.332637262,0,21180,2,0],[-345502.1542755707,13812386.073193869,0,21240,2,0],[-672853.2474373644,13830757.028498141,0,21300,2,0],[-1000200.319949994,13841680.650323004,0,21360,2,0],[-1327374.9175993646,13845173.586246477,0,21420,2,0],[-1654209.9703400293,13841277.373628905,0,21480,2,0],[-1980528.1534317452,13830043.57800814,0,21540,2,0],[-2306152.376341215,13811531.956087897,0,21600,2,0],[-2630933.637103397,13785765.001270698,0,21660,2,0],[-2954716.7583294967,13752807.937213559,0,21720,2,0],[-3277317.814835603,13712717.61687467,0,21780,2,0],[-3598611.3596582417,13665564.843076449,0,21840,2,0],[-3918439.026943515,13611417.245045621,0,21900,2,0],[-4236626.646708302,13550312.316382289,0,21960,2,0],[-4553042.594047162,13482363.738158528,0,22020,2,0],[-4867547.3678414365,13407597.3906017,0,22080,2,0],[-5179996.022152271,13326128.264029041,0,22140,2,0],[-5490248.737987536,13238022.106776718,0,22200,2,0],[-5798170.7229849845,13143356.346419692,0,22260,2,0],[-6103639.559697199,13042226.423600094,0,22320,2,0],[-6406498.198785144,12934707.103881115,0,22380,2,0],[-6706647.012132672,12820889.472204639,0,22440,2,0],[-7003942.11264905,12700870.242271516,0,22500,2,0],[-7298289.813150886,12574742.822693055,0,22560,2,0],[-7589556.922148775,12442607.402471134,0,22620,2,0],[-7877629.858991317,12304531.512735438,0,22680,2,0],[-8162403.883090175,12160643.442375194,0,22740,2,0],[-8443763.706496166,12011040.908227896,0,22800,2,0],[-8721625.996637788,11855822.154366503,0,22860,2,0],[-8995868.987448703,11695086.644719563,0,22920,2,0],[-9266404.527593546,11528930.87950926,0,22980,2,0],[-9533120.374356018,11357489.56056793,0,23040,2,0],[-9795968.421507098,11180838.284771472,0,23100,2,0],[-10054805.963149766,10999106.073182318,0,23160,2,0],[-10309599.989748942,10812385.745308703,0,23220,2,0],[-10560230.940846035,10620800.026304564,0,23280,2,0],[-10806635.644890407,10424466.862594891,0,23340,2,0],[-11048749.15350002,10223474.588200029,0,23400,2,0],[-11286483.534986608,10017957.866648884,0,23460,2,0],[-11519772.373837778,9808022.006179132,0,23520,2,0],[-11748560.973958671,9593766.9421566,0,23580,2,0],[-11972768.946711838,9375334.291267484,0,23640,2,0],[-12192352.447513238,9152812.540981367,0,23700,2,0],[-12407252.314303042,8926320.442758247,0,23760,2,0],[-12617408.080541184,8695990.887901152,0,23820,2,0],[-12822787.793641098,8461911.101709144,0,23880,2,0],[-13023304.864422394,8224215.677821731,0,23940,2,0],[-13218944.108778836,7983018.691577464,0,24000,2,0],[-13409657.207772844,7738421.047663824,0,24060,2,0],[-13595412.045977661,7490558.605096246,0,24120,2,0],[-13776165.992797757,7239510.127881637,0,24180,2,0],[-13951862.300250145,6985420.926090443,0,24240,2,0],[-14122503.757898772,6728407.144414886,0,24300,2,0],[-14288052.318692748,6468557.015469655,0,24360,2,0],[-14448474.363639437,6206007.930189968,0,24420,2,0],[-14603751.568232197,5940841.247775541,0,24480,2,0],[-14753850.238111189,5673201.058015757,0,24540,2,0],[-14898767.68332858,5403175.145773309,0,24600,2,0],[-15038485.923355075,5130878.037506215,0,24660,2,0],[-15172985.801471407,4856437.593317404,0,24720,2,0],[-15302252.094925031,4579949.418064245,0,24780,2,0],[-15426286.641792856,4301513.888254292,0,24840,2,0],[-15545079.369591491,4021241.8322506305,0,24900,2,0],[-15658604.62432936,3739253.882979984,0,24960,2,0],[-15766892.942610864,3455633.722549318,0,25020,2,0],[-15869905.685386468,3170501.3944662428,0,25080,2,0],[-15967688.852791943,2883954.781605742,0,25140,2,0],[-16060209.679051692,2596097.905424631,0,25200,2,0],[-16147478.1025236,2307038.840311851,0,25260,2,0],[-16229526.297267506,2016866.7535934625,0,25320,2,0],[-16306331.192096945,1725685.5239028817,0,25380,2,0],[-16377923.374418402,1433597.091586271,0,25440,2,0],[-16444322.681314291,1140688.0298920257,0,25500,2,0],[-16505514.582806643,847057.5961318426,0,25560,2,0],[-16561529.420899162,552822.8181911727,0,25620,2,0],[-16612397.443723854,258039.38431173112,0,25680,2,0],[-16658104.09750872,-37156.91126883104,0,25740,2,0],[-16698711.305997489,-332726.5405580651,0,25800,2,0],[-16734223.090126831,-628523.8333724767,0,25860,2,0],[-16764657.758344814,-924510.1617240102,0,25920,2,0],[-16790040.920114577,-1220556.4931525066,0,25980,2,0],[-16810388.04816593,-1516601.9091386662,0,26040,2,0],[-16825767.18057117,-1812563.6761172062,0,26100,2,0],[-16836159.78882251,-2108327.7104496025,0,26160,2,0],[-16841634.038111307,-2403842.736548452,0,26220,2,0],[-16842195.168114543,-2699022.977639871,0,26280,2,0],[-16837882.746765878,-2993783.8566627214,0,26340,2,0],[-16828727.736440018,-3288036.411961782,0,26400,2,0],[-16814779.732873745,-3581721.144677534,0,26460,2,0],[-16796058.90713225,-3874753.762609969,0,26520,2,0],[-16772588.294537429,-4167050.1171691814,0,26580,2,0],[-16744450.177490246,-4458554.964298887,0,26640,2,0],[-16711639.750728825,-4749188.1604891615,0,26700,2,0],[-16674229.475995801,-5038873.001157029,0,26760,2,0],[-16632223.454067228,-5327550.746608185,0,26820,2,0],[-16585694.382076746,-5615151.439782027,0,26880,2,0],[-16534678.66776193,-5901602.046224869,0,26940,2,0],[-16479207.659445137,-6186844.374487092,0,27000,2,0],[-16419313.587484475,-6470809.033225357,0,27060,2,0],[-16355069.18942895,-6753433.134555087,0,27120,2,0],[-16286513.895849971,-7034670.132885393,0,27180,2,0],[-16213670.726023914,-7314440.368741248,0,27240,2,0],[-16136603.560021121,-7592691.037953135,0,27300,2,0],[-16055362.434950352,-7869377.835553143,0,27360,2,0],[-15969979.70790373,-8144428.525248526,0,27420,2,0],[-15880513.887507409,-8417790.989569904,0,27480,2,0],[-15787003.256339764,-8689419.325590037,0,27540,2,0],[-15689518.188744882,-8959247.186710466,0,27600,2,0],[-15588070.619786752,-9227236.162705332,0,27660,2,0],[-15482735.294447666,-9493344.835487876,0,27720,2,0],[-15373561.20103518,-9757503.431725003,0,27780,2,0],[-15260598.904466158,-10019666.595860293,0,27840,2,0],[-15143874.447690636,-10279819.943927279,0,27900,2,0],[-15023468.789465966,-10537882.891236316,0,27960,2,0],[-14899415.30319742,-10793815.973447828,0,28020,2,0],[-14771778.446939228,-11047577.652579289,0,28080,2,0],[-14640590.25737772,-11299162.722831417,0,28140,2,0],[-14505921.619714262,-11548475.90578766,0,28200,2,0],[-14367810.455232233,-11795523.969682107,0,28260,2,0],[-14226298.474423068,-12040242.353612855,0,28320,2,0],[-14081465.846965635,-12282593.04485986,0,28380,2,0],[-13933356.845553758,-12522566.857244724,0,28440,2,0],[-13781993.372186484,-12760109.61903602,0,28500,2,0],[-13627454.74543122,-12995167.554202046,0,28560,2,0],[-13469797.902443277,-13227767.025188267,0,28620,2,0],[-13309054.782680651,-13457813.507327685,0,28680,2,0],[-13145296.808218349,-13685321.291773891,0,28740,2,0],[-12978551.47528591,-13910258.483619113,0,28800,2,0],[-12808902.014122121,-14132563.672207067,0,28860,2,0],[-12636373.249058478,-14352228.176284473,0,28920,2,0],[-12461021.227356846,-14569247.701065997,0,28980,2,0],[-12282915.054278502,-14783562.470012784,0,29040,2,0],[-12102100.821420906,-14995180.884981466,0,29100,2,0],[-11918602.582699887,-15204040.911832478,0,29160,2,0],[-11732500.79174661,-15410160.536102083,0,29220,2,0],[-11543853.072644737,-15613498.913978204,0,29280,2,0],[-11352681.44438814,-15814039.921466937,0,29340,2,0],[-11159050.227874286,-16011757.908030717,0,29400,2,0],[-10963019.237735685,-16206637.868493062,0,29460,2,0],[-10764627.993267445,-16398690.957644202,0,29520,2,0],[-10563934.42907685,-16587848.447474562,0,29580,2,0],[-10360969.210907549,-16774141.751554284,0,29640,2,0],[-10155808.265597353,-16957535.120686866,0,29700,2,0],[-9948488.21924808,-17137993.522953607,0,29760,2,0],[-9739060.988119135,-17315542.279581483,0,29820,2,0],[-9527579.470767848,-17490148.6599313,0,29880,0,0],[-9314375.866666922,-17661570.04076108,0,29940,2,0],[-9099480.35264772,-17829821.06493837,0,30000,0,0],[-8882968.636625743,-17994880.31263236,0,30060,0,0],[-8665159.386585988,-18156521.31138356,0,30120,2,0],[-8445822.74444758,-18314979.546039205,0,30180,0,0],[-8225011.239655942,-18470213.91385694,0,30240,1,0],[-8002912.002166848,-18622163.327092268,0,30300,0,0],[-7779589.681737064,-18770781.427172832,0,30360,1,0],[-7555095.847151253,-18916077.66804683,0,30420,1,0],[-7329305.520410834,-19058194.719808403,0,30480,2,0],[-7102124.5120944185,-19197187.22441888,0,30540,2,0],[-6873463.96394137,-19333136.71646744,0,30600,2,0],[-6643323.859702652,-19466083.486815974,0,30660,0,0],[-6412118.921355245,-19595792.44570359,0,30720,0,0],[-6180158.607420867,-19722131.93319193,0,30780,1,0],[-5947359.695152398,-19845162.792655297,0,30840,1,0],[-5713599.2640153915,-19965015.671869732,0,30900,0,0],[-5479091.119713907,-20081566.85779725,0,30960,0,0],[-5244037.382285173,-20194783.215377413,0,31020,2,0],[-5008124.159879933,-20304807.44086773,0,31080,1,0],[-4771295.749925887,-20411718.88664778,0,31140,1,0],[-4533715.387381149,-20515453.33686459,0,31200,2,0],[-4295257.236382603,-20616065.641393296,0,31260,0,0],[-4056158.172424063,-20713535.769511353,0,31320,1,0],[-3816584.1255945684,-20807776.31940792,0,31380,2,0],[-3576267.7108551525,-20898899.97730526,0,31440,1,0],[-3335262.699120836,-20986964.273961514,0,31500,1,0],[-3093736.472663111,-21071893.18229421,0,31560,1,0],[-2851762.0909198383,-21153686.709271852,0,31620,2,0],[-2609202.7549992157,-21232410.23857939,0,31680,0,0],[-2366251.777554546,-21308015.477580823,0,31740,1,0],[-2123128.841663195,-21380477.63893182,0,31800,0,0],[-1879882.3871716498,-21449803.17828899,0,31860,1,0],[-1636522.5150097893,-21515967.83572536,0,31920,2,0],[-1392762.8289137655,-21579140.735902023,0,31980,1,0],[-1148622.2861911897,-21639284.542775385,0,32040,1,0],[-904343.7048131159,-21696345.761760056,0,32100,1,0],[-659907.1806538178,-21750396.38073693,0,32160,1,0],[-415404.59874854033,-21801413.941054042,0,32220,1,0],[-170835.82369919235,-21849415.20765627,0,32280,1,0],[73768.85571084442,-21894413.49735907,0,32340,1,0],[318348.30074529495,-21936415.01310071,0,32400,0,0],[562723.011052478,-21975411.89981001,0,32460,1,0],[806822.314010689,-22011406.23770693,0,32520,1,0],[1050822.3066721475,-22044444.67684517,0,32580,2,0],[1294860.2270451614,-22074569.023285843,0,32640,1,0],[1538915.3026769587,-22101778.475601643,0,32700,2,0],[1782944.405012512,-22126093.53267659,0,32760,2,0],[2027088.8637456102,-22147536.241584558,0,32820,1,0],[2271154.600371135,-22166106.083826225,0,32880,0,0],[2514734.886792158,-22181793.275699377,0,32940,1,0],[2757812.090170325,-22194599.082601376,0,33000,2,0],[3000727.787395267,-22204572.49148672,0,33060,1,0],[3243446.875925218,-22211714.986109033,0,33120,2,0],[3485926.9680344453,-22216045.569160774,0,33180,0,0],[3727955.091700845,-22217587.815684494,0,33240,1,0],[3969344.048819045,-22216322.68418505,0,33300,1,0],[4210240.283416345,-22212288.26777853,0,33360,0,0],[4450422.515417924,-22205491.744044818,0,33420,0,0],[4689696.374914187,-22195992.4686552,0,33480,1,0],[4928216.134994266,-22183746.410705563,0,33540,1,0],[5166136.874665597,-22168794.583220027,0,33600,2,0],[5403620.837454514,-22151123.670380402,0,33660,1,0],[5640624.639060579,-22130789.635790415,0,33720,0,0],[5876745.069355292,-22107759.124120854,0,33780,1,0],[6112014.944764049,-22082142.87217469,0,33840,1,0],[6346538.441884721,-22053862.928443685,0,33900,2,0],[6580478.27394547,-22022952.05263163,0,33960,0,0],[6813655.028831883,-21989434.107218664,0,34020,0,0],[7045670.337445069,-21953393.751730815,0,34080,1,0],[7276690.296032183,-21914791.361289296,0,34140,2,0],[7507031.452604698,-21873623.52605853,0,34200,0,0],[7736496.213856149,-21829908.097851317,0,34260,0,0],[7964737.068146907,-21783757.640483152,0,34320,2,0],[8192048.839443997,-21735074.301015057,0,34380,2,0],[8418757.384716282,-21683846.262258317,0,34440,2,0],[8644872.83370516,-21630061.31773374,0,34500,2,0],[8870364.282998975,-21573721.479826607,0,34560,2,0],[9095203.294425234,-21514857.599916104,0,34620,1,0],[9319183.515403004,-21453541.197271913,0,34680,1,0],[9542105.95953589,-21389808.21846373,0,34740,1,0],[9763962.634371163,-21323675.20956372,0,34800,2,0],[9984942.60195441,-21255133.10705558,0,34860,0,0],[10204774.74188012,-21184236.67601043,0,34920,2,0],[10423503.06147148,-21110984.80773996,0,34980,1,0],[10641234.72643424,-21035367.489455134,0,35040,0,0],[10857650.69031872,-20957502.658735886,0,35100,1,0],[11072704.371094963,-20877424.433697652,0,35160,0,0],[11286381.707034156,-20795133.71408901,0,35220,1,0],[11498676.35192426,-20710649.18138064,0,35280,0,0],[11709577.383889947,-20624018.223884884,0,35340,0,0],[11918844.279993098,-20535270.251004394,0,35400,1,0],[12126717.407362552,-20444424.134264152,0,35460,2,0],[12333435.652703442,-20351297.094357096,0,35520,1,0],[12538994.900285244,-20255940.39978123,0,35580,1,0],[12743238.628853092,-20158435.79921182,0,35640,1,0],[12946124.97121539,-20058777.556771114,0,35700,1,0],[13147658.942997565,-19957038.62538934,0,35760,1,0],[13347798.290231017,-19853166.011366207,0,35820,1,0],[13546559.243851278,-19747244.40375178,0,35880,2,0],[13744030.472969694,-19639162.7620523,0,35940,0,0],[13940093.797697933,-19529019.25505941,0,36000,2,0],[14134700.070531484,-19416878.34578096,0,36060,0,0],[14327829.638695369,-19302686.067038313,0,36120,1,0],[14519341.256857432,-19186635.31890762,0,36180,0,0],[14709213.141196411,-19068665.7409181,0,36240,2,0],[14897574.155667664,-18948762.381038677,0,36300,2,0],[15084678.71935917,-18826714.423095107,0,36360,0,0],[15270247.967811303,-18702726.10101325,0,36420,1,0],[15454151.533497956,-18576952.26553417,0,36480,0,0],[15636287.615397083,-18449393.8119116,0,36540,0,0],[15816569.68657264,-18320153.544389505,0,36600,1,0],[15995113.070613053,-18189190.000284858,0,36660,2,0],[16172166.255371837,-18056244.87067995,0,36720,2,0],[16347894.421645174,-17921296.554732837,0,36780,1,0],[16522090.885283094,-17784413.741455123,0,36840,0,0],[16694525.695595408,-17645888.65727015,0,36900,1,0],[16865112.89379995,-17505681.025477998,0,36960,2,0],[17034179.932498302,-17363612.07696231,0,37020,1,0],[17201689.75537398,-17219721.179331485,0,37080,2,0],[17367618.698320057,-17073957.26814458,0,37140,1,0],[17531943.94927658,-16926408.187073693,0,37200,1,0],[17694544.114716798,-16777166.829962209,0,37260,1,0],[17855381.85050258,-16626275.471772816,0,37320,0,0],[18014309.570368703,-16473865.472761929,0,37380,2,0],[18171498.12881801,-16319810.491805956,0,37440,1,0],[18327024.70304629,-16164049.902509589,0,37500,1,0],[18480718.519447133,-16006698.991392637,0,37560,1,0],[18632611.66557296,-15847765.338471904,0,37620,1,0],[18782682.799497515,-15687267.232833723,0,37680,1,0],[18930884.905517306,-15525237.063380295,0,37740,0,0],[19077144.255448367,-15361840.28522442,0,37800,0,0],[19221313.70869794,-15197217.333666947,0,37860,2,0],[19363588.367127437,-15031093.657683522,0,37920,0,0],[19503986.252041273,-14863487.868623998,0,37980,1,0],[19642356.54772523,-14694598.67950643,0,38040,1,0],[19778836.12761546,-14524295.862173522,0,38100,2,0],[19913490.232516717,-14352409.993400022,0,38160,1,0],[20046334.88301827,-14178998.048775664,0,38220,2,0],[20177336.69748083,-14004064.24901247,0,38280,1,0],[20306485.813833456,-13827641.11969563,0,38340,2,0],[20433803.509401612,-13649717.9265438,0,38400,1,0],[20559223.431808427,-13470342.436049962,0,38460,1,0],[20682654.565532513,-13289664.158783058,0,38520,0,0],[20803993.16240751,-13107858.774063963,0,38580,0,0],[20923137.176862586,-12925071.13240052,0,38640,1,0],[21040149.536888245,-12741196.874318562,0,38700,2,0],[21155251.96122286,-12555946.881455233,0,38760,1,0],[21268377.67126648,-12369340.894817613,0,38820,0,0],[21379383.717463795,-12181674.35111339,0,38880,1,0],[21488221.208578415,-11993006.05355293,0,38940,1,0],[21595005.55457935,-11803181.894130837,0,39000,1,0],[21699701.354589976,-11612214.52146899,0,39060,2,0],[21802412.940291885,-11419969.938245201,0,39120,0,0],[21903021.586820755,-11226638.103650028,0,39180,2,0],[22001498.076081835,-11032212.21263158,0,39240,1,0],[22097963.19619331,-10836562.161578525,0,39300,0,0],[22192213.7059521,-10640032.691968538,0,39360,2,0],[22284315.816103186,-10442496.23046083,0,39420,0,0],[22374292.074687943,-10243939.88458971,0,39480,0,0],[22461975.86884979,-10044725.85679769,0,39540,2,0],[22547454.298455324,-9844546.035161557,0,39600,2,0],[22630919.01957049,-9643088.142175177,0,39660,0,0],[22712223.257203598,-9440694.332512783,0,39720,1,0],[22791247.3675366,-9237558.684506768,0,39780,2,0],[22868142.055564754,-9033376.328048406,0,39840,1,0],[22942911.879470717,-8828152.258365005,0,39900,0,0],[23015391.8958912,-8622223.178387819,0,39960,1,0],[23085573.744905237,-8415645.002656657,0,40020,1,0],[23153512.492255427,-8208256.46380864,0,40080,2,0],[23219292.17618307,-7999885.625412933,0,40140,0,0],[23282830.98009208,-7790769.1284555625,0,40200,0,0],[23344000.552507553,-7581228.579096352,0,40260,2,0],[23402895.48533202,-7370939.160510634,0,40320,0,0],[23459510.42889571,-7159930.3467782615,0,40380,2,0],[23513858.536625963,-6948236.189192937,0,40440,2,0],[23565992.431543004,-6735519.961649849,0,40500,0,0],[23615826.182505105,-6522144.169705935,0,40560,2,0],[23663392.92864857,-6308150.29941651,0,40620,0,0],[23708595.792769022,-6093514.366846941,0,40680,2,0],[23751509.777744647,-5878288.14441773,0,40740,0,0],[23792110.186572097,-5662495.632480116,0,40800,2,0],[23830359.362087525,-5446132.363523034,0,40860,1,0],[23866288.29246489,-5229061.493285049,0,40920,0,0],[23899836.30935086,-5011674.569213194,0,40980,2,0],[23931071.228743415,-4793766.526726642,0,41040,1,0],[23959928.76350238,-4575230.622700075,0,41100,1,0],[23986420.200177494,-4356224.0994681,0,41160,0,0],[24010532.51148199,-4136972.618127243,0,41220,1,0],[24032228.029000804,-3917475.1074776216,0,41280,2,0],[24051553.757356375,-3697424.378124718,0,41340,0,0],[24068490.517383847,-3476995.7226597024,0,41400,2,0],[24083035.764891718,-3256243.9003637284,0,41460,1,0],[24095165.99890251,-3034950.7660018397,0,41520,2,0],[24104894.96297268,-2813199.6662644777,0,41580,0,0],[24112215.301973708,-2591166.809648811,0,41640,0,0],[24117086.261606693,-2369219.352264391,0,41700,2,0],[24119532.443299454,-2147048.7336742803,0,41760,2,0],[24119553.805705514,-1924273.0977799713,0,41820,0,0],[24117122.441743996,-1701334.5983855128,0,41880,0,0],[24112239.720946964,-1478554.8907043424,0,41940,1,0],[24104904.747405585,-1255818.7613342346,0,42000,2,0],[24095130.691330507,-1032795.0062350684,0,42060,0,0],[24082850.456714228,-809633.0882518846,0,42120,0,0],[24068155.60914624,-586777.4849359217,0,42180,2,0],[24050973.553277876,-363822.7791921465,0,42240,0,0],[24031308.71980944,-140873.14263300534,0,42300,0,0],[24009196.24732278,81751.63135568082,0,42360,2,0],[23984604.086877488,304380.96657777973,0,42420,1,0],[23957480.39706917,527149.6064303378,0,42480,2,0],[23927858.113195553,750048.7803042373,0,42540,0,0],[23895720.397831533,972853.847560541,0,42600,2,0],[23861076.958199363,1195556.0383303736,0,42660,1,0],[23823884.3596829,1418311.6959255973,0,42720,1,0],[23784176.454713836,1640921.5233296207,0,42780,2,0],[23741924.858879514,1863541.6969115415,0,42840,0,0],[23697158.4831993,2085949.46676123,0,42900,1,0],[23649886.26845072,2307969.8736596284,0,42960,2,0],[23600053.003002666,2529921.684171438,0,43020,0,0],[23547700.690670628,2751584.8672279003,0,43080,1,0],[23492831.78320646,2972806.5680437633,0,43140,1,0],[23435433.916638155,3193671.187613969,0,43200,2,0],[23375449.782474853,3414398.9138536556,0,43260,1,0],[23312869.980755176,3634904.688425788,0,43320,0,0],[23247820.73307862,3854839.561364,0,43380,0,0],[23180286.857780248,4074024.4433885245,0,43440,2,0],[23110220.06852646,4292751.195355368,0,43500,1,0],[23037539.76435312,4511160.387521332,0,43560,0,0],[22962377.18212587,4728907.202056735,0,43620,2,0],[22884643.400305945,4946154.52125964,0,43680,2,0],[22804225.342173647,5163150.190356867,0,43740,0,0],[22721233.213654656,5379594.531378121,0,43800,1,0],[22635764.75062211,5595233.612970131,0,43860,2,0],[22547684.112222847,5810430.071834391,0,43920,1,0],[22456943.66693693,6025133.973831402,0,43980,1,0],[22363644.895109627,6239139.303131069,0,44040,2,0],[22267697.74245589,6452601.285555799,0,44100,1,0],[22169119.869648416,6665483.855448618,0,44160,0,0],[22068085.38069574,6877414.338465954,0,44220,0,0],[21964600.526345074,7088237.714693348,0,44280,0,0],[21858734.039632715,7297891.247592011,0,44340,2,0],[21750300.595990583,7506712.313276396,0,44400,2,0],[21639145.020437695,7714972.460297559,0,44460,0,0],[21525416.323961522,7922315.9451674735,0,44520,0,0],[21409316.367990553,8128386.020945253,0,44580,2,0],[21290627.86278698,8333503.443681514,0,44640,2,0],[21169228.641746912,8537920.12830632,0,44700,2,0],[21045081.06225775,8741625.122883026,0,44760,0,0],[20918385.07386783,8944260.435911164,0,44820,1,0],[20789235.383320406,9145654.051626612,0,44880,1,0],[20657543.788221437,9345921.50290479,0,44940,0,0],[20523409.430310484,9544890.605413465,0,45000,1,0],[20386826.35218296,9742543.33677911,0,45060,2,0],[20247626.06749797,9939129.356949642,0,45120,1,0],[20105765.302921623,10134605.145214217,0,45180,0,0],[19961495.530047577,10328671.611393847,0,45240,0,0],[19814902.728139732,10521130.214662835,0,45300,2,0],[19665814.05964745,10712274.793590743,0,45360,0,0],[19514191.686508093,10902038.916204864,0,45420,1,0],[19360196.023201942,11090256.481106408,0,45480,2,0],[19203578.864745483,11277203.8639354,0,45540,0,0],[19044459.939871997,11462669.31479842,0,45600,0,0],[18883081.939816028,11646357.229077628,0,45660,2,0],[18719253.608472724,11828519.98132076,0,45720,2,0],[18552662.167863175,12009379.015526852,0,45780,2,0],[18383386.935985547,12188930.670203429,0,45840,1,0],[18211528.778063793,12366970.992119456,0,45900,0,0],[18037344.16078409,12543195.143861983,0,45960,1,0],[17860850.71353824,12717616.132319555,0,46020,2,0],[17681792.659680262,12890430.116866957,0,46080,0,0],[17500301.04220634,13061485.873352073,0,46140,2,0],[17316421.249308877,13230730.076016407,0,46200,0,0],[17130123.017819386,13398142.770000132,0,46260,1,0],[16941577.103177268,13563573.901309863,0,46320,0,0],[16750791.27475303,13726977.338046758,0,46380,2,0],[16557639.161293836,13888439.264496353,0,46440,1,0],[16361981.210560407,14048037.406358559,0,46500,2,0],[16163863.27640874,14205742.531024057,0,46560,2,0],[15963108.247895895,14361622.513096584,0,46620,0,0],[15760067.338403538,14515431.298140977,0,46680,0,0],[15554990.576580442,14666901.578538079,0,46740,0,0],[15347940.368939377,14815999.21290326,0,46800,2,0],[15138624.419230081,14962913.631540127,0,46860,1,0],[14926880.964634214,15107687.371350788,0,46920,1,0],[14712909.835149368,15250231.122638112,0,46980,0,0],[14496885.656808775,15390357.282353261,0,47040,2,0],[14278662.120265888,15528143.3975447,0,47100,1,0],[14058070.807377767,15663647.98935667,0,47160,0,0],[13835510.959291056,15796664.08223057,0,47220,2,0],[13610788.978950433,15927219.36955483,0,47280,0,0],[13383952.713226167,16055288.841628892,0,47340,1,0],[13155156.026253507,16180751.374021221,0,47400,1,0],[12924268.807993231,16303659.137129728,0,47460,0,0],[12691513.869049042,16423881.460018089,0,47520,1,0],[12456856.903687852,16541388.431827787,0,47580,2,0],[12220031.988872217,16656291.700832514,0,47640,1,0],[11981062.725481177,16768564.912773952,0,47700,2,0],[11739944.789041402,16878175.547911473,0,47760,0,0],[11496914.992811546,16985004.625111483,0,47820,2,0],[11251966.500131441,17088984.177416958,0,47880,1,0],[11004946.566824995,17190188.889373414,0,47940,1,0],[10756102.298737943,17288480.82822199,0,48000,1,0],[10505422.232868807,17383855.242591906,0,48060,2,0],[10252750.671192067,17476300.111457177,0,48120,2,0],[9997984.664772311,17565839.402539782,0,48180,0,0],[9741489.08345569,17652344.750607572,0,48240,2,0],[9483276.712050607,17735756.971435685,0,48300,1,0],[9223217.644803654,17816096.76866065,0,48360,1,0],[8961529.003748741,17893267.70279265,0,48420,0,0],[8698408.942632671,17967181.287264902,0,48480,2,0],[8433725.988836354,18037842.414376177,0,48540,0,0],[8167493.84991472,18105241.83300175,0,48600,1,0],[7899946.552556624,18169283.780548144,0,48660,0,0],[7631130.146386272,18229921.26378901,0,48720,1,0],[7361055.229738466,18287142.732083496,0,48780,2,0],[7089432.157478467,18340967.10637747,0,48840,1,0],[6816290.149288237,18391354.793824974,0,48900,0,0],[6542048.013470386,18438237.285100542,0,48960,0,0],[6266888.598361177,18481503.4290309,0,49020,2,0],[5990521.393240139,18521208.165814675,0,49080,2,0],[5712627.244216387,18557364.804180603,0,49140,1,0],[5433441.310641357,18589912.561262626,0,49200,0,0],[5153359.239571253,18618756.41206233,0,49260,1,0],[4872426.218523127,18643892.52210946,0,49320,0,0],[4590701.699750924,18665255.497935608,0,49380,1,0],[4308230.6652105255,18682853.728942357,0,49440,0,0],[4025058.264344632,18696619.27648417,0,49500,2,0],[3741074.8912945776,18706561.564328104,0,49560,1,0],[3456119.919862871,18712633.34355819,0,49620,2,0],[3170258.605762999,18714823.189917166,0,49680,0,0],[2883764.1609825655,18713083.39456059,0,49740,0,0],[2596996.1731423065,18707385.797874972,0,49800,1,0],[2309859.3339938647,18697708.040248476,0,49860,0,0],[2022419.470677852,18684045.854842454,0,49920,2,0],[1734519.616398008,18666324.47704645,0,49980,2,0],[1445884.9380585076,18644507.00867494,0,50040,2,0],[1156586.0787005776,18618576.839745235,0,50100,2,0],[866671.0416791708,18588508.70856433,0,50160,2,0],[576189.0450142953,18554244.634972364,0,50220,0,0],[285599.1046452307,18515824.471502993,0,50280,0,0],[-4704.673091688619,18473259.294118173,0,50340,1,0],[-294824.6730612873,18426529.897593535,0,50400,1,0],[-584883.8194318083,18375575.107843067,0,50460,2,0],[-874979.4174531691,18320355.862248845,0,50520,1,0],[-1165058.5663164246,18260812.23813971,0,50580,0,0],[-1454678.5660042535,18197047.412867874,0,50640,0,0],[-1743611.7139577798,18129080.184175305,0,50700,1,0],[-2031936.720958001,18056829.397203326,0,50760,2,0],[-2319965.280449063,17980235.423850328,0,50820,0,0],[-2607446.506856088,17899296.64742374,0,50880,2,0],[-2894279.7598769856,17814016.518619187,0,50940,0,0],[-3180413.6579347374,17724396.260765463,0,51000,1,0],[-3465588.572852316,17630459.436929762,0,51060,0,0],[-3749725.295419628,17532234.570776004,0,51120,0,0],[-4032605.067708309,17429762.462260455,0,51180,2,0],[-4314480.967351782,17322914.01764077,0,51240,2,0],[-4595587.367503302,17211586.498823367,0,51300,0,0],[-4875528.459912534,17095864.33654887,0,51360,0,0],[-5153902.731208986,16975938.37985552,0,51420,1,0],[-5430779.191864021,16851705.643111605,0,51480,2,0],[-5706427.838830332,16723053.891236875,0,51540,2,0],[-5980909.311220461,16589890.382189527,0,51600,1,0],[-6253978.615007939,16452306.921152832,0,51660,1,0],[-6525414.249078606,16310398.009130687,0,51720,2,0],[-6795277.733228919,16164080.97236982,0,51780,2,0],[-7063644.834627034,16013289.265176764,0,51840,0,0],[-7330124.6705905,15858221.177015504,0,51900,0,0],[-7594326.213112736,15699054.86154103,0,51960,1,0],[-7856317.549734859,15535738.254892662,0,52020,2,0],[-8116315.836785163,15368100.085699037,0,52080,1,0],[-8374258.743244834,15196169.059825068,0,52140,1,0],[-8629891.295560682,15020064.717967976,0,52200,1,0],[-8883142.687631402,14839820.929647835,0,52260,1,0],[-9133938.255242849,14655439.012664117,0,52320,1,0],[-9382172.448585073,14467002.227014458,0,52380,1,0],[-9627795.275491089,14274479.398457175,0,52440,1,0],[-9870700.441517556,14077980.266847715,0,52500,0,0],[-10110687.924046375,13877606.297757372,0,52560,0,0],[-10347536.741173508,13673526.824425545,0,52620,2,0],[-10581437.691074446,13465552.275822008,0,52680,0,0],[-10812314.837071203,13253752.36803751,0,52740,0,0],[-11039813.21034769,13038384.02869543,0,52800,2,0],[-11264161.131528227,12819250.899589313,0,52860,2,0],[-11485503.361276576,12596177.641273603,0,52920,2,0],[-11703763.73852304,12369202.549047822,0,52980,2,0],[-11918881.809322888,12138352.451943656,0,53040,1,0],[-12130627.256005004,11903844.987845883,0,53100,2,0],[-12338977.126347467,11665721.791391015,0,53160,0,0],[-12543683.680802893,11424183.013521623,0,53220,1,0],[-12744599.058112338,11179425.489629142,0,53280,1,0],[-12941766.548570301,10931369.390669845,0,53340,0,0],[-13134993.213350808,10680235.189600179,0,53400,2,0],[-13324337.684686162,10425950.738095004,0,53460,0,0],[-13509738.919321055,10168563.68870765,0,53520,2,0],[-13691134.459438646,9908152.972511027,0,53580,0,0],[-13868444.576658228,9644808.608336132,0,53640,1,0],[-14041536.891313404,9378742.719832629,0,53700,1,0],[-14210450.476883603,9109887.819357153,0,53760,2,0],[-14375204.864544947,8838149.817102116,0,53820,0,0],[-14535670.151282314,8563774.902512262,0,53880,2,0],[-14691794.13736642,8286838.040289157,0,53940,0,0],[-14843538.839043727,8007428.179809472,0,54000,2,0],[-14990823.93744042,7725626.969283356,0,54060,0,0],[-15133633.631723419,7441508.617234834,0,54120,0,0],[-15271762.175121631,7155493.966614644,0,54180,2,0],[-15405312.550711844,6867336.946851018,0,54240,0,0],[-15534262.036746524,6577116.79286281,0,54300,0,0],[-15658413.585040022,6285267.776758757,0,54360,1,0],[-15777824.853747979,5991702.288502206,0,54420,0,0],[-15892466.784627534,5696528.764898106,0,54480,1,0],[-16002298.452342747,5399811.469415879,0,54540,1,0],[-16107363.338520823,5101484.7160708,0,54600,2,0],[-16207700.62953126,4801493.387143482,0,54660,2,0],[-16303333.102696162,4499702.375467813,0,54720,0,0],[-16394115.686285406,4196597.124419519,0,54780,1,0],[-16480022.581053672,3892405.6294606156,0,54840,1,0],[-16561039.848871803,3587083.237923804,0,54900,2,0],[-16637222.131633984,3280510.174138992,0,54960,1,0],[-16708548.11137348,2972806.044300314,0,55020,2,0],[-16774997.581561841,2664052.870530866,0,55080,1,0],[-16836598.866195597,2354336.5475235847,0,55140,0,0],[-16893234.81683824,2044114.6633173968,0,55200,1,0],[-16944915.978885427,1733488.5873673211,0,55260,2,0],[-16991702.644383445,1422159.6462886643,0,55320,1,0],[-17033601.063940607,1110246.2568083995,0,55380,0,0],[-17070562.716942605,798198.0352305236,0,55440,0,0],[-17102584.24772034,486282.31487287616,0,55500,2,0],[-17129703.865874834,174209.22574078132,0,55560,2,0],[-17151953.025577493,-138258.12853485564,0,55620,2,0],[-17169358.80485291,-451049.7116711647,0,55680,1,0],[-17181902.6310914,-763905.764461491,0,55740,0,0],[-17189593.726541545,-1076349.9112562041,0,55800,2,0],[-17192464.93670964,-1388489.048457078,0,55860,1,0],[-17190519.63161647,-1700426.1163507078,0,55920,2,0],[-17183791.550066046,-2012073.7815488656,0,55980,1,0],[-17172305.213045277,-2323348.7523561567,0,56040,2,0],[-17156066.137374118,-2634148.3745359024,0,56100,0,0],[-17135116.464219347,-2944227.764022096,0,56160,1,0],[-17109512.61298872,-3253339.011383912,0,56220,0,0],[-17079264.25411991,-3561374.9717332236,0,56280,2,0],[-17044412.94947224,-3868443.1935424516,0,56340,0,0],[-17004981.36533525,-4174484.2071083705,0,56400,1,0],[-16961014.28828546,-4479222.537389112,0,56460,1,0],[-16912553.37337959,-4782769.137583583,0,56520,2,0],[-16859583.99287173,-5085246.091882843,0,56580,0,0],[-16802186.58090332,-5386365.354297669,0,56640,1,0],[-16740441.32107373,-5685907.296982019,0,56700,1,0],[-16674342.86842636,-5983974.4766489705,0,56760,0,0],[-16603986.337088896,-6280318.762781996,0,56820,1,0],[-16529411.779017543,-6574888.4902700065,0,56880,2,0],[-16450580.594523866,-6867957.723091567,0,56940,2,0],[-16367481.782141868,-7159628.852372986,0,57000,0,0],[-16280267.145212997,-7449486.729843728,0,57060,1,0],[-16189024.605796207,-7737329.322926385,0,57120,0,0],[-16093832.92202722,-8023052.614885901,0,57180,2,0],[-15994654.01351,-8306826.37744655,0,57240,0,0],[-15891563.078347266,-8588532.037457345,0,57300,1,0],[-15784672.365217643,-8868019.430963233,0,57360,0,0],[-15674020.513326608,-9145156.317028984,0,57420,1,0],[-15559678.733875325,-9419955.770565253,0,57480,0,0],[-15441703.154600058,-9692329.312401865,0,57540,0,0],[-15320205.945772998,-9962086.539452266,0,57600,2,0],[-15195103.680694424,-10229491.406118786,0,57660,1,0],[-15066375.422235064,-10494684.233921556,0,57720,2,0],[-14934088.547184609,-10757590.565920116,0,57780,2,0],[-14798192.339041267,-11018352.298210572,0,57840,0,0],[-14658901.651524391,-11276594.519907303,0,57900,1,0],[-14516388.274194242,-11532118.85736808,0,57960,2,0],[-14370511.173075804,-11785215.307806153,0,58020,0,0],[-14221441.397580681,-12035666.124967787,0,58080,0,0],[-14069379.108961908,-12283128.132967968,0,58140,1,0],[-13914330.281815115,-12527745.746303894,0,58200,2,0],[-13756132.180978553,-12769774.230791116,0,58260,1,0],[-13594845.399834761,-13009181.118195508,0,58320,2,0],[-13430528.35486918,-13245933.876850624,0,58380,1,0],[-13263242.94405049,-13480014.512948409,0,58440,1,0],[-13093142.357035272,-13711215.546539824,0,58500,0,0],[-12920390.354213202,-13939388.263059875,0,58560,2,0],[-12744931.200868508,-14164665.603149295,0,58620,1,0],[-12566721.139599625,-14387127.156712905,0,58680,1,0],[-12385938.599443305,-14606630.95524687,0,58740,2,0],[-12202495.649904028,-14823290.541880637,0,58800,0,0],[-12016585.586784359,-15036945.412250418,0,58860,0,0],[-11828496.631692829,-15247307.7088589,0,58920,0,0],[-11638280.070251564,-15454358.585377514,0,58980,2,0],[-11445761.072994713,-15658333.475176532,0,59040,2,0],[-11250734.937030504,-15859514.79206823,0,59100,0,0],[-11053522.21165992,-16057574.492168259,0,59160,2,0],[-10854165.65735834,-16252528.523119692,0,59220,1,0],[-10652600.317796951,-16444503.84629141,0,59280,2,0],[-10448845.36759864,-16633453.032394907,0,59340,1,0],[-10243019.326585043,-16819374.149225764,0,59400,1,0],[-10035233.853959618,-17002130.26158944,0,59460,1,0],[-9825591.756358886,-17181715.81494912,0,59520,1,0],[-9614134.433929278,-17358140.328598637,0,59580,1,0],[-9400905.663425894,-17531358.95169033,0,59640,1,0],[-9185953.197105337,-17701377.51719127,0,59700,0,0],[-8969500.685862863,-17868093.039169278,0,59760,1,0],[-8751578.967483241,-18031499.020116143,0,59820,0,0],[-8532246.774604587,-18191562.69677332,0,59880,2,0],[-8311389.984495397,-18348427.373588625,0,59940,1,0],[-8088925.499023633,-18502161.12065596,0,60000,0,0],[-7865204.413866314,-18652567.842760082,0,60060,0,0],[-7640434.899660069,-18799570.06569395,0,60120,2,0],[-7414333.500156916,-18943331.722931206,0,60180,1,0],[-7186820.491603217,-19083949.579827853,0,60240,2,0],[-6957937.890556193,-19221444.78457862,0,60300,2,0],[-6727580.426185143,-19355897.640749365,0,60360,0,0],[-6496112.171719107,-19487095.627424616,0,60420,1,0],[-6263717.459387853,-19615008.565416533,0,60480,2,0],[-6030128.391494411,-19739775.38885462,0,60540,2,0],[-5795230.42490346,-19861488.872428402,0,60600,0,0],[-5559401.803635776,-19979997.207596138,0,60660,2,0],[-5322687.22540081,-20095272.49693111,0,60720,0,0],[-5085106.50101608,-20207340.471206993,0,60780,2,0],[-4846734.826705051,-20316206.917749558,0,60840,2,0],[-4607252.756773043,-20422012.197811723,0,60900,0,0],[-4367067.678661365,-20524630.550449975,0,60960,2,0],[-4126189.4671124793,-20624076.384748302,0,61020,0,0],[-3884689.64941252,-20720320.0859511,0,61080,1,0],[-3642761.8293920355,-20813336.25118828,0,61140,0,0],[-3400440.2271125056,-20903112.664880365,0,61200,0,0],[-3157967.417344807,-20989627.85731833,0,61260,1,0],[-2915165.550562582,-21072903.84777155,0,61320,2,0],[-2671744.723421493,-21153117.358910765,0,61380,1,0],[-2427790.595940651,-21230249.01279871,0,61440,1,0],[-2183459.920982873,-21304265.980047647,0,61500,2,0],[-1938629.6036138735,-21375225.001004674,0,61560,0,0],[-1693537.2010895484,-21443077.604109433,0,61620,0,0],[-1448549.1094053169,-21507723.707871348,0,61680,1,0],[-1203510.6360795943,-21569263.970633626,0,61740,1,0],[-958317.3789040123,-21627730.94537099,0,61800,2,0],[-712801.141894455,-21683174.678089608,0,61860,1,0],[-467010.0565503934,-21735617.140797794,0,61920,0,0],[-221335.53962346152,-21784983.720764555,0,61980,2,0],[24371.449587019993,-21831335.03822981,0,62040,1,0],[270261.0623899178,-21874703.453269076,0,62100,2,0],[516289.5058422941,-21915082.819732506,0,62160,0,0],[762241.5433762101,-21952519.26623356,0,62220,0,0],[1007734.0931071268,-21986888.934690706,0,62280,0,0],[1252721.984248381,-22018287.885345705,0,62340,2,0],[1497556.1046910104,-22046721.100063954,0,62400,1,0],[1742375.9986288096,-22072246.875524454,0,62460,2,0],[1987136.4683369335,-22094857.52266903,0,62520,0,0],[2231620.9093420524,-22114567.365818333,0,62580,1,0],[2475647.377282625,-22131383.99523353,0,62640,2,0],[2719540.540481843,-22145349.244100936,0,62700,0,0],[2963072.638659092,-22156431.444968015,0,62760,1,0],[3206045.732167809,-22164667.943935677,0,62820,1,0],[3448623.1548841246,-22170069.897886325,0,62880,0,0],[3690559.4250236107,-22172660.118012372,0,62940,1,0],[3931860.628968437,-22172462.774691965,0,63000,0,0],[4172500.7659483193,-22169441.4299903,0,63060,2,0],[4412608.3711585775,-22163668.02590376,0,63120,1,0],[4652332.931505746,-22155156.853805784,0,63180,1,0],[4891505.148695514,-22143875.624708444,0,63240,1,0],[5130056.400470178,-22129876.775220178,0,63300,1,0],[5367988.011878224,-22113160.667345602,0,63360,2,0],[5605449.570596809,-22093743.56178881,0,63420,2,0],[5842594.113981076,-22071626.947361466,0,63480,0,0],[6079018.162287226,-22046856.63053321,0,63540,0,0],[6314373.438479628,-22019455.54594255,0,63600,2,0],[6548960.765328354,-21989440.39104676,0,63660,0,0],[6782759.713922504,-21956803.872421555,0,63720,1,0],[7015603.1393484175,-21921617.998656128,0,63780,2,0],[7247794.3336406825,-21883805.801709257,0,63840,1,0],[7479304.757057138,-21843402.843238614,0,63900,1,0],[7709936.575517798,-21800445.2053176,0,63960,2,0],[7939877.811183146,-21754951.033027247,0,64020,1,0],[8169053.4304917,-21706879.990277946,0,64080,1,0],[8397304.753030917,-21656316.804138135,0,64140,0,0],[8624411.24014923,-21603311.449695375,0,64200,1,0],[8850358.516076446,-21547915.656916633,0,64260,1,0],[9075289.65890902,-21490039.681933682,0,64320,0,0],[9299038.27411631,-21429796.177361757,0,64380,2,0],[9521744.878700877,-21367138.034819677,0,64440,0,0],[9743374.8472949,-21302068.594283488,0,64500,1,0],[9963734.12679214,-21234699.941457603,0,64560,2,0],[10183186.550706511,-21164912.428205952,0,64620,0,0],[10401465.90245304,-21092759.70140236,0,64680,1,0],[10618480.896478675,-21018348.604369998,0,64740,0,0],[10834109.658229334,-20941691.51438306,0,64800,2,0],[11048587.985860692,-20862742.304118104,0,64860,2,0],[11262183.47901757,-20781371.850975506,0,64920,0,0],[11474556.464488545,-20697775.677940868,0,64980,0,0],[11685347.578158485,-20612057.321726818,0,65040,1,0],[11894714.320295531,-20524180.562996738,0,65100,2,0],[12102977.587843908,-20434013.857085247,0,65160,2,0],[12310283.214980422,-20341536.241037644,0,65220,1,0],[12516397.839035066,-20246796.719748586,0,65280,0,0],[12721054.44289558,-20150008.543169398,0,65340,2,0],[12924358.669901224,-20051052.413708434,0,65400,0,0],[13126272.304922834,-19949970.50001096,0,65460,1,0],[13326675.32994932,-19846899.79896844,0,65520,2,0],[13525827.092755022,-19741644.113246318,0,65580,1,0],[13723704.21672762,-19634223.045670453,0,65640,2,0],[13920318.81366876,-19524675.940484017,0,65700,0,0],[14115491.130800936,-19413124.82057008,0,65760,2,0],[14309181.013625044,-19299532.498005666,0,65820,1,0],[14501557.548201049,-19183858.372347757,0,65880,1,0],[14692431.35529866,-19066182.07241145,0,65940,2,0],[14881951.587753575,-18946472.64450838,0,66000,0,0],[15069951.31095329,-18824802.43185118,0,66060,0,0],[15256095.585930962,-18701419.523624636,0,66120,2,0],[15440693.738752026,-18576145.962831832,0,66180,1,0],[15623863.31038981,-18448831.75710852,0,66240,0,0],[15805283.325894127,-18319781.326674458,0,66300,1,0],[15984994.907047315,-18188978.39560879,0,66360,1,0],[16163053.308420863,-18056313.770920318,0,66420,1,0],[16339496.4510481,-17921843.979621265,0,66480,1,0],[16514305.790623343,-17785588.328187767,0,66540,1,0],[16687434.763262663,-17647512.867419284,0,66600,1,0],[16858904.726740893,-17507713.5060371,0,66660,1,0],[17028673.607505485,-17366125.1171639,0,66720,2,0],[17196927.86766517,-17222703.538931143,0,66780,2,0],[17363719.94163939,-17077330.382535294,0,66840,1,0],[17528892.0578835,-16930135.773811694,0,66900,1,0],[17692348.83365246,-16781268.21616998,0,66960,0,0],[17853915.25229383,-16630877.115523515,0,67020,1,0],[18013617.335867643,-16478957.732753905,0,67080,1,0],[18171502.500555933,-16325396.459390633,0,67140,2,0],[18327758.210785273,-16170105.428430801,0,67200,0,0],[18482199.96405989,-16013256.036501026,0,67260,0,0],[18634575.700859264,-15855057.118167067,0,67320,1,0],[18785000.06401195,-15695454.114231246,0,67380,1,0],[18933578.046685897,-15534317.962340262,0,67440,1,0],[19080311.606643047,-15371657.249004742,0,67500,2,0],[19225312.71862431,-15207348.579797259,0,67560,1,0],[19368571.51216509,-15041448.784527734,0,67620,1,0],[19509917.36705667,-14874053.762157092,0,67680,1,0],[19649387.42086627,-14705255.231813539,0,67740,0,0],[19786823.555892523,-14535123.920848295,0,67800,1,0],[19922238.296315607,-14363771.83977475,0,67860,1,0],[20055720.707681555,-14190993.697641257,0,67920,2,0],[20187359.75818828,-14016705.5682045,0,67980,1,0],[20317181.37339898,-13840932.336949462,0,68040,1,0],[20445007.23881581,-13663797.353303924,0,68100,0,0],[20570802.97066296,-13485516.070135947,0,68160,1,0],[20694464.668943815,-13306055.621961256,0,68220,1,0],[20816135.5826263,-13125341.64074887,0,68280,1,0],[20935834.233981565,-12943357.252462296,0,68340,2,0],[21053597.56945362,-12759959.44557471,0,68400,0,0],[21169328.20464663,-12575323.835362805,0,68460,2,0],[21283029.67866668,-12389514.180537852,0,68520,2,0],[21394896.03245355,-12202192.127490051,0,68580,0,0],[21504673.49720969,-12013698.558090303,0,68640,1,0],[21612304.93698762,-11824203.577035438,0,68700,1,0],[21717878.62666301,-11633567.606315954,0,68760,0,0],[21821259.144572012,-11441995.607659884,0,68820,2,0],[21922573.69812528,-11249314.554585831,0,68880,0,0],[22021768.853881188,-11055553.455895238,0,68940,2,0],[22118861.245449055,-10860725.143230602,0,69000,0,0],[22213805.937907707,-10664869.637450809,0,69060,0,0],[22306494.994840883,-10468318.445948938,0,69120,1,0],[22396944.178394124,-10270895.92977439,0,69180,1,0],[22485271.519997884,-10072525.031747688,0,69240,2,0],[22571490.205854706,-9872998.041136729,0,69300,1,0],[22655617.442852844,-9672357.193801742,0,69360,1,0],[22737588.994714174,-9470817.031184841,0,69420,0,0],[22817302.74631255,-9268501.408570537,0,69480,0,0],[22894674.417738955,-9065646.019239172,0,69540,2,0],[22969860.09135704,-8861920.591753181,0,69600,1,0],[23042921.167316966,-8657166.574414644,0,69660,2,0],[23113788.685439505,-8451417.402198765,0,69720,2,0],[23182567.79470948,-8244506.00906711,0,69780,0,0],[23249099.357750457,-8036798.779325682,0,69840,0,0],[23313291.352222003,-7828683.194466176,0,69900,2,0],[23375223.251897246,-7619777.687602569,0,69960,1,0],[23434976.536382794,-7409982.361450087,0,70020,0,0],[23492379.094442192,-7199659.307044924,0,70080,2,0],[23547528.93212542,-6988613.760304721,0,70140,0,0],[23600404.00625007,-6776894.092152396,0,70200,1,0],[23650920.81318579,-6564711.309689701,0,70260,2,0],[23699204.619250216,-6351696.997360275,0,70320,2,0],[23745282.27938005,-6137711.358344991,0,70380,0,0],[23789018.613008395,-5923156.092631684,0,70440,0,0],[23830388.164871763,-5708356.651479021,0,70500,0,0],[23869344.014305778,-5493357.310423408,0,70560,0,0],[23905940.455699906,-5278174.587824718,0,70620,2,0],[23940160.3992135,-5062483.310146831,0,70680,1,0],[23972103.70015433,-4846110.103931512,0,70740,2,0],[24001681.01474836,-4629067.6827029595,0,70800,1,0],[24028961.189030994,-4411425.264214316,0,70860,1,0],[24053844.80772198,-4193319.168470654,0,70920,2,0],[24076396.998680778,-3974642.930467703,0,70980,1,0],[24096572.007767446,-3755395.3273243173,0,71040,1,0],[24114393.97549316,-3535758.3182569128,0,71100,2,0],[24129796.839953568,-3315606.071125722,0,71160,0,0],[24142830.773435634,-3095123.021382935,0,71220,2,0],[24153448.362112325,-2874309.2979700486,0,71280,1,0],[24161692.70634563,-2653053.7846892895,0,71340,2,0],[24167492.36044174,-2431355.2791208853,0,71400,0,0],[24170901.022173256,-2209397.0203101267,0,71460,2,0],[24171879.2095986,-1987230.11521562,0,71520,0,0],[24170421.67398683,-1764860.1797167265,0,71580,1,0],[24166517.620419193,-1542487.5554567217,0,71640,2,0],[24160182.169114146,-1319779.898396848,0,71700,0,0],[24151401.575688455,-1096937.102825947,0,71760,0,0],[24140173.622330952,-874352.8615491199,0,71820,1,0],[24126494.168809347,-651863.4165061504,0,71880,1,0],[24110351.260088813,-429306.0676554111,0,71940,1,0],[24091769.898381874,-206688.35731284355,0,72000,1,0],[24070684.73062062,15958.866003309151,0,72060,0,0],[24047146.361792956,238387.1799327594,0,72120,1,0],[24021142.998708457,460637.8438560593,0,72180,1,0],[23992682.79643552,682848.0951097568,0,72240,0,0],[23961733.404155876,904793.4173088032,0,72300,0,0],[23928359.0072436,1126277.024204569,0,72360,1,0],[23892493.724251065,1347481.2285668633,0,72420,2,0],[23854093.24482203,1568730.008009255,0,72480,2,0],[23813150.668150887,1790156.9085935943,0,72540,2,0],[23769591.194334257,2011768.495898281,0,72600,1,0],[23723529.289980065,2233324.260115221,0,72660,2,0],[23674876.038457137,2454829.6499404865,0,72720,2,0],[23623638.246448603,2676417.2589879544,0,72780,1,0],[23569862.247693695,2897889.972002613,0,72840,1,0],[23513528.15436131,3119067.8067632676,0,72900,0,0],[23454730.12578737,3339713.557765932,0,72960,1,0],[23393431.061358932,3559837.688679884,0,73020,0,0],[23329639.606814817,3779384.1542646154,0,73080,1,0],[23263397.6785358,3998374.4266391695,0,73140,2,0],[23194542.44513797,4217105.385136986,0,73200,1,0],[23123091.74633007,4435520.794132935,0,73260,1,0],[23049099.519163985,4653449.547592256,0,73320,1,0],[22972559.45139429,4870879.973776951,0,73380,2,0],[22893425.60095779,5087933.272100209,0,73440,0,0],[22811730.056872915,5304436.689874769,0,73500,1,0],[22727557.390682057,5520157.2301573,0,73560,2,0],[22640795.997818787,5735440.503038743,0,73620,0,0],[22551441.803414203,5950056.099641279,0,73680,1,0],[22459618.486895327,6163853.768998608,0,73740,1,0],[22365271.774527892,6376952.0875745285,0,73800,0,0],[22268412.60152239,6589148.159656194,0,73860,2,0],[22169034.047724377,6800597.15468522,0,73920,2,0],[22066912.000576075,7011576.544515145,0,73980,0,0],[21962281.90946853,7221757.094473257,0,74040,1,0],[21855154.410842117,7430935.770613761,0,74100,0,0],[21745548.625471413,7639077.638712636,0,74160,2,0],[21633420.598215535,7846325.607898816,0,74220,0,0],[21518735.527052805,8052676.048448305,0,74280,2,0],[21401492.91480088,8258038.569107151,0,74340,2,0],[21281549.783453733,8462759.48267178,0,74400,2,0],[21158851.244562183,8666770.26189575,0,74460,0,0],[21033644.12304219,8869734.127647357,0,74520,0,0],[20906078.85553524,9071326.485166242,0,74580,1,0],[20776071.4371019,9271669.475970905,0,74640,0,0],[20643646.37417254,9470708.942432905,0,74700,0,0],[20508864.769333266,9668306.391431011,0,74760,2,0],[20371590.751533344,9864731.32394383,0,74820,0,0],[20231779.375483338,10059919.791810594,0,74880,1,0],[20089557.3582467,10253712.082545523,0,74940,1,0],[19944829.25769888,10446216.70877493,0,75000,1,0],[19797591.23883899,10637412.17168314,0,75060,2,0],[19647729.51275817,10827418.663373008,0,75120,1,0],[19495268.953759406,11016176.841482498,0,75180,1,0],[19340309.022890642,11203535.652971724,0,75240,2,0],[19182760.879361782,11389575.574782128,0,75300,1,0],[19022598.33252183,11574285.322932653,0,75360,0,0],[18860093.371533528,11757358.739744406,0,75420,1,0],[18695238.893247955,11938770.320903251,0,75480,1,0],[18527928.213002063,12118612.09643708,0,75540,0,0],[18358293.663745403,12296711.582488533,0,75600,1,0],[18186332.747520626,12473041.031755641,0,75660,0,0],[18012084.04599711,12647576.691950858,0,75720,1,0],[17835524.983827926,12820276.217675317,0,75780,1,0],[17656553.59415593,12991256.548549416,0,75840,2,0],[17475039.967277937,13160585.022462532,0,75900,0,0],[17291137.518630993,13328097.655713448,0,75960,1,0],[17104995.602049373,13493660.653135257,0,76020,2,0],[16916318.718343657,13657484.922427187,0,76080,2,0],[16725014.827117408,13819624.3027893,0,76140,1,0],[16531234.108854039,13979941.891973125,0,76200,0,0],[16335247.454241881,14138155.50564142,0,76260,1,0],[16137088.530794412,14294256.77182796,0,76320,2,0],[15936461.38587763,14448416.644035129,0,76380,0,0],[15733538.862801557,14600488.352590796,0,76440,1,0],[15528499.155525774,14750338.752490956,0,76500,2,0],[15321006.340729455,14898146.35682758,0,76560,1,0],[15111147.310725447,15043866.187663523,0,76620,1,0],[14899031.004163027,15187353.588059258,0,76680,1,0],[14684728.093442995,15328575.726146985,0,76740,0,0],[14468335.348788599,15467387.685851788,0,76800,2,0],[14249763.909634795,15603893.554925624,0,76860,2,0],[14028721.693971694,15738203.203929212,0,76920,1,0],[13805373.262265876,15870193.321068807,0,76980,1,0],[13579926.086759608,15999737.522931548,0,77040,0,0],[13352496.670056472,16126700.468209427,0,77100,0,0],[13123308.866851969,16250980.970673395,0,77160,2,0],[12892038.874195378,16372695.986173322,0,77220,2,0],[12658412.595135063,16491989.092641471,0,77280,0,0],[12422782.86918345,16608641.079750389,0,77340,0,0],[12185456.959665779,16722462.597300116,0,77400,2,0],[11946178.409848541,16833573.186067123,0,77460,1,0],[11704763.63544544,16942020.243743416,0,77520,1,0],[11461418.084280876,17047671.500513893,0,77580,1,0],[11216203.959075835,17150522.181374025,0,77640,0,0],[10969282.1436464,17250424.853062883,0,77700,1,0],[10720685.234427504,17347365.77452372,0,77760,2,0],[10470078.477670832,17441438.235368103,0,77820,0,0],[10217729.155982332,17532545.422959052,0,77880,2,0],[9963582.289784268,17620637.16059213,0,77940,0,0],[9707750.990864504,17705674.0710974,0,78000,1,0],[9450368.362872917,17787580.092581674,0,78060,0,0],[9191511.102998232,17866294.355145454,0,78120,1,0],[8931212.953684399,17941803.763465792,0,78180,1,0],[8669294.451025741,18014123.84898201,0,78240,2,0],[8405664.061469989,18083239.607170135,0,78300,2,0],[8140159.505516982,18149182.5744015,0,78360,1,0],[7873004.477000753,18211859.166667856,0,78420,1,0],[7604384.386384771,18271194.864228852,0,78480,1,0],[7334365.513599649,18327146.273149297,0,78540,1,0],[7062970.08105417,18379656.060170982,0,78600,0,0],[6790444.916318488,18428710.08653943,0,78660,2,0],[6516622.530530862,18474254.58321513,0,78720,1,0],[6241381.068743647,18516293.999712076,0,78780,2,0],[5964764.473665669,18554812.641354002,0,78840,2,0],[5686628.5881463485,18589791.07640467,0,78900,2,0],[5407016.58721392,18621150.322348546,0,78960,0,0],[5126354.838174055,18648865.62453534,0,79020,1,0],[4844847.7053723,18672872.37813049,0,79080,0,0],[4562561.435274773,18693129.05198506,0,79140,1,0],[4279513.138032878,18709595.705702107,0,79200,2,0],[3995431.50725934,18722281.673926886,0,79260,1,0],[3710354.5330826826,18731138.332887802,0,79320,0,0],[3424707.2867572233,18736137.31475171,0,79380,2,0],[3138317.6753093847,18737259.436641198,0,79440,0,0],[2851295.934593783,18734444.01242229,0,79500,0,0],[2564030.8125327504,18727681.009672403,0,79560,2,0],[2276195.8884630026,18716938.529262546,0,79620,1,0],[1987723.24369738,18702201.728629876,0,79680,2,0],[1698630.3817907406,18683393.306261204,0,79740,1,0],[1408988.13025965,18660522.46666868,0,79800,0,0],[1119214.385039794,18633590.16517232,0,79860,1,0],[829392.9948618982,18602559.1795453,0,79920,2,0],[539187.176077528,18567363.998748407,0,79980,2,0],[248500.23240496122,18527975.95876377,0,80040,1,0],[-42416.249053015425,18484383.119383283,0,80100,1,0],[-333309.1020825164,18436592.914169095,0,80160,0,0],[-623968.0113585347,18384619.786419064,0,80220,0,0],[-914112.4220612388,18328466.694555596,0,80280,1,0],[-1203862.6684687156,18268079.38792797,0,80340,0,0],[-1493175.1615092158,18203484.4847888,0,80400,2,0],[-1782125.5437619188,18134587.757291615,0,80460,1,0],[-2070826.7332148287,18061352.917933356,0,80520,1,0],[-2359048.1740925293,17983783.845795106,0,80580,0,0],[-2646512.412762778,17901957.406412706,0,80640,1,0],[-2933174.074123378,17815846.05855227,0,80700,0,0],[-3218928.316760181,17725441.312157597,0,80760,2,0],[-3503903.2259183223,17630688.869788997,0,80820,2,0],[-3788373.1528345193,17531463.73212306,0,80880,1,0],[-4072056.1205285806,17427823.698615264,0,80940,0,0],[-4354543.280331628,17319875.41927018,0,81000,1,0],[-4635776.08647801,17207633.23593739,0,81060,2,0],[-4915997.826564937,17090958.859297052,0,81120,1,0],[-5195120.159345441,16969850.826038253,0,81180,0,0],[-5472751.137460167,16844459.105296887,0,81240,2,0],[-5748970.948817552,16714730.63112717,0,81300,2,0],[-6024025.197354307,16580485.998696724,0,81360,0,0],[-6297498.633257453,16441921.195876336,0,81420,0,0],[-6568990.920576382,16299204.429234395,0,81480,0,0],[-6838439.467270873,16152328.809686841,0,81540,0,0],[-7105742.660080585,16001357.426155675,0,81600,2,0],[-7371165.6438214015,15846082.03228456,0,81660,2,0],[-7634902.094455919,15686376.521480482,0,81720,0,0],[-7896575.298088361,15522426.60848033,0,81780,1,0],[-8155957.379594048,15354363.58296093,0,81840,0,0],[-8412957.711462066,15182202.903843328,0,81900,2,0],[-8667658.701285362,15005865.889349135,0,81960,2,0],[-8920259.719282728,14825191.2122887,0,82020,1,0],[-9170527.292360002,14640301.760422014,0,82080,2,0],[-9418395.181578642,14451241.784796583,0,82140,1,0],[-9663768.598121129,14258017.021518838,0,82200,2,0],[-9906573.360374164,14060683.953254161,0,82260,0,0],[-10146572.275243443,13859386.875393089,0,82320,0,0],[-10383420.114766266,13654395.791851472,0,82380,2,0],[-10617334.665903363,13445520.89415866,0,82440,1,0],[-10848355.239015726,13232695.325131495,0,82500,1,0],[-11076259.93379668,13016075.460224595,0,82560,0,0],[-11300839.729148477,12795846.70570787,0,82620,1,0],[-11522048.560851077,12572044.405009344,0,82680,1,0],[-11739921.694569627,12344604.540316183,0,82740,1,0],[-11954385.989023669,12113584.65829539,0,82800,2,0],[-12165492.5875564,11878905.23765086,0,82860,2,0],[-12373290.914094657,11640484.539411124,0,82920,1,0],[-12577567.983560134,11398541.540068824,0,82980,1,0],[-12778169.194782985,11153236.779921439,0,83040,0,0],[-12974893.302022738,10904794.266072031,0,83100,1,0],[-13167693.696237652,10653272.701201797,0,83160,1,0],[-13356596.900710987,10398616.652650252,0,83220,1,0],[-13541550.101305895,10140882.37365431,0,83280,2,0],[-13722596.898213666,9879993.367909942,0,83340,0,0],[-13899558.64451956,9616170.355666857,0,83400,2,0],[-14072395.292417005,9349494.819071056,0,83460,2,0],[-14241243.16215787,9079716.16740866,0,83520,2,0],[-14406041.809517188,8806941.418473715,0,83580,0,0],[-14566542.32350588,8531550.29923045,0,83640,0,0],[-14722522.147075009,8253921.702528086,0,83700,1,0],[-14874005.326809805,7973988.743752269,0,83760,0,0],[-15020978.44912773,7691824.960881174,0,83820,2,0],[-15163463.239368727,7407358.357864945,0,83880,2,0],[-15301587.952970572,7120375.583173952,0,83940,0,0],[-15435127.49339149,6831267.173484749,0,84000,1,0],[-15564001.260354416,6540263.956257919,0,84060,1,0],[-15688239.692223249,6247328.772729417,0,84120,1,0],[-15807790.17943102,5952529.013096114,0,84180,1,0],[-15922636.425626801,5655949.140906858,0,84240,1,0],[-16032746.260067504,5357703.202050497,0,84300,2,0],[-16138156.983671173,5057682.423640823,0,84360,1,0],[-16238836.986976154,4755989.875198193,0,84420,0,0],[-16334647.796199232,4453073.84750713,0,84480,1,0],[-16425592.84177422,4149005.62419224,0,84540,0,0],[-16511624.072990743,3843880.819206857,0,84600,0,0],[-16592701.904502407,3537973.024491582,0,84660,2,0],[-16668906.788821828,3231034.9493082003,0,84720,1,0],[-16740267.729010623,2922955.9286106513,0,84780,1,0],[-16806727.47556588,2614034.2070328374,0,84840,1,0],[-16868289.982805487,2304343.4586197045,0,84900,1,0],[-16924944.874892626,1994000.896116572,0,84960,1,0],[-16976709.55490529,1683061.597905,0,85020,0,0],[-17023527.697999194,1371830.6079400866,0,85080,0,0],[-17065377.576112233,1060554.0109005342,0,85140,2,0],[-17102353.613265753,748958.3738304236,0,85200,2,0],[-17134457.92037861,436794.0180993759,0,85260,1,0],[-17161701.283793736,124334.20027102862,0,85320,0,0],[-17184072.79702651,-187976.46163133968,0,85380,1,0],[-17201559.402901374,-500063.8951821598,0,85440,2,0],[-17214220.34501129,-812195.7037302379,0,85500,2,0],[-17222057.425112396,-1124447.3090933408,0,85560,0,0],[-17225091.643006843,-1436383.8610485434,0,85620,0,0],[-17223337.410737783,-1747562.0134951042,0,85680,1,0],[-17216833.47999996,-2058085.72069421,0,85740,2,0],[-17205567.306520622,-2368230.3049579137,0,85800,2,0],[-17189581.607307456,-2678068.4486273364,0,85860,2,0],[-17168883.079965882,-2987554.2821745393,0,85920,1,0],[-17143530.41813541,-3296396.3009843566,0,85980,0,0],[-17113562.02261262,-3604169.302433611,0,86040,1,0],[-17079014.144372225,-3910792.134687032,0,86100,0,0],[-17039942.12736997,-4216197.328659742,0,86160,2,0],[-16996351.288858537,-4520477.9780439185,0,86220,0,0],[-16948279.372251187,-4823582.939616123,0,86280,1,0],[-16895791.326693,-5125234.425209434,0,86340,1,0],[-16838882.198147956,-5425551.354358609,0,86400,1,0],[-16777619.744138688,-5724464.501096893,0,86460,0,0],[-16712080.642541183,-6021730.045968138,0,86520,0,0],[-16642338.121948663,-6317094.764429607,0,86580,0,0],[-16568447.559462389,-6610495.876451692,0,86640,2,0],[-16490371.021405814,-6902236.428586843,0,86700,2,0],[-16408044.865323428,-7192603.962446083,0,86760,1,0],[-16321580.664762698,-7481322.741973705,0,86820,0,0],[-16231132.541562881,-7768043.1230916595,0,86880,1,0],[-16136729.749622094,-8052657.4079599595,0,86940,1,0],[-16038379.784851622,-8335318.606558878,0,87000,2,0],[-15936077.408006772,-8616114.933838405,0,87060,0,0],[-15829926.438432047,-8894818.830347065,0,87120,2,0],[-15719983.622069774,-9171406.552273398,0,87180,2,0],[-15606152.517052246,-9446154.122565025,0,87240,1,0],[-15488586.574629985,-9718823.042015852,0,87300,0,0],[-15367437.152486125,-9989041.773442436,0,87360,0,0],[-15242856.993881816,-10256611.636509981,0,87420,1,0],[-15114844.04975334,-10521644.866957458,0,87480,2,0],[-14983261.005311554,-10784413.378581986,0,87540,1,0],[-14848184.467556395,-11044893.94007987,0,87600,2,0],[-14709663.84725046,-11303027.987837091,0,87660,1,0],[-14567746.643235771,-11558785.682379577,0,87720,0,0],[-14422669.6479548,-11811785.990970328,0,87780,1,0],[-14274489.298440719,-12062051.768415555,0,87840,1,0],[-14123168.978758369,-12309644.69962753,0,87900,0,0],[-13968873.56589161,-12554390.416858349,0,87960,1,0],[-13811634.731384808,-12796276.036776146,0,88020,1,0],[-13651430.248696556,-13035405.073359003,0,88080,1,0],[-13488319.657054577,-13271761.386198014,0,88140,0,0],[-13322448.353750825,-13505157.72882921,0,88200,2,0],[-13153774.089271042,-13735709.327306759,0,88260,1,0],[-12982244.119402068,-13963544.88253201,0,88320,1,0],[-12808053.649297277,-14188496.1141623,0,88380,1,0],[-12631216.324302906,-14410509.970533168,0,88440,0,0],[-12451899.477177862,-14629460.82151897,0,88500,1,0],[-12270202.149848912,-14845324.898890018,0,88560,0,0],[-12086150.19805834,-15058055.218575014,0,88620,1,0],[-11899803.619903075,-15267637.302249335,0,88680,2,0],[-11710986.00945489,-15474351.50939886,0,88740,1,0],[-11519725.184456103,-15678158.95383695,0,88800,1,0],[-11326238.204887854,-15878905.279130789,0,88860,2,0],[-11130426.864978425,-16076700.115627237,0,88920,2,0],[-10932233.695491195,-16271687.426956613,0,88980,0,0],[-10731959.74380007,-16463559.86892115,0,89040,2,0],[-10529665.310227413,-16652325.646149138,0,89100,0,0],[-10325377.059917843,-16837959.14295844,0,89160,2,0],[-10119170.225573763,-17020459.39832339,0,89220,2,0],[-9910810.821245344,-17200054.026973598,0,89280,1,0],[-9700504.538163085,-17376608.126907878,0,89340,1,0],[-9488441.314168032,-17550012.09067917,0,89400,0,0],[-9274808.331965659,-17720097.861088112,0,89460,0,0],[-9059772.04396853,-17886811.209581252,0,89520,2,0],[-8843147.555265617,-18050343.1594085,0,89580,1,0],[-8624801.136706248,-18210766.35441534,0,89640,0,0],[-8405105.831316216,-18367915.375783682,0,89700,0,0],[-8184215.469395179,-18521661.914939873,0,89760,2,0],[-7961925.023601936,-18672179.87091391,0,89820,2,0],[-7737952.156170112,-18819711.1295947,0,89880,2,0],[-7512370.444182623,-18964242.478286836,0,89940,0,0],[-7285526.346632512,-19105570.812305935,0,90000,1,0],[-7057609.952967547,-19243570.4453602,0,90060,1,0],[-6828515.728455796,-19378388.568162117,0,90120,0,0],[-6598449.763243597,-19509884.70561828,0,90180,2,0],[-6367297.097750719,-19638189.598942567,0,90240,0,0],[-6135117.166664462,-19763305.941562723,0,90300,1,0],[-5902081.644988007,-19885116.28225034,0,90360,1,0],[-5668108.525152843,-20003745.339214332,0,90420,2,0],[-5433060.576739592,-20119261.874349467,0,90480,2,0],[-5196834.466766542,-20231740.43046982,0,90540,1,0],[-4959626.529520421,-20341091.19559557,0,90600,2,0],[-4721480.409772913,-20447357.75010402,0,90660,1,0],[-4482441.291094824,-20550520.28602108,0,90720,2,0],[-4242539.116513929,-20650579.94128246,0,90780,0,0],[-4001979.974698991,-20747484.850119904,0,90840,0,0],[-3761158.9948922466,-20841081.307379436,0,90900,0,0],[-3520115.9800184416,-20931419.852942687,0,90960,0,0],[-3278861.3000914184,-21018476.590253655,0,91020,2,0],[-3037129.2294471473,-21102428.481320992,0,91080,0,0],[-2794945.965852768,-21183237.018439658,0,91140,1,0],[-2552506.3866254874,-21260862.0257401,0,91200,0,0],[-2309888.2355368957,-21335352.007784918,0,91260,2,0],[-2066927.6396586979,-21406728.116393752,0,91320,1,0],[-1823487.4335967787,-21475074.16959813,0,91380,1,0],[-1579783.2936883909,-21540317.369664613,0,91440,2,0],[-1335691.944833166,-21602560.321698204,0,91500,2,0],[-1091046.4924313442,-21661825.220959634,0,91560,1,0],[-846101.4699350888,-21718087.747585807,0,91620,2,0],[-600839.4554499079,-21771376.827823322,0,91680,1,0],[-355323.5888805037,-21821635.3055251,0,91740,2,0],[-109578.54333439285,-21868949.820451945,0,91800,0,0],[136178.0590836555,-21913249.621363778,0,91860,0,0],[381549.18563782057,-21954507.294304106,0,91920,1,0],[626707.0333769353,-21992757.53986767,0,91980,1,0],[871779.9856798938,-22028046.02649905,0,92040,2,0],[1116907.1650011824,-22060404.704445127,0,92100,0,0],[1361887.3114694082,-22089830.1622415,0,92160,1,0],[1606522.094446186,-22116310.01809137,0,92220,1,0],[1850922.6704959327,-22139874.786112566,0,92280,1,0],[2095092.0561921988,-22160546.497415986,0,92340,1,0],[2338988.624639614,-22178334.22184325,0,92400,0,0],[2582410.4218874644,-22193233.909199435,0,92460,1,0],[2825321.921568449,-22205299.833877333,0,92520,0,0],[3067669.471351132,-22214480.65039381,0,92580,0,0],[3309279.088787053,-22220822.210650582,0,92640,2,0],[3550478.3462726227,-22224387.88448147,0,92700,0,0],[3791218.879322805,-22225118.495095994,0,92760,2,0],[4031489.656634459,-22223087.00738332,0,92820,2,0],[4271615.316491433,-22218264.014509153,0,92880,2,0],[4511586.584819813,-22210687.55788651,0,92940,2,0],[4751350.099648781,-22200383.43915379,0,93000,1,0],[4990724.39043179,-22187327.375609703,0,93060,1,0],[5229465.45285506,-22171557.970462848,0,93120,2,0],[5467777.26620266,-22153098.28867667,0,93180,1,0],[5705591.107413622,-22131934.54924805,0,93240,1,0],[5942717.001709669,-22108116.322828297,0,93300,0,0],[6178953.22414075,-22081673.27375467,0,93360,1,0],[6414265.698179542,-22052616.584800497,0,93420,1,0],[6648837.78274839,-22020977.203711435,0,93480,0,0],[6882453.397890672,-21986741.86064029,0,93540,1,0],[7115061.512544323,-21949946.89026087,0,93600,1,0],[7346838.614499578,-21910596.15381945,0,93660,1,0],[7577777.827098435,-21868712.83433611,0,93720,0,0],[7807651.528743512,-21824320.59219624,0,93780,2,0],[8036632.11462763,-21777392.94479764,0,93840,0,0],[8264703.996085367,-21727994.38551307,0,93900,1,0],[8491633.213000013,-21676143.429756794,0,93960,2,0],[8717792.754949365,-21621796.79663015,0,94020,1,0],[8943108.998215444,-21564939.114331212,0,94080,0,0],[9167271.249132058,-21505695.31478526,0,94140,1,0],[9390223.258545144,-21444100.967363782,0,94200,2,0],[9612287.243606346,-21380040.737992696,0,94260,2,0],[9833630.55836992,-21313509.38547916,0,94320,0,0],[10053902.558008049,-21244607.671014983,0,94380,0,0],[10272683.705542501,-21173478.80353662,0,94440,2,0],[10490369.655922672,-21099989.906185336,0,94500,0,0],[10706879.49239527,-21024218.194380242,0,94560,1,0],[10922055.357324183,-20946197.17939874,0,94620,1,0],[11136043.104190588,-20865907.074165437,0,94680,2,0],[11349000.841092518,-20783276.758726038,0,94740,2,0],[11561057.479134975,-20698266.752849124,0,94800,1,0],[11772044.8877188,-20610971.33374626,0,94860,0,0],[11981613.90517347,-20521524.477087904,0,94920,1,0],[12189717.266623406,-20429955.345008966,0,94980,2,0],[12396681.213735934,-20336133.2147123,0,95040,2,0],[12602679.124786971,-20239999.738891125,0,95100,0,0],[12807312.622997463,-20141732.420431294,0,95160,0,0],[13010278.89373981,-20041501.0055355,0,95220,0,0],[13211572.73579034,-19939314.567868438,0,95280,0,0],[13411136.883679623,-19835197.04987125,0,95340,0,0],[13608980.214327559,-19729180.218722194,0,95400,1,0],[13805283.38587346,-19621203.813116,0,95460,2,0],[14000287.295931732,-19511083.385798953,0,95520,0,0],[14193831.130778339,-19398938.391381316,0,95580,2,0],[14385903.58142209,-19284811.996941507,0,95640,2,0],[14576829.05999663,-19168502.281687364,0,95700,1,0],[14766398.601813875,-19050101.11696899,0,95760,1,0],[14954463.379339427,-18929789.28472443,0,95820,1,0],[15140990.49054712,-18807527.455833443,0,95880,1,0],[15325962.115488265,-18683350.01782532,0,95940,2,0],[15509532.296639832,-18557148.157133393,0,96000,1,0],[15691691.310776684,-18428997.703546472,0,96060,0,0],[15872095.853165478,-18299064.93211307,0,96120,2,0],[16050921.796598895,-18167301.060128964,0,96180,1,0],[16228237.58422055,-18033579.64797126,0,96240,2,0],[16404112.85265499,-17897944.96088971,0,96300,1,0],[16578437.35376387,-17760395.810542848,0,96360,0,0],[16750989.523382634,-17621200.307159662,0,96420,2,0],[16921868.868743077,-17480224.319739904,0,96480,1,0],[17091196.52634124,-17337429.967368055,0,96540,2,0],[17258961.856853627,-17192738.97540333,0,96600,0,0],[17425017.30061984,-17046397.63819595,0,96660,0,0],[17589064.823346622,-16898559.596812814,0,96720,0,0],[17751120.863119707,-16749319.987248547,0,96780,1,0],[17911284.219168577,-16598546.69683661,0,96840,0,0],[18069540.20127927,-16446269.600627868,0,96900,2,0],[18226060.75274935,-16292350.339133978,0,96960,0,0],[18380744.779955424,-16136841.327772936,0,97020,1,0],[18533532.504027076,-15979894.192957062,0,97080,1,0],[18684472.67259053,-15821357.963302922,0,97140,0,0],[18833488.59174642,-15661436.028773965,0,97200,1,0],[18980553.58684599,-15500081.378932891,0,97260,2,0],[19125847.871756032,-15337098.051852653,0,97320,1,0],[19269444.37068804,-15172491.738732012,0,97380,1,0],[19411136.526457004,-15006410.0422863,0,97440,0,0],[19550843.522241898,-14838989.016722102,0,97500,2,0],[19688644.4342369,-14670140.241228955,0,97560,2,0],[19824755.931028858,-14499599.33751695,0,97620,1,0],[19959047.58880917,-14327490.88091701,0,97680,0,0],[20091346.328059647,-14154151.231924755,0,97740,2,0],[20221673.683257617,-13979448.835400945,0,97800,0,0],[20350039.27509623,-13803392.96885586,0,97860,2,0],[20476436.320244525,-13625992.162608676,0,97920,0,0],[20600905.313626565,-13447299.538674934,0,97980,2,0],[20723351.798165157,-13267292.74150581,0,98040,2,0],[20843993.132674526,-13085705.995060733,0,98100,1,0],[20962734.621727988,-12902716.141400896,0,98160,1,0],[21079479.652569536,-12718502.467554735,0,98220,2,0],[21194273.662616536,-12532891.958512872,0,98280,0,0],[21307038.623866875,-12346074.199249735,0,98340,0,0],[21417553.77399314,-12158409.877534878,0,98400,0,0],[21525843.9246642,-11969861.281796996,0,98460,2,0],[21632070.159458026,-11780155.229971988,0,98520,0,0],[21736217.17076697,-11589345.393760888,0,98580,2,0],[21838273.427445993,-11397403.153772024,0,98640,2,0],[21938410.848485,-11204059.845120579,0,98700,0,0],[22036445.881198347,-11009640.10740577,0,98760,0,0],[22132194.449044865,-10814472.533306457,0,98820,2,0],[22225818.140903734,-10618284.011178048,0,98880,1,0],[22317384.8249269,-10420890.758790145,0,98940,1,0],[22406828.944642436,-10222512.716382928,0,99000,1,0],[22494078.39461835,-10023149.27073966,0,99060,0,0],[22579121.086095277,-9822986.931782749,0,99120,2,0],[22661979.840171352,-9621881.031245867,0,99180,2,0],[22742821.190550447,-9419530.699980086,0,99240,0,0],[22821451.211083617,-9216259.18016001,0,99300,1,0],[22897821.519357022,-9012265.838570558,0,99360,1,0],[22971999.11085963,-8807421.094899649,0,99420,1,0],[23043948.87441972,-8601717.364567772,0,99480,2,0],[23113757.91491763,-8395007.107041107,0,99540,0,0],[23181312.657801293,-8187490.095103693,0,99600,2,0],[23246651.981169265,-7979183.000366179,0,99660,2,0],[23309849.368100896,-7769754.275088329,0,99720,1,0],[23370810.930331968,-7559408.888960563,0,99780,0,0],[23429471.253067013,-7348519.595093685,0,99840,1,0],[23485845.428860255,-7137068.278877983,0,99900,1,0],[23539896.966031678,-6924945.172648376,0,99960,2,0],[23591720.64440589,-6711955.247034531,0,100020,1,0],[23641315.317033242,-6498152.748134703,0,100080,0,0],[23688534.72873402,-6283883.2291310895,0,100140,2,0],[23733461.21312537,-6068996.562540934,0,100200,1,0],[23776126.350767378,-5853354.369664939,0,100260,0,0],[23816410.399845783,-5637309.233157981,0,100320,0,0],[23854294.15196769,-5421064.146410703,0,100380,0,0],[23889795.18415441,-5204651.003833304,0,100440,2,0],[23922931.829560377,-4987728.74979808,0,100500,1,0],[23953772.98564316,-4770141.763642724,0,100560,2,0],[23982240.53466958,-4551881.325510285,0,100620,2,0],[24008409.16585616,-4332818.680457442,0,100680,0,0],[24032197.780380644,-4113341.778644077,0,100740,0,0],[24053575.386746567,-3893822.3421014287,0,100800,1,0],[24072569.528555013,-3674095.8355065393,0,100860,2,0],[24089146.563838746,-3453817.852727955,0,100920,2,0],[24103390.37966429,-3232835.849623026,0,100980,0,0],[24115208.682083264,-3011511.241857835,0,101040,0,0],[24124594.959434025,-2790266.1937402217,0,101100,2,0],[24131557.37435447,-2568740.0960823423,0,101160,1,0],[24136133.59039091,-2346772.547055284,0,101220,0,0],[24138243.54613711,-2124776.1114192293,0,101280,1,0],[24137923.908474017,-1902711.7888360524,0,101340,0,0],[24135174.490592223,-1680634.1017503801,0,101400,1,0],[24130003.627009176,-1458597.3994166672,0,101460,1,0],[24122351.142418135,-1236386.567579046,0,101520,0,0],[24112253.902059123,-1014228.4979383412,0,101580,1,0],[24099700.54131854,-792153.0510585496,0,101640,1,0],[24084710.823547214,-569998.8330651057,0,101700,1,0],[24067218.321603253,-347795.5123635159,0,101760,1,0],[24047248.891030032,-125527.78550917364,0,101820,2,0],[24024811.531886987,96916.62341104436,0,101880,1,0],[23999840.719385773,319528.76980286354,0,101940,1,0],[23972379.876299515,542107.8789825614,0,102000,2,0],[23942399.7355635,764788.6448643818,0,102060,2,0],[23909901.63172933,987777.3532111191,0,102120,0,0],[23874879.050252948,1210656.7324817472,0,102180,2,0],[23837336.441753946,1433394.2808875463,0,102240,0,0],[23797289.456584483,1656005.838838071,0,102300,1,0],[23754756.404299602,1878244.7804888547,0,102360,2,0],[23709687.817322332,2100457.1884846706,0,102420,1,0],[23662039.14756818,2322629.164654302,0,102480,0,0],[23611902.91337434,2544376.3885647077,0,102540,1,0],[23559303.579400666,2765693.778150799,0,102600,2,0],[23504114.066616144,2986867.926044002,0,102660,1,0],[23446331.501013312,3207910.152542766,0,102720,1,0],[23386017.328856464,3428578.4396573855,0,102780,1,0],[23323161.034848336,3648885.3375116554,0,102840,1,0],[23257758.44050305,3868795.5798253086,0,102900,2,0],[23189779.56962935,4088483.5638905806,0,102960,1,0],[23119179.787639763,4307858.0297415,0,103020,1,0],[23046022.88901199,4526774.362127774,0,103080,0,0],[22970380.51018498,4744995.83818757,0,103140,1,0],[22892236.610595085,4962533.806931822,0,103200,2,0],[22811492.131847907,5179689.757545066,0,103260,0,0],[22728181.87002763,5396267.43067639,0,103320,1,0],[22642367.73025828,5612076.447468985,0,103380,2,0],[22553938.368769392,5827413.294940446,0,103440,0,0],[22462956.75215367,6042065.038635487,0,103500,0,0],[22369537.81939769,6255710.141043653,0,103560,1,0],[22273627.284043316,6468494.097018065,0,103620,1,0],[22175167.952376083,6680506.374108914,0,103680,1,0],[22074134.66672945,6891774.185553388,0,103740,2,0],[21970490.99146069,7102391.343521762,0,103800,0,0],[21864253.933347255,7312178.247904482,0,103860,0,0],[21755649.227775574,7520782.586513935,0,103920,2,0],[21644473.526330564,7728511.064239796,0,103980,2,0],[21530544.440972928,7935646.308192083,0,104040,1,0],[21413985.724417664,8141994.703775185,0,104100,2,0],[21294807.225254767,8347519.519563783,0,104160,1,0],[21172961.294913065,8552203.844058378,0,104220,0,0],[21048644.931431778,8755695.000206506,0,104280,1,0],[20921882.91730464,8957984.34843381,0,104340,2,0],[20792488.179985434,9159346.930368777,0,104400,1,0],[20660454.346087195,9359710.690695059,0,104460,1,0],[20525866.128495924,9558943.655921053,0,104520,0,0],[20388842.255878348,9756834.155322272,0,104580,0,0],[20249495.961139213,9953217.909067491,0,104640,0,0],[20107844.053127807,10148062.568322616,0,104700,2,0],[19963641.318074506,10341654.66085467,0,104760,1,0],[19816825.620188225,10534068.41625037,0,104820,1,0],[19667489.138431463,10725150.8722954,0,104880,1,0],[19515643.853213746,10914862.323937424,0,104940,2,0],[19361180.790282164,11103296.673269816,0,105000,0,0],[19204224.076412197,11290320.77242111,0,105060,1,0],[19044881.915506743,11475743.982248904,0,105120,1,0],[18883060.874978933,11659641.063539878,0,105180,1,0],[18718750.642870072,11842037.51758074,0,105240,0,0],[18552107.714907594,12022715.12583044,0,105300,1,0],[18383087.952077117,12201678.279563842,0,105360,2,0],[18211524.395392463,12379132.65952636,0,105420,1,0],[18037384.866658006,12555054.637284344,0,105480,0,0],[17860917.655597724,12729161.355239162,0,105540,2,0],[17682038.78762143,12901526.13651488,0,105600,1,0],[17500602.820477717,13072258.392035685,0,105660,1,0],[17316755.74571796,13241192.553243123,0,105720,2,0],[17130352.182341967,13408403.088380216,0,105780,1,0],[16941450.6290309,13573874.29562983,0,105840,1,0],[16750186.192522833,13737432.577467998,0,105900,1,0],[16556534.198853245,13899051.989247806,0,105960,1,0],[16360555.688110434,14058697.386516873,0,106020,1,0],[16162212.711831162,14216329.13690708,0,106080,1,0],[15961546.891839266,14371918.863238312,0,106140,2,0],[15758423.769853314,14525545.594658796,0,106200,0,0],[15553034.244838664,14677049.790867466,0,106260,1,0],[15345481.444396477,14826289.83990078,0,106320,1,0],[15135673.578992538,14973349.562995171,0,106380,1,0],[14923598.590372164,15118176.964380445,0,106440,2,0],[14709149.429608155,15260833.51051974,0,106500,0,0],[14492488.11598114,15401202.610422745,0,106560,1,0],[14273772.411477052,15539130.475852355,0,106620,0,0],[14053041.214945843,15674590.7085559,0,106680,2,0],[13830139.174045043,15807649.45404099,0,106740,2,0],[13604791.98102567,15938426.03381589,0,106800,0,0],[13377320.808143375,16066728.526539836,0,106860,1,0],[13147898.534414498,16192422.083245136,0,106920,2,0],[12916240.342608627,16315639.575420178,0,106980,0,0],[12682535.057179498,16436265.443643065,0,107040,1,0],[12446946.21269404,16554151.095546287,0,107100,1,0],[12209357.559356896,16669371.971459521,0,107160,0,0],[11969935.781008374,16781818.135583412,0,107220,1,0],[11728716.034147162,16891417.451348133,0,107280,2,0],[11485399.564254634,16998330.754206907,0,107340,1,0],[11240018.458439613,17102470.058917526,0,107400,1,0],[10992756.417626344,17203747.582092244,0,107460,0,0],[10743801.752429636,17302058.11221061,0,107520,2,0],[10493000.431652168,17397436.443552736,0,107580,2,0],[10240085.022715433,17489957.864726957,0,107640,0,0],[9985414.033534205,17579476.938059557,0,107700,0,0],[9729341.988541815,17665810.998724163,0,107760,2,0],[9471565.57342421,17749055.761192266,0,107820,1,0],[9211940.32073533,17829235.317825194,0,107880,0,0],[8950869.979890974,17906182.277253382,0,107940,1,0],[8688366.763568444,17979887.871690255,0,108000,2,0],[8424117.951101324,18050404.309342537,0,108060,2,0],[8157996.73442752,18117724.35783786,0,108120,0,0],[7890366.464908761,18181743.52486272,0,108180,2,0],[7621309.102655384,18242404.73082219,0,108240,2,0],[7350463.756941566,18299751.506675374,0,108300,0,0],[7078251.8751723785,18353670.4486656,0,108360,1,0],[6804884.325974363,18404107.71556067,0,108420,1,0],[6530229.699888436,18451050.368264496,0,108480,2,0],[6254117.668929579,18494485.97327028,0,108540,0,0],[5976837.6921512885,18534340.65124118,0,108600,1,0],[5698549.200226397,18570592.40471562,0,108660,1,0],[5419153.179866646,18603190.85155374,0,108720,1,0],[5138692.682830677,18632136.869663917,0,108780,1,0],[4857213.69685839,18657362.375248097,0,108840,0,0],[4574935.581190208,18678855.616069287,0,108900,0,0],[4292096.578300616,18696552.239192344,0,108960,0,0],[4008748.539300331,18710417.521048155,0,109020,1,0],[3724753.146784756,18720440.43593264,0,109080,1,0],[3440000.255199111,18726618.615959104,0,109140,2,0],[3154323.6371114394,18728889.72420531,0,109200,0,0],[2868002.242095642,18727237.796351466,0,109260,1,0],[2581267.3016378265,18721637.171290882,0,109320,0,0],[2294159.723858141,18712077.16676555,0,109380,1,0],[2006734.1702465091,18698502.385842714,0,109440,2,0],[1718690.4153522088,18680878.661153838,0,109500,2,0],[1429923.7311689367,18659186.665689614,0,109560,1,0],[1140653.755854817,18633385.50374183,0,109620,1,0],[851149.5488747036,18603475.666367617,0,109680,2,0],[561251.8787487377,18569412.0021415,0,109740,0,0],[271248.38752030703,18531187.743877567,0,109800,1,0],[-18631.556346142268,18488818.88364921,0,109860,1,0],[-308525.7742761308,18442251.012462758,0,109920,0,0],[-598148.548916099,18391501.9593158,0,109980,1,0],[-887478.5033254784,18336543.871159773,0,110040,1,0],[-1176592.1431981197,18277335.264703445,0,110100,2,0],[-1465622.490922655,18213808.973586064,0,110160,1,0],[-1754467.2851419465,18145972.543545928,0,110220,2,0],[-2043071.526433306,18073796.998281766,0,110280,0,0],[-2331189.475325473,17997304.370251417,0,110340,2,0],[-2618751.533721713,17916482.35437575,0,110400,2,0],[-2906029.911138317,17831250.00802304,0,110460,0,0],[-3192595.983116456,17741660.277449686,0,110520,1,0],[-3478216.982039044,17647789.90154308,0,110580,1,0],[-3762960.704756662,17549576.91145712,0,110640,2,0],[-4046963.945266365,17446927.86041342,0,110700,2,0],[-4330289.439243328,17339803.24621011,0,110760,1,0],[-4612681.630797514,17228252.125792332,0,110820,0,0],[-4893743.696320195,17112420.385833547,0,110880,0,0],[-5173223.827132464,16992375.349889424,0,110940,2,0],[-5451387.110929709,16867970.531665538,0,111000,1,0],[-5728315.49894746,16739156.328894915,0,111060,0,0],[-6003582.571042613,16606076.352500949,0,111120,1,0],[-6277121.230557413,16468746.336541275,0,111180,1,0],[-6549036.563426008,16327104.921257418,0,111240,0,0],[-6819042.171870463,16181233.545393365,0,111300,2,0],[-7087258.599998569,16031078.540322725,0,111360,0,0],[-7353583.964488593,15876650.314660542,0,111420,2,0],[-7617938.010332055,15717980.447695917,0,111480,2,0],[-7880534.681202418,15554885.011480726,0,111540,0,0],[-8141015.2627949,15387574.135757687,0,111600,1,0],[-8399114.603300152,15216178.170991825,0,111660,1,0],[-8654933.651760416,15040628.991810665,0,111720,1,0],[-8908365.53029156,14860941.762432214,0,111780,2,0],[-9159496.570299013,14677053.037380192,0,111840,1,0],[-9408232.524377847,14488996.389992993,0,111900,0,0],[-9654206.385337701,14297005.999616658,0,111960,1,0],[-9897330.805029033,14101136.716179613,0,112020,0,0],[-10137543.49296023,13901433.871970844,0,112080,1,0],[-10374765.923995145,13697918.427015174,0,112140,0,0],[-10608924.44870944,13490643.345222933,0,112200,0,0],[-10839794.570501592,13279794.010946915,0,112260,2,0],[-11067571.177936304,13065152.644579766,0,112320,1,0],[-11292318.757133458,12846656.728422154,0,112380,1,0],[-11513845.104740037,12624472.948723592,0,112440,1,0],[-11732042.10951785,12398662.557841396,0,112500,0,0],[-11946723.214195548,12169404.652518077,0,112560,2,0],[-12157966.176087905,11936615.113115285,0,112620,2,0],[-12365911.413359407,11700090.354380045,0,112680,2,0],[-12570501.075651474,11459900.6299497,0,112740,0,0],[-12771424.500941342,11216390.135314198,0,112800,1,0],[-12968505.304614726,10969719.205794966,0,112860,1,0],[-13161773.334526205,10719839.44026313,0,112920,2,0],[-13351298.299551802,10466669.871049128,0,112980,1,0],[-13537016.148163123,10210274.990970673,0,113040,0,0],[-13718633.64447771,9951042.292051367,0,113100,0,0],[-13896014.589725986,9689156.427648567,0,113160,0,0],[-14069082.059952585,9424714.337605057,0,113220,2,0],[-14237991.56456375,9157488.281525314,0,113280,1,0],[-14402793.865563994,8887397.00718612,0,113340,1,0],[-14563329.484055523,8614671.798878418,0,113400,0,0],[-14719460.948383735,8339564.345246784,0,113460,0,0],[-14871048.889530418,8062287.413271979,0,113520,0,0],[-15018059.290366633,7782953.5768114235,0,113580,2,0],[-15160634.965142054,7501289.662774725,0,113640,0,0],[-15298705.529756643,7217411.70856701,0,113700,2,0],[-15432228.518595867,6931400.421818156,0,113760,2,0],[-15561346.110451851,6643005.2808635095,0,113820,2,0],[-15685985.076207269,6352299.525515742,0,113880,2,0],[-15806123.931105938,6059378.24507395,0,113940,1,0],[-15921662.009217255,5764517.440412917,0,114000,0,0],[-16032421.900457826,5468110.269097879,0,114060,2,0],[-16138437.110478316,5170096.350100291,0,114120,1,0],[-16239778.533349108,4870389.72754035,0,114180,0,0],[-16336266.585729303,4569413.477546375,0,114240,1,0],[-16427900.53700808,4267267.879008171,0,114300,2,0],[-16514768.023890771,3963695.848530321,0,114360,2,0],[-16596885.700222615,3658612.1257056203,0,114420,0,0],[-16674166.025230825,3352456.2763599292,0,114480,2,0],[-16746564.60344509,3045334.778343503,0,114540,2,0],[-16814193.030706383,2736961.1517413873,0,114600,0,0],[-16876918.475637052,2427809.427003589,0,114660,1,0],[-16934733.508325264,2118125.081046769,0,114720,2,0],[-16987689.850158047,1807651.723432442,0,114780,1,0],[-17035803.93578298,1496466.774740162,0,114840,0,0],[-17078988.238277014,1185056.3997225892,0,114900,1,0],[-17117263.927960917,873476.7873892542,0,114960,1,0],[-17150662.288139656,561640.2125537093,0,115020,2,0],[-17179209.548918433,249469.23825776597,0,115080,0,0],[-17202897.44620988,-62767.9853776756,0,115140,2,0],[-17221742.305134203,-375003.8355289816,0,115200,0,0],[-17235745.964154556,-687116.1875309242,0,115260,0,0],[-17244910.156513814,-998675.261258224,0,115320,1,0],[-17249287.5270711,-1309792.3561549417,0,115380,2,0],[-17248874.531145073,-1620714.5295704852,0,115440,1,0],[-17243694.61057929,-1931373.5542179958,0,115500,0,0],[-17233797.476002183,-2241316.9798233206,0,115560,2,0],[-17219178.955423154,-2550659.4500368033,0,115620,2,0],[-17199851.548229065,-2859658.1575989476,0,115680,0,0],[-17175876.643673927,-3167891.355059132,0,115740,2,0],[-17147265.281317875,-3475257.9688029434,0,115800,1,0],[-17114056.440706752,-3781876.7838150044,0,115860,0,0],[-17076302.308388848,-4087310.244289503,0,115920,0,0],[-17034057.193210274,-4391312.616380569,0,115980,2,0],[-16987333.5854926,-4694151.993465601,0,116040,0,0],[-16936156.24064019,-4995747.105925735,0,116100,2,0],[-16880569.28071789,-5296064.982494478,0,116160,1,0],[-16820570.275879133,-5595180.133955563,0,116220,0,0],[-16756263.132023651,-5892653.621841095,0,116280,0,0],[-16687758.361142192,-6188281.979733741,0,116340,2,0],[-16614996.874376269,-6482346.530574711,0,116400,0,0],[-16538036.827900317,-6774772.149130054,0,116460,2,0],[-16456930.70397396,-7065478.025210882,0,116520,1,0],[-16371648.545964288,-7354599.486808436,0,116580,0,0],[-16282354.509134222,-7641730.201717078,0,116640,1,0],[-16189120.01757598,-7926806.114271453,0,116700,1,0],[-16091897.274576755,-8209931.163392483,0,116760,2,0],[-15990698.312885512,-8491219.325513462,0,116820,1,0],[-15885587.183616454,-8770649.91644432,0,116880,2,0],[-15776585.08190381,-9048132.544516753,0,116940,0,0],[-15663822.212024976,-9323450.204612387,0,117000,1,0],[-15547425.492029892,-9596385.675777784,0,117060,0,0],[-15427434.731256057,-9866912.844654972,0,117120,1,0],[-15303910.64864536,-10134946.095781257,0,117180,1,0],[-15176836.490050836,-10400657.860674163,0,117240,2,0],[-15046188.481806358,-10664128.17777515,0,117300,2,0],[-14911937.703382153,-10925466.276013555,0,117360,0,0],[-14774299.764392475,-11184343.178316768,0,117420,2,0],[-14633324.839348232,-11440690.6486024,0,117480,2,0],[-14488889.88263564,-11694784.64827019,0,117540,0,0],[-14341264.645994501,-11946275.944396157,0,117600,0,0],[-14190641.376257533,-12194838.54333335,0,117660,1,0],[-14037004.911881493,-12440558.145009514,0,117720,2,0],[-13880211.086910058,-12683719.190998193,0,117780,0,0],[-13720427.940258536,-12924169.866467794,0,117840,2,0],[-13557703.65755254,-13161835.120475795,0,117900,2,0],[-13391890.171982337,-13396993.555019142,0,117960,0,0],[-13223257.5012471,-13629338.163189603,0,118020,1,0],[-13051952.765184648,-13858664.919535527,0,118080,1,0],[-12877921.744586308,-14085122.893796561,0,118140,1,0],[-12701248.275799522,-14308652.838248694,0,118200,2,0],[-12521860.112586994,-14529428.109011522,0,118260,0,0],[-12339921.588313332,-14747220.2283939,0,118320,2,0],[-12155489.54470651,-14962034.375916908,0,118380,0,0],[-11968637.777044049,-15173863.175105685,0,118440,0,0],[-11779627.727135295,-15382407.454076828,0,118500,2,0],[-11588297.150760379,-15587918.51539645,0,118560,1,0],[-11394583.29109224,-15790497.782139525,0,118620,1,0],[-11198644.824260803,-15990002.798005939,0,118680,2,0],[-11000434.330108302,-16186575.524637382,0,118740,1,0],[-10799964.982469575,-16380160.295203283,0,118800,2,0],[-10597332.33864618,-16570753.86793453,0,118860,0,0],[-10392703.963965202,-16758233.937154338,0,118920,1,0],[-10186243.997119803,-16942445.453826282,0,118980,0,0],[-9978034.486604333,-17123405.739778843,0,119040,1,0],[-9768130.460854728,-17301076.597514994,0,119100,0,0],[-9556578.906677866,-17475473.448763575,0,119160,1,0],[-9343423.153007736,-17646579.617937054,0,119220,2,0],[-9128451.944503749,-17814629.75800379,0,119280,1,0],[-8911692.281250494,-17979580.110811394,0,119340,0,0],[-8693513.983724887,-18141249.272992592,0,119400,2,0],[-8473783.020659497,-18299719.70630379,0,119460,1,0],[-8252419.146592765,-18455085.153188914,0,119520,1,0],[-8029635.544475491,-18607258.69753882,0,119580,0,0],[-7805613.2397051845,-18756099.568386268,0,119640,2,0],[-7580249.126835488,-18901750.356693674,0,119700,2,0],[-7353302.0045185825,-19044380.232612293,0,119760,1,0],[-7124955.273761934,-19183879.90163668,0,119820,0,0],[-6895581.251898686,-19320089.428608093,0,119880,0,0],[-6665355.772237468,-19452900.41062397,0,119940,1,0],[-6434201.033839434,-19582417.690514546,0,120000,2,0],[-6201835.911816741,-19708805.98469666,0,120060,1,0],[-5968281.173118634,-19832076.427491363,0,120120,0,0],[-5733945.005390784,-19952056.616286363,0,120180,0,0],[-5498999.476041856,-20068681.858933184,0,120240,1,0],[-5263346.658489921,-20182009.26536163,0,120300,1,0],[-5026863.946856306,-20292171.55075578,0,120360,1,0],[-4789574.622197635,-20399149.16378409,0,120420,1,0],[-4551553.831709472,-20502936.46110465,0,120480,1,0],[-4312813.503987397,-20603531.175333407,0,120540,2,0],[-4073254.609465266,-20701049.081904788,0,120600,2,0],[-3832740.61879487,-20795524.961666945,0,120660,1,0],[-3591479.010368392,-20886896.683237955,0,120720,1,0],[-3349664.5050900746,-20975140.909150783,0,120780,0,0],[-3107529.186136487,-21060176.807815988,0,120840,1,0],[-2865088.973682356,-21142033.116583996,0,120900,0,0],[-2622410.8481953717,-21220689.851303764,0,120960,1,0],[-2379511.718138855,-21296190.487068065,0,121020,2,0],[-2136086.9914422403,-21368636.743035197,0,121080,1,0],[-1892181.3853535093,-21438038.151227783,0,121140,0,0],[-1648178.8403228966,-21504295.914558135,0,121200,1,0],[-1404134.1678595706,-21567435.118041977,0,121260,2,0],[-1159691.2950688354,-21627550.076212227,0,121320,2,0],[-914739.7096846768,-21684701.83939836,0,121380,1,0],[-669478.5251410564,-21738851.06622269,0,121440,1,0],[-424143.54780873173,-21789964.376972336,0,121500,2,0],[-178544.70989415378,-21838094.559803642,0,121560,1,0],[67232.93720364461,-21883249.495948438,0,121620,1,0],[313012.3519789062,-21925409.14285907,0,121680,0,0],[558554.3089015768,-21964560.490276642,0,121740,0,0],[803673.703215261,-22000664.66802653,0,121800,1,0],[1048503.55548638,-22033798.191763896,0,121860,1,0],[1293220.8562878189,-22063988.95892831,0,121920,0,0],[1537558.7158025478,-22091227.144744184,0,121980,1,0],[1781514.0833591244,-22115522.581373114,0,122040,2,0],[2025426.3582217484,-22136929.491137326,0,122100,1,0],[2269257.8888366767,-22155461.701543007,0,122160,1,0],[2512782.2782815835,-22171110.34544951,0,122220,2,0],[2756169.135766229,-22183925.97518672,0,122280,1,0],[2999374.328419103,-22193880.96714557,0,122340,0,0],[3242015.9439333114,-22200988.982547827,0,122400,1,0],[3484080.760961425,-22205279.966602273,0,122460,1,0],[3725681.4423032985,-22206762.217831664,0,122520,2,0],[3967013.713252584,-22205466.753881223,0,122580,1,0],[4208034.90672741,-22201376.92398205,0,122640,1,0],[4448525.654620342,-22194530.349671885,0,122700,1,0],[4688448.561618077,-22184934.502501544,0,122760,0,0],[4927636.9225191185,-22172648.30203684,0,122820,0,0],[5165847.712901518,-22157635.53554421,0,122880,2,0],[5403446.859970741,-22139920.323454592,0,122940,0,0],[5640370.265838333,-22119534.051866893,0,123000,2,0],[5876627.304323003,-22096460.899200656,0,123060,1,0],[6112354.944365774,-22070752.763675146,0,123120,1,0],[6347338.754139889,-22042377.04827668,0,123180,0,0],[6581415.649287488,-22011404.913352374,0,123240,2,0],[6814684.854286122,-21977827.522581764,0,123300,1,0],[7047353.658514987,-21941664.693160605,0,123360,2,0],[7279367.7379537625,-21902859.93684178,0,123420,0,0],[7510529.024857855,-21861523.68006764,0,123480,0,0],[7740447.849747996,-21817705.27630327,0,123540,2,0],[7969518.273772833,-21771377.575812794,0,123600,0,0],[8197614.984629857,-21722524.47063757,0,123660,0,0],[8424441.65222292,-21671254.50067844,0,123720,0,0],[8649952.615988689,-21617610.68727733,0,123780,2,0],[8874508.253489938,-21561486.10948846,0,123840,2,0],[9098392.962614512,-21502851.829446968,0,123900,0,0],[9321242.248393614,-21441791.75393049,0,123960,1,0],[9542867.54846569,-21378355.41835039,0,124020,2,0],[9763609.981992127,-21312492.875127085,0,124080,1,0],[9983440.714282867,-21244209.417510226,0,124140,2,0],[10202322.955827681,-21173510.556575917,0,124200,1,0],[10420249.618184386,-21100409.70401649,0,124260,0,0],[10636860.888522398,-21025053.061096057,0,124320,1,0],[10852138.853767304,-20947425.56786319,0,124380,2,0],[11066408.842106199,-20867471.08882215,0,124440,1,0],[11279627.299716573,-20785171.938275814,0,124500,2,0],[11491795.312669352,-20700551.129398465,0,124560,1,0],[11702891.3677241,-20613632.648405664,0,124620,2,0],[11912899.986740213,-20524416.33583475,0,124680,0,0],[12121603.30668061,-20433010.74237087,0,124740,0,0],[12328703.349058708,-20339545.060847964,0,124800,0,0],[12534126.408896657,-20244052.2530146,0,124860,2,0],[12738245.740893127,-20146432.601402365,0,124920,1,0],[12941183.937919205,-20046590.45221607,0,124980,2,0],[13142912.682084158,-19944536.477959912,0,125040,0,0],[13343254.483623654,-19840407.97804677,0,125100,2,0],[13542187.982798558,-19734186.52301627,0,125160,0,0],[13739716.678395793,-19625895.394319467,0,125220,0,0],[13935471.675362336,-19515732.77592078,0,125280,2,0],[14129806.524828305,-19403549.07449274,0,125340,2,0],[14322982.049164431,-19289141.4400329,0,125400,0,0],[14514668.52131995,-19172769.28570117,0,125460,2,0],[14704847.846570557,-19054415.813330173,0,125520,2,0],[14893841.224681698,-18933881.15718593,0,125580,2,0],[15081587.01351204,-18811212.95058638,0,125640,0,0],[15267798.166492293,-18686637.23166402,0,125700,0,0],[15452125.229402171,-18560354.490438487,0,125760,1,0],[15634779.511169272,-18432285.87141562,0,125820,0,0],[15815651.275813187,-18302432.160392776,0,125880,0,0],[15994648.668829389,-18170956.825807955,0,125940,2,0],[16172033.166325083,-18037615.131456684,0,126000,2,0],[16348077.381187318,-17902253.6620375,0,126060,1,0],[16522608.463325322,-17764973.684846006,0,126120,0,0],[16695322.050690336,-17626030.24622747,0,126180,2,0],[16866398.574902806,-17485304.26444331,0,126240,2,0],[17036021.968921218,-17342613.38354167,0,126300,2,0],[17204246.038565233,-17197944.582196124,0,126360,0,0],[17370745.997911662,-17051568.186568208,0,126420,0,0],[17535259.272465996,-16903743.886235457,0,126480,1,0],[17697891.56143315,-16754347.986633858,0,126540,0,0],[17858640.117240097,-16603419.888287725,0,126600,2,0],[18017612.998830292,-16450835.9693217,0,126660,0,0],[18174802.66927753,-16296627.384919642,0,126720,1,0],[18330076.431501843,-16140948.001161754,0,126780,2,0],[18483668.905452084,-15983553.595715363,0,126840,1,0],[18635574.352923732,-15824450.46528365,0,126900,0,0],[18785536.83531426,-15663933.317999084,0,126960,2,0],[18933643.341479454,-15501864.952019516,0,127020,0,0],[19079884.7636698,-15338273.197524285,0,127080,1,0],[19224168.688545056,-15173342.539830578,0,127140,0,0],[19366434.804493155,-15007062.903812734,0,127200,2,0],[19506814.829723794,-14839295.753552258,0,127260,1,0],[19645399.62991925,-14669961.5196366,0,127320,1,0],[19782096.544729047,-14499211.978855213,0,127380,0,0],[19916735.117827613,-14327169.228862071,0,127440,1,0],[20049332.086428132,-14153882.529414752,0,127500,2,0],[20180098.76347998,-13979058.036501467,0,127560,2,0],[20309127.098645143,-13802615.380138544,0,127620,1,0],[20436291.961194105,-13624678.732663041,0,127680,0,0],[20561380.48951879,-13445585.12958678,0,127740,2,0],[20684452.841315724,-13265177.054226274,0,127800,1,0],[20805635.896559663,-13083332.551122066,0,127860,0,0],[20924703.796609435,-12900381.706726927,0,127920,2,0],[21041761.54377222,-12716190.093309661,0,127980,0,0],[21156791.265373215,-12530752.402708841,0,128040,2,0],[21269777.819518324,-12344123.538871247,0,128100,1,0],[21380788.359913968,-12156148.622978099,0,128160,2,0],[21489841.595500518,-11966840.593018698,0,128220,1,0],[21596904.16484823,-11776214.301962392,0,128280,1,0],[21701897.862267274,-11584456.223009078,0,128340,0,0],[21804723.540295247,-11391742.427970242,0,128400,1,0],[21905319.198932257,-11198097.949286819,0,128460,0,0],[22003753.560539085,-11003510.320963874,0,128520,2,0],[22100069.67523179,-10807894.031329824,0,128580,2,0],[22194411.62852233,-10610885.532435158,0,128640,0,0],[22286595.784081608,-10412866.61375158,0,128700,0,0],[22376504.18977862,-10214193.12581896,0,128760,0,0],[22464093.608449858,-10014823.331760244,0,128820,1,0],[22549422.634533294,-9814680.696991242,0,128880,1,0],[22632622.88623362,-9613583.974728003,0,128940,0,0],[22713550.36512571,-9411718.425367415,0,129000,1,0],[22792199.112676825,-9209112.175444802,0,129060,2,0],[22868758.602933094,-9005449.189339677,0,129120,1,0],[22943133.568056986,-8800748.928101674,0,129180,1,0],[23015274.493360836,-8595209.347438661,0,129240,2,0],[23085291.472903967,-8388639.84953828,0,129300,0,0],[23153065.77622543,-8181289.0977136,0,129360,2,0],[23218577.456191663,-7973128.9248858215,0,129420,1,0],[23281877.53872657,-7764026.9418662125,0,129480,2,0],[23342991.514081277,-7553994.752915103,0,129540,0,0],[23401836.60964616,-7343245.179428583,0,129600,2,0],[23458400.861452986,-7131751.934727098,0,129660,0,0],[23512679.908065923,-6919595.893747632,0,129720,0,0],[23564594.10367945,-6707090.015199644,0,129780,2,0],[23614186.84626053,-6493946.854486748,0,129840,1,0],[23661543.79744367,-6279989.988026356,0,129900,1,0],[23706560.493089583,-6065400.942951894,0,129960,1,0],[23749242.98005453,-5850237.33395362,0,130020,1,0],[23789636.023551505,-5634489.886026125,0,130080,2,0],[23827686.682805676,-5418024.489585874,0,130140,0,0],[23863413.880030196,-5201003.232577054,0,130200,0,0],[23896742.2965334,-4983864.462268818,0,130260,2,0],[23927705.331699952,-4766194.981890585,0,130320,1,0],[23956315.479026977,-4547903.719502365,0,130380,2,0],[23982590.23625758,-4328951.3419943005,0,130440,1,0],[24006495.79561913,-4109412.254748758,0,130500,2,0],[24028063.077993847,-3889298.17334918,0,130560,2,0],[24047253.721119337,-3668410.9842633773,0,130620,1,0],[24064053.103574093,-3447002.988787589,0,130680,0,0],[24078442.569715735,-3225420.6776901865,0,130740,0,0],[24090396.947813954,-3003862.1210438455,0,130800,0,0],[24099941.764887195,-2782383.878061125,0,130860,1,0],[24107027.115304574,-2560789.8389320215,0,130920,0,0],[24111693.10285267,-2339138.8394925785,0,130980,1,0],[24113941.593790278,-2117412.4568975307,0,131040,2,0],[24113732.728129033,-1895297.216549498,0,131100,1,0],[24111067.685346853,-1672801.7382087202,0,131160,0,0],[24105968.235690758,-1450346.2288097807,0,131220,1,0],[24098406.584478002,-1227886.7795669416,0,131280,1,0],[24088381.337252427,-1005309.4824197491,0,131340,1,0],[24075920.243652813,-782646.6884291412,0,131400,1,0],[24060958.518537667,-559879.2077173569,0,131460,2,0],[24043506.70143015,-336895.6348643806,0,131520,2,0],[24023572.09987997,-113512.21563762137,0,131580,1,0],[24001105.349676024,110069.83252988911,0,131640,1,0],[23976149.065584294,333625.6753697375,0,131700,0,0],[23948729.432248954,556980.1962565291,0,131760,2,0],[23918792.860025663,780268.4625618174,0,131820,1,0],[23886360.937376242,1003673.9307237616,0,131880,1,0],[23851394.096152514,1226946.831776007,0,131940,0,0],[23813955.906606816,1449938.2078302407,0,132000,0,0],[23774043.1644769,1672401.5006786278,0,132060,1,0],[23731653.082210332,1894496.2008616365,0,132120,2,0],[23686730.29520346,2116591.7674478465,0,132180,1,0],[23639211.543084837,2338647.85124827,0,132240,1,0],[23589168.580436446,2560422.0600823374,0,132300,2,0],[23536545.926963083,2782112.7043780764,0,132360,0,0],[23481393.142687846,3003500.553463347,0,132420,2,0],[23423704.83023674,3224574.52039761,0,132480,0,0],[23363473.16166395,3445299.102639665,0,132540,1,0],[23300738.557526063,3665455.404863826,0,132600,0,0],[23235524.393967185,3885062.289994894,0,132660,2,0],[23167731.917860556,4104210.9823723156,0,132720,2,0],[23097293.66847961,4323284.550705415,0,132780,1,0],[23024238.82030402,4542034.858211457,0,132840,1,0],[22948663.536788233,4760277.516461711,0,132900,0,0],[22870542.37336592,4977828.742833826,0,132960,1,0],[22789937.582967915,5194642.426743148,0,133020,2,0],[22706711.653181974,5411058.517802177,0,133080,1,0],[22620856.7654527,5627013.938090019,0,133140,0,0],[22532505.66667682,5842166.660470666,0,133200,1,0],[22441687.746021044,6056491.261165592,0,133260,2,0],[22348181.862591017,6270297.222681651,0,133320,0,0],[22252166.757802367,6483380.017743046,0,133380,0,0],[22153689.140538927,6695379.054849692,0,133440,2,0],[22052676.233916324,6906620.628590751,0,133500,2,0],[21948935.538269438,7117369.036349467,0,133560,0,0],[21842619.222578365,7327268.322065049,0,133620,1,0],[21733853.70703364,7536175.989667134,0,133680,1,0],[21622495.247743607,7744197.603102404,0,133740,2,0],[21508495.38740981,7951446.14295442,0,133800,2,0],[21391764.01219923,8158064.55153822,0,133860,0,0],[21272472.775687348,8363707.975579547,0,133920,2,0],[21150627.097853713,8568360.67662173,0,133980,0,0],[21026220.500798862,8771954.718992198,0,134040,1,0],[20899360.950842205,8974345.189367278,0,134100,0,0],[20770066.618251257,9175497.390470857,0,134160,1,0],[20638312.224537198,9375361.089338658,0,134220,2,0],[20503910.34786308,9574231.267322516,0,134280,2,0],[20366786.559077445,9772198.995958576,0,134340,1,0],[20226998.76445918,9969095.954839148,0,134400,0,0],[20084781.568417482,10164613.118127268,0,134460,0,0],[19940259.7569953,10358543.805240268,0,134520,0,0],[19793450.2010509,10550880.624391919,0,134580,1,0],[19644222.38354572,10741739.191122128,0,134640,2,0],[19492365.289028015,10931365.941609003,0,134700,2,0],[19337766.40550863,11119877.92319292,0,134760,1,0],[19180575.11886252,11307073.808712672,0,134820,1,0],[19020872.488570135,11492800.780647557,0,134880,0,0],[18858822.825212922,11676897.272774002,0,134940,1,0],[18694399.73142819,11859325.62267196,0,135000,1,0],[18527505.91311856,12040186.05212018,0,135060,0,0],[18358276.56127297,12219301.44006036,0,135120,0,0],[18186816.92234785,12396536.25158459,0,135180,1,0],[18013066.62982475,12571956.700407343,0,135240,1,0],[17836861.120410055,12745693.2831984,0,135300,2,0],[17658072.87873259,12917812.789452186,0,135360,2,0],[17476658.5519624,13088413.316552019,0,135420,1,0],[17292659.86465585,13257329.902356418,0,135480,0,0],[17106409.662612237,13424289.458921235,0,135540,2,0],[16917768.340864312,13589348.811688246,0,135600,1,0],[16726628.169050438,13752641.719884029,0,135660,0,0],[16533257.932448816,13913876.179877749,0,135720,1,0],[16337663.3886021,14073029.794044916,0,135780,2,0],[16139600.233202968,14230255.008929132,0,135840,1,0],[15939053.055081012,14385556.76932365,0,135900,0,0],[15736359.055688635,14538655.658072654,0,135960,2,0],[15531369.04144686,14689642.174766894,0,136020,2,0],[15323805.562608404,14838685.710336937,0,136080,0,0],[15113961.716029905,14985522.567706516,0,136140,0,0],[14902185.508769523,15129919.74979886,0,136200,2,0],[14688165.654406682,15272070.488615438,0,136260,2,0],[14471619.117978347,15412096.777103206,0,136320,0,0],[14252889.745676136,15549790.665191572,0,136380,2,0],[14031972.315918686,15685106.620003235,0,136440,1,0],[13808753.215218615,15818091.298180178,0,136500,2,0],[13583220.137150694,15948746.549944533,0,136560,2,0],[13355272.6514794,16077059.789736658,0,136620,0,0],[13125214.486021351,16202856.574834958,0,136680,0,0],[12893403.42529933,16325907.492651751,0,136740,0,0],[12659852.061958706,16446210.56523581,0,136800,0,0],[12424584.854646975,16563690.07977707,0,136860,2,0],[12187315.6709832,16678503.073324252,0,136920,2,0],[11947737.200221479,16790762.971395522,0,136980,2,0],[11705880.276098676,16900415.471323714,0,137040,0,0],[11462081.229705928,17007266.604738187,0,137100,2,0],[11216374.739796188,17111309.21918053,0,137160,0,0],[10968789.908147313,17212449.691615764,0,137220,1,0],[10719529.657729462,17310636.44491048,0,137280,2,0],[10468258.407810885,17405970.263642304,0,137340,1,0],[10215041.236959476,17498353.8397237,0,137400,0,0],[9960240.2150335,17587665.29776765,0,137460,2,0],[9703687.71678776,17673940.86586909,0,137520,1,0],[9445291.360754393,17757148.669324424,0,137580,2,0],[9185028.909100896,17837293.85916332,0,137640,0,0],[8923163.068649987,17914272.71220455,0,137700,2,0],[8659667.573189989,17988039.833790842,0,137760,0,0],[8394627.808756912,18058549.744592547,0,137820,2,0],[8128060.986580906,18125801.7124849,0,137880,1,0],[7859830.727074872,18189773.95357109,0,137940,0,0],[7590327.030483214,18250333.912602227,0,138000,0,0],[7319769.28981719,18307442.472637676,0,138060,2,0],[7047842.8097870825,18361127.566778548,0,138120,0,0],[6774589.118827758,18411329.194689576,0,138180,1,0],[6500206.86504017,18458019.548373,0,138240,1,0],[6224599.20066013,18501155.32550108,0,138300,0,0],[5947957.992014142,18540705.30653512,0,138360,0,0],[5670532.987298478,18576615.52396939,0,138420,1,0],[5392166.286730139,18608845.904688824,0,138480,1,0],[5112727.151319458,18637423.10231842,0,138540,0,0],[4832451.560254105,18662257.250159957,0,138600,1,0],[4551408.152281404,18683357.943191715,0,138660,0,0],[4269603.006943452,18700676.722759802,0,138720,2,0],[3986933.7253187695,18714178.198625516,0,138780,1,0],[3703268.047811405,18723853.74248975,0,138840,2,0],[3418666.9393642633,18729675.134965036,0,138900,1,0],[3133173.9669580352,18731617.779051106,0,138960,0,0],[2847209.405821163,18729626.24907425,0,139020,2,0],[2560622.332758223,18723678.1074882,0,139080,1,0],[2273319.227525671,18713742.305306472,0,139140,1,0],[1985538.114556165,18699799.627087362,0,139200,2,0],[1697148.1404848234,18681810.22250224,0,139260,0,0],[1408388.108174803,18659775.92731843,0,139320,1,0],[1119499.4108349804,18633658.774807364,0,139380,2,0],[830175.1087800489,18603403.740486506,0,139440,2,0],[540311.2582663018,18568995.16754986,0,139500,2,0],[249977.1847458391,18530362.564002432,0,139560,0,0],[-40406.98664216224,18487567.564477507,0,139620,0,0],[-330448.57416204514,18440627.51482616,0,139680,1,0],[-620211.7354175973,18389502.642830797,0,139740,0,0],[-909675.002312736,18334165.33384965,0,139800,2,0],[-1198913.3827205033,18274583.441854842,0,139860,2,0],[-1488228.0616707134,18210659.446866535,0,139920,2,0],[-1777559.416587771,18142361.372477002,0,139980,0,0],[-2066447.0742226043,18069767.31219606,0,140040,1,0],[-2354682.4115104987,17992913.331002664,0,140100,1,0],[-2642341.179863633,17911744.621961582,0,140160,2,0],[-2929531.802408096,17826188.251128543,0,140220,1,0],[-3216200.6114628287,17736241.442946665,0,140280,0,0],[-3501895.4051202773,17641991.49102707,0,140340,0,0],[-3786372.2506672847,17543537.61629834,0,140400,0,0],[-4069595.3220578553,17440826.583355892,0,140460,0,0],[-4351451.497132014,17333886.434959035,0,140520,2,0],[-4632211.718010124,17222584.179374166,0,140580,2,0],[-4912144.323636369,17106789.161351707,0,140640,2,0],[-5191155.687201828,16986507.564236924,0,140700,2,0],[-5469156.457478637,16861734.703664146,0,140760,2,0],[-5746089.371710698,16732464.687646117,0,140820,0,0],[-6021529.80419834,16598853.315942202,0,140880,0,0],[-6295062.026594991,16461087.708165782,0,140940,1,0],[-6566799.726585679,16319084.588748407,0,141000,1,0],[-6836799.04441706,16172774.747858109,0,141060,1,0],[-7104998.741952257,16022179.824524134,0,141120,1,0],[-7371296.570541004,15867311.377225263,0,141180,2,0],[-7635765.433813137,15708112.935621832,0,141240,0,0],[-7898189.342709797,15544669.755791545,0,141300,0,0],[-8158160.365803024,15377214.008126285,0,141360,1,0],[-8415772.815872826,15205680.079977427,0,141420,0,0],[-8670927.764192235,15030086.018856272,0,141480,1,0],[-8923560.442085426,14850473.046762887,0,141540,2,0],[-9173878.573337486,14666638.746839534,0,141600,0,0],[-9421649.628454387,14478757.307704043,0,141660,1,0],[-9666653.249746053,14286960.36296731,0,141720,2,0],[-9909100.909715705,14091041.7298235,0,141780,1,0],[-10148898.242032627,13891045.96932536,0,141840,2,0],[-10385982.524784325,13687028.7120188,0,141900,2,0],[-10620388.377175447,13478905.28854347,0,141960,0,0],[-10851786.013485195,13266968.98693046,0,142020,1,0],[-11079960.991105527,13051354.662397975,0,142080,1,0],[-11304968.14527351,12832009.129637482,0,142140,0,0],[-11526594.130843319,12609117.666946072,0,142200,0,0],[-11744647.053946627,12382856.899332404,0,142260,2,0],[-11959327.727021089,12153015.718880681,0,142320,1,0],[-12170662.461138185,11919522.308421584,0,142380,2,0],[-12378574.878900805,11682429.60755402,0,142440,0,0],[-12582894.236831099,11441948.534976106,0,142500,2,0],[-12783538.8462532,11198120.319129096,0,142560,1,0],[-12980560.961596167,10950887.087903941,0,142620,0,0],[-13173676.29345348,10700596.44358043,0,142680,0,0],[-13362696.329403903,10447435.783532836,0,142740,2,0],[-13547793.22967151,10191201.387265628,0,142800,1,0],[-13729008.345259069,9931836.20917462,0,142860,1,0],[-13906167.323824817,9669537.517883277,0,142920,2,0],[-14079325.743346319,9404206.129853055,0,142980,2,0],[-14248503.084194802,9135811.310093174,0,143040,0,0],[-14413474.451681102,8864718.509696199,0,143100,2,0],[-14574185.472906485,8591002.584408943,0,143160,1,0],[-14730655.54029061,8314563.870986233,0,143220,1,0],[-14882756.468417257,8035676.5151496595,0,143280,1,0],[-15030452.429474987,7754401.107440208,0,143340,0,0],[-15173596.067560282,7470999.499273357,0,143400,2,0],[-15312251.913849132,7185371.783801996,0,143460,1,0],[-15446438.000439929,6897446.981788529,0,143520,1,0],[-15576042.65839003,6607483.600382975,0,143580,1,0],[-15701044.58461099,6315567.32518554,0,143640,1,0],[-15821395.041877743,6021757.236305314,0,143700,2,0],[-15937117.73780967,5726022.892532256,0,143760,0,0],[-16048143.138546918,5428581.285861109,0,143820,2,0],[-16154433.8351635,5129549.9758927515,0,143880,2,0],[-16256084.272962727,4828667.576601957,0,143940,1,0],[-16353004.931339586,4526173.6192458905,0,144000,0,0],[-16445059.806101205,4222553.648279404,0,144060,1,0],[-16532246.856975148,3917851.4394553956,0,144120,0,0],[-16614560.335581135,3612172.442882652,0,144180,0,0],[-16691933.999336336,3305799.950741547,0,144240,2,0],[-16764422.825081328,2998452.06445816,0,144300,1,0],[-16832110.8739534,2690055.966942751,0,144360,0,0],[-16894861.191690203,2381073.9462093036,0,144420,1,0],[-16952704.63247436,2071560.3033908734,0,144480,1,0],[-17005663.22337152,1761460.5064235956,0,144540,1,0],[-17053750.32103042,1450865.8581339943,0,144600,0,0],[-17096911.477379784,1140009.0944952965,0,144660,1,0],[-17135193.90428818,829022.3703178196,0,144720,1,0],[-17168591.465306107,517799.6423100933,0,144780,0,0],[-17197109.887992572,206608.91099091014,0,144840,0,0],[-17220756.406386,-104285.77956481915,0,144900,1,0],[-17239543.194619045,-414977.29244449636,0,144960,2,0],[-17253519.361753974,-725724.7324456703,0,145020,0,0],[-17262683.993747488,-1036272.1019228186,0,145080,2,0],[-17267070.402549915,-1346524.9154265767,0,145140,1,0],[-17266677.147664703,-1656589.717616799,0,145200,1,0],[-17261548.938489404,-1966200.4290053248,0,145260,1,0],[-17251681.988105923,-2275279.897749058,0,145320,2,0],[-17237112.53474408,-2583923.4577154024,0,145380,1,0],[-17217874.01584969,-2892036.1991078397,0,145440,2,0],[-17193971.59099506,-3199556.4719592705,0,145500,1,0],[-17165450.455409665,-3506382.479286294,0,145560,2,0],[-17132311.92324604,-3812459.7339221947,0,145620,0,0],[-17094640.369973212,-4117537.321293418,0,145680,1,0],[-17052483.831062943,-4421332.850758575,0,145740,2,0],[-17005814.64770413,-4724144.004541541,0,145800,0,0],[-16954714.58366341,-5025745.355043876,0,145860,0,0],[-16899283.3865201,-5325667.581956242,0,145920,1,0],[-16839508.150865912,-5624043.035329415,0,145980,2,0],[-16775391.403478896,-5921159.3745523505,0,146040,1,0],[-16706958.945070248,-6216924.185496531,0,146100,0,0],[-16634336.132588577,-6510966.674628907,0,146160,1,0],[-16557566.190746631,-6803180.735882394,0,146220,2,0],[-16476624.041543322,-7093863.518347764,0,146280,2,0],[-16391458.0287253,-7383129.604167003,0,146340,1,0],[-16302219.936924402,-7670760.130172242,0,146400,0,0],[-16209027.843545567,-7956317.183719536,0,146460,0,0],[-16111984.725975353,-8239602.525767665,0,146520,1,0],[-16011116.78721536,-8520725.671204988,0,146580,1,0],[-15906393.102157673,-8799791.34692859,0,146640,0,0],[-15797936.747522235,-9076592.909749884,0,146700,1,0],[-15685782.721464312,-9351078.32598706,0,146760,1,0],[-15569948.223114902,-9623344.291817058,0,146820,2,0],[-15450406.026768757,-9893542.057320857,0,146880,1,0],[-15327182.268535858,-10161585.600121114,0,146940,2,0],[-15200343.594128957,-10427471.556281598,0,147000,0,0],[-15070043.941391116,-10690954.700545637,0,147060,2,0],[-14936300.060696492,-10952020.2511195,0,147120,1,0],[-14799092.906067632,-11210751.505814893,0,147180,0,0],[-14658669.489541557,-11466814.088459386,0,147240,0,0],[-14515156.755281178,-11720010.219439039,0,147300,0,0],[-14368622.03892013,-11970306.03911079,0,147360,2,0],[-14218923.450439502,-12217982.133207722,0,147420,1,0],[-14066035.314105047,-12463143.071113274,0,147480,2,0],[-13910001.577378672,-12705788.592996854,0,147540,1,0],[-13750890.592104413,-12945831.241811102,0,147600,2,0],[-13588751.959040472,-13183270.086216256,0,147660,0,0],[-13423748.180192968,-13417910.716823487,0,147720,1,0],[-13256014.797080098,-13649602.55030397,0,147780,1,0],[-13085521.034447448,-13878448.618872976,0,147840,1,0],[-12912335.995112259,-14104427.823373368,0,147900,1,0],[-12736499.43739943,-14327510.645550009,0,147960,2,0],[-12557954.145174198,-14547810.36291314,0,148020,0,0],[-12376857.267785892,-14765184.443789313,0,148080,2,0],[-12193290.896026859,-14979585.136557551,0,148140,0,0],[-12007300.889795603,-15190989.389425937,0,148200,2,0],[-11818912.243821591,-15399414.505232833,0,148260,2,0],[-11627994.921629276,-15605075.89764283,0,148320,0,0],[-11434780.68801506,-15807697.306643404,0,148380,2,0],[-11239376.965717437,-16007247.365358315,0,148440,2,0],[-11041566.490221433,-16204015.96285438,0,148500,0,0],[-10841639.410236338,-16397687.417692846,0,148560,2,0],[-10639681.330122551,-16588259.082610523,0,148620,1,0],[-10435582.744283862,-16775831.977462536,0,148680,0,0],[-10229681.828186035,-16960190.64216744,0,148740,1,0],[-10022025.67379721,-17141277.588764533,0,148800,2,0],[-9812402.292067645,-17319331.703981757,0,148860,1,0],[-9600852.449869357,-17494377.548154205,0,148920,1,0],[-9387566.769241394,-17666244.290503602,0,148980,2,0],[-9172451.935167117,-17835060.484654084,0,149040,0,0],[-8955714.021567509,-18000707.34496502,0,149100,0,0],[-8737684.419642646,-18162954.955376476,0,149160,2,0],[-8518116.681853704,-18322030.271932997,0,149220,0,0],[-8297064.83656876,-18477912.262649845,0,149280,1,0],[-8074743.3127778815,-18630504.098482907,0,149340,0,0],[-7851169.299437775,-18779796.865996826,0,149400,0,0],[-7626583.835847233,-18925681.529558394,0,149460,2,0],[-7400675.472782729,-19068379.703244463,0,149520,2,0],[-7173251.706674774,-19208085.525831766,0,149580,0,0],[-6944609.162190813,-19344579.33307265,0,149640,1,0],[-6714985.145034901,-19477806.518280353,0,149700,0,0],[-6484426.53038367,-19607723.60111977,0,149760,1,0],[-6252954.607686326,-19734353.363265894,0,149820,0,0],[-6020636.239740998,-19857719.230749153,0,149880,2,0],[-5787338.855760818,-19977906.00592889,0,149940,1,0],[-5552964.904391299,-20094986.2022074,0,150000,0,0],[-5317884.04805543,-20208784.18208875,0,150060,2,0],[-5081951.224654269,-20319431.631305024,0,150120,0,0],[-4845230.6695337305,-20426872.82198484,0,150180,2,0],[-4607760.909122219,-20531155.1213648,0,150240,2,0],[-4369242.278656573,-20632437.183988143,0,150300,0,0],[-4130075.507691112,-20730561.436427757,0,150360,1,0],[-3890430.3418508796,-20825443.415486492,0,150420,2,0],[-3650024.098613164,-20917274.269765522,0,150480,1,0],[-3408925.5765651804,-21006022.819467463,0,150540,0,0],[-3167462.962190599,-21091584.536175054,0,150600,2,0],[-2925550.724044054,-21174028.70856626,0,150660,2,0],[-2682863.478959188,-21253457.178037245,0,150720,0,0],[-2439780.563507947,-21329803.836298447,0,150780,2,0],[-2196332.364930947,-21403071.385341886,0,150840,2,0],[-1952244.9169836158,-21473328.091833234,0,150900,0,0],[-1707865.9985765363,-21540520.88718495,0,150960,0,0],[-1463601.2272618217,-21604561.252401683,0,151020,1,0],[-1219290.5822956476,-21665502.92964596,0,151080,1,0],[-974810.6429997864,-21723379.847479146,0,151140,2,0],[-730035.7202965013,-21778295.928182036,0,151200,1,0],[-484966.38862705085,-21830221.18307284,0,151260,1,0],[-239818.58387364453,-21879138.699432146,0,151320,0,0],[5158.413617030991,-21924999.805184785,0,151380,0,0],[249793.4074221172,-21967841.587419532,0,151440,0,0],[494029.49445576104,-22007636.56661923,0,151500,1,0],[738021.5092787895,-22044448.105713643,0,151560,1,0],[981925.0076345355,-22078311.880276512,0,151620,0,0],[1225512.3803865616,-22109216.710560374,0,151680,2,0],[1468947.595569073,-22137215.639611416,0,151740,1,0],[1712360.0956267295,-22162308.394327145,0,151800,2,0],[1955734.2277394882,-22184521.916032918,0,151860,1,0],[2199032.351016473,-22203869.80321787,0,151920,2,0],[2442233.787372354,-22220361.705908254,0,151980,1,0],[2685277.334040202,-22234010.02582801,0,152040,2,0],[2928192.7096045353,-22244815.002977185,0,152100,1,0],[3170873.648603798,-22252809.52495288,0,152160,0,0],[3413007.9455243605,-22258003.986918837,0,152220,1,0],[3654505.4604000067,-22260381.914201576,0,152280,2,0],[3895764.5913838446,-22259985.070114028,0,152340,0,0],[4136493.3408018732,-22256813.86438188,0,152400,1,0],[4376566.3203808945,-22250920.299370743,0,152460,0,0],[4615913.064290513,-22242256.791723393,0,152520,0,0],[4854312.5666956585,-22230895.53813016,0,152580,2,0],[5092142.057473401,-22216836.990631245,0,152640,1,0],[5329527.829145363,-22200067.893068526,0,152700,1,0],[5566295.299204694,-22180637.17424759,0,152760,2,0],[5802538.096256934,-22158496.979187995,0,152820,0,0],[6038098.556840285,-22133742.737374146,0,152880,2,0],[6272952.024812459,-22106337.030591615,0,152940,2,0],[6507416.896886791,-22076287.192379713,0,153000,0,0],[6741114.046350482,-22043640.954635732,0,153060,2,0],[6974023.988238798,-22008398.97723105,0,153120,0,0],[7206117.980668923,-21970579.625655074,0,153180,1,0],[7437213.008241261,-21930275.815962415,0,153240,2,0],[7667593.985103646,-21887371.8142183,0,153300,1,0],[7897277.526521558,-21841929.311871096,0,153360,0,0],[8125904.1762282755,-21794036.56767069,0,153420,2,0],[8353585.681906547,-21743623.930866692,0,153480,0,0],[8580317.268548992,-21690783.616584115,0,153540,2,0],[8806088.909409039,-21635463.603412773,0,153600,0,0],[9030857.572145592,-21577708.69967896,0,153660,1,0],[9254453.797077546,-21517580.175686985,0,153720,2,0],[9477173.517612316,-21455026.743062153,0,153780,2,0],[9699199.074968347,-21389950.610617224,0,153840,0,0],[9920156.595600244,-21322535.49089483,0,153900,0,0],[10139655.76259634,-21252846.583652284,0,153960,1,0],[10357871.901030904,-21180919.423380233,0,154020,1,0],[10574953.458216155,-21106633.643210076,0,154080,1,0],[10790898.713396916,-21030077.80468,0,154140,1,0],[11005669.944675937,-20951198.531014845,0,154200,0,0],[11219061.682620514,-20870139.19316895,0,154260,0,0],[11430912.54628133,-20786968.21572244,0,154320,0,0],[11641198.1890329,-20701669.71763789,0,154380,2,0],[11850263.59427347,-20614161.04716692,0,154440,0,0],[12058036.407174205,-20524469.1363294,0,154500,1,0],[12264366.121521289,-20432652.4940699,0,154560,2,0],[12469571.083790338,-20338599.528691385,0,154620,0,0],[12673453.703634739,-20242378.768580064,0,154680,0,0],[12875653.369663093,-20144191.501747593,0,154740,2,0],[13076541.930163363,-20043890.680739224,0,154800,2,0],[13276366.718793703,-19941337.23404756,0,154860,1,0],[13474969.32437853,-19836614.63625857,0,154920,1,0],[13672152.542962508,-19729828.772027906,0,154980,2,0],[13868087.761796404,-19620901.313948847,0,155040,1,0],[14062729.384355204,-19509866.297888286,0,155100,0,0],[14255787.810923716,-19396907.115073036,0,155160,1,0],[14447207.810296103,-19282047.870192632,0,155220,1,0],[14637154.468281174,-19165201.977265533,0,155280,2,0],[14825759.238535563,-19046314.256251447,0,155340,2,0],[15013132.196654081,-18925256.444532618,0,155400,2,0],[15199312.447848974,-18802092.014929853,0,155460,1,0],[15384072.01736004,-18676931.880507085,0,155520,1,0],[15567290.169184633,-18549862.817488536,0,155580,0,0],[15748784.774511943,-18421023.326297734,0,155640,1,0],[15928553.033359582,-18290456.659336586,0,155700,0,0],[16106561.623078633,-18158134.95322033,0,155760,0,0],[16282641.481248539,-18024206.72460552,0,155820,0,0],[16456844.865863828,-17888707.985383302,0,155880,2,0],[16629387.287892539,-17751420.215223078,0,155940,1,0],[16800427.750323128,-17612229.55895647,0,156000,1,0],[16969776.845905382,-17471304.04683632,0,156060,2,0],[17137588.889767926,-17328528.03306253,0,156120,1,0],[17303816.54644744,-17183896.623237263,0,156180,0,0],[17468232.744862396,-17037706.980257683,0,156240,0,0],[17630625.263452876,-16890070.17669467,0,156300,2,0],[17791303.770096425,-16740748.985647768,0,156360,1,0],[17950352.65774637,-16589699.281978639,0,156420,2,0],[18107766.30626857,-16436847.435332688,0,156480,0,0],[18263386.292345807,-16282396.864406347,0,156540,1,0],[18417122.94449307,-16126497.445832266,0,156600,0,0],[18568916.741611894,-15969138.972959977,0,156660,1,0],[18718778.281958856,-15810337.77264256,0,156720,2,0],[18866922.193240687,-15649866.299348552,0,156780,1,0],[19013343.257692862,-15487757.469838362,0,156840,1,0],[19157950.79336536,-15324131.55609872,0,156900,2,0],[19300790.027467288,-15158875.348034754,0,156960,0,0],[19441756.980693087,-14992162.51929465,0,157020,1,0],[19580710.175091792,-14824105.532053402,0,157080,2,0],[19717917.10200744,-14654482.689264389,0,157140,1,0],[19853304.302788388,-14483305.791828426,0,157200,2,0],[19986876.95737619,-14310583.5059913,0,157260,0,0],[20118539.36860591,-14136493.90504828,0,157320,2,0],[20248243.435583342,-13961040.312246615,0,157380,1,0],[20376109.558407575,-13784068.899620896,0,157440,0,0],[20501903.38337862,-13605934.01873648,0,157500,1,0],[20625613.907555416,-13426630.938517954,0,157560,2,0],[20747441.52380182,-13245888.839465851,0,157620,1,0],[20867366.92665033,-13063724.410285743,0,157680,1,0],[20985304.139699005,-12880293.369910195,0,157740,0,0],[21101118.944745466,-12695809.338303315,0,157800,0,0],[21214714.72813447,-12510388.667462155,0,157860,2,0],[21326275.484790124,-12323743.205334416,0,157920,0,0],[21435787.252612337,-12135959.69597439,0,157980,2,0],[21543241.30243678,-11946979.325746568,0,158040,1,0],[21648707.16712164,-11756704.10274344,0,158100,2,0],[21752202.532448925,-11565120.540798936,0,158160,0,0],[21853598.278958198,-11372471.355132345,0,158220,1,0],[21952797.284487378,-11178848.094504252,0,158280,2,0],[22049974.167372912,-10984015.077282418,0,158340,0,0],[22145056.177601125,-10788132.817393446,0,158400,2,0],[22237996.150096565,-10591180.940269087,0,158460,2,0],[22328968.83149601,-10392920.54838324,0,158520,1,0],[22417850.928720973,-10193489.792240651,0,158580,0,0],[22504538.265258435,-9993250.892086387,0,158640,0,0],[22588886.651072573,-9792359.289526882,0,158700,1,0],[22671024.327221442,-9590714.03846581,0,158760,1,0],[22750956.452368546,-9388135.505077198,0,158820,1,0],[22828686.4917125,-9184654.732862184,0,158880,2,0],[22904324.204047948,-8980111.007755345,0,158940,1,0],[22977780.98228144,-8774550.52165278,0,159000,1,0],[23049029.798474662,-8568127.475875432,0,159060,1,0],[23118074.38384942,-8360899.731230463,0,159120,2,0],[23184925.739188377,-8152692.960676544,0,159180,2,0],[23249626.156516783,-7943318.253765119,0,159240,0,0],[23312107.102546465,-7733199.689439844,0,159300,1,0],[23372257.59773803,-7522510.712246181,0,159360,0,0],[23430120.79895472,-7311271.014337741,0,159420,1,0],[23485637.594347846,-7099489.254975047,0,159480,2,0],[23538939.4375651,-6886827.968883722,0,159540,0,0],[23589933.216396686,-6673520.189104531,0,159600,0,0],[23638545.87550397,-6459904.914295448,0,159660,1,0],[23684834.82831657,-6245827.062799482,0,159720,1,0],[23728791.27866403,-6031134.346384565,0,159780,0,0],[23770392.909141842,-5816054.5896227155,0,159840,1,0],[23809656.80849306,-5600546.810513421,0,159900,0,0],[23846523.73412123,-5384701.633984966,0,159960,2,0],[23881051.016977295,-5168311.174268771,0,160020,1,0],[23913290.77987659,-4951218.898248704,0,160080,2,0],[23943160.792374108,-4733486.9871767275,0,160140,0,0],[23970681.444039095,-4515276.052113579,0,160200,0,0],[23995816.207839698,-4296980.900283345,0,160260,1,0],[24018523.343957122,-4078425.0002084724,0,160320,2,0],[24038858.610276874,-3859303.5543231657,0,160380,2,0],[24056862.748556446,-3639431.718711749,0,160440,0,0],[24072441.63395217,-3419196.3593288735,0,160500,1,0],[24085638.04759144,-3198806.110151312,0,160560,0,0],[24096378.353236347,-2978256.2501546578,0,160620,2,0],[24104728.44983272,-2757438.939462046,0,160680,1,0],[24110646.65967295,-2536136.0253045587,0,160740,1,0],[24114165.017258827,-2314602.0593934366,0,160800,1,0],[24115221.440700524,-2092812.7872430978,0,160860,2,0],[24113830.560182367,-1870631.8479333958,0,160920,2,0],[24110017.09701724,-1647898.670472809,0,160980,0,0],[24103729.050263867,-1425030.3008890504,0,161040,1,0],[24095022.040479183,-1202156.9114856196,0,161100,2,0],[24083810.584953852,-979015.8348539709,0,161160,2,0],[24070130.758037757,-755375.9714881103,0,161220,0,0],[24053978.56525978,-531703.5405379925,0,161280,1,0],[24035347.370676108,-308125.97702538106,0,161340,0,0],[24014265.541152406,-84698.66821203072,0,161400,0,0],[23990712.989836898,138355.9695812492,0,161460,1,0],[23964687.4936622,361247.1040021994,0,161520,2,0],[23936149.269231983,584277.7249472702,0,161580,1,0],[23905107.697837066,807414.9521009075,0,161640,1,0],[23871535.279509358,1030457.344691763,0,161700,2,0],[23835411.067579366,1253585.5299542204,0,161760,1,0],[23796775.79544628,1476768.0250025298,0,161820,1,0],[23755596.808580738,1699778.0960125884,0,161880,0,0],[23711931.199838858,1922419.6683631826,0,161940,0,0],[23665809.778825257,2144520.2559668194,0,162000,2,0],[23617175.188597348,2366377.3960473705,0,162060,0,0],[23565980.3513735,2587999.7421287643,0,162120,0,0],[23512361.107820116,2808987.9565323847,0,162180,2,0],[23456176.490691394,3029650.3606088143,0,162240,1,0],[23397399.24821706,3250186.5687980717,0,162300,2,0],[23336045.246941686,3470539.3470707512,0,162360,2,0],[23272039.17994497,3690852.1952746804,0,162420,1,0],[23205419.480325207,3910926.2689192616,0,162480,1,0],[23136239.452098295,4130591.3076814595,0,162540,0,0],[23064571.765362237,4349611.054070217,0,162600,2,0],[22990341.97196617,4568151.0859611025,0,162660,1,0],[22913483.853533503,4786353.409161892,0,162720,1,0],[22834067.27868099,5004004.626760483,0,162780,0,0],[22752147.192219675,5220936.194923326,0,162840,2,0],[22667656.581409164,5437289.334027416,0,162900,0,0],[22580604.17064912,5653005.367574478,0,162960,2,0],[22490982.061693873,5868115.720442011,0,163020,0,0],[22398802.073335785,6082516.45819311,0,163080,2,0],[22304048.133728374,6296234.957762171,0,163140,1,0],[22206632.557099428,6509401.552898195,0,163200,1,0],[22106646.28181013,6721809.686554333,0,163260,1,0],[22004094.94574449,6933422.828002455,0,163320,0,0],[21899063.549852397,7144058.864144927,0,163380,0,0],[21791604.93752576,7353553.492564573,0,163440,1,0],[21681659.81261734,7562019.138737803,0,163500,2,0],[21569076.90858432,7769750.799340609,0,163560,2,0],[21453726.327536516,7976855.456438166,0,163620,1,0],[21335736.809427865,8183165.188609252,0,163680,0,0],[21215273.837781858,8388333.609793315,0,163740,0,0],[21092437.87917672,8592188.99877574,0,163800,2,0],[20967039.17751677,8795010.03068263,0,163860,1,0],[20838970.571936253,8996903.796213329,0,163920,0,0],[20708432.58869234,9197515.839014048,0,163980,0,0],[20575572.115718868,9396723.17067626,0,164040,2,0],[20440136.09001107,9594766.031990549,0,164100,1,0],[20302050.219607286,9791738.685148982,0,164160,2,0],[20161316.214776773,9987643.46402596,0,164220,0,0],[20018057.491592947,10182294.768694988,0,164280,1,0],[19872356.690061677,10375512.308566645,0,164340,1,0],[19724128.078721438,10567406.705949076,0,164400,2,0],[19573260.85081023,10758074.483653864,0,164460,1,0],[19419757.73960826,10947517.671016796,0,164520,1,0],[19263751.26079148,11135528.835622812,0,164580,0,0],[19105347.84087888,11321943.722255863,0,164640,1,0],[18944547.383590482,11506764.380124453,0,164700,2,0],[18781146.30571773,11690180.35699834,0,164760,2,0],[18615000.839117743,11872335.767481804,0,164820,0,0],[18446378.03648839,12052899.35411696,0,164880,2,0],[18275278.91077029,12231843.259654758,0,164940,0,0],[18101726.829219397,12409133.587542882,0,165000,1,0],[17925846.048828032,12584613.5700453,0,165060,0,0],[17747624.93793194,12758249.563852739,0,165120,1,0],[17567103.51573684,12930018.93828844,0,165180,1,0],[17384160.91093517,13099991.560560368,0,165240,1,0],[17198790.472129952,13268133.171979893,0,165300,2,0],[17010887.165190116,13434550.97719277,0,165360,2,0],[16820305.372914594,13599288.166722212,0,165420,1,0],[16627195.88951777,13762232.109667335,0,165480,0,0],[16431868.717806067,13923103.959414165,0,165540,2,0],[16234172.598771269,14081966.445337068,0,165600,1,0],[16033994.179174423,14238915.887224596,0,165660,1,0],[15831474.734854313,14393780.630182495,0,165720,0,0],[15626799.016299838,14546433.293958668,0,165780,2,0],[15419794.25324559,14696940.114011118,0,165840,0,0],[15210521.040562816,14845260.305983447,0,165900,2,0],[14998952.002029276,14991359.170988781,0,165960,0,0],[14785142.059036238,15135220.616663374,0,166020,1,0],[14569242.580473756,15276689.665675921,0,166080,1,0],[14351117.495421544,15415793.3748484,0,166140,2,0],[14130646.673002457,15552668.293084517,0,166200,0,0],[13907967.355348755,15687108.879707085,0,166260,1,0],[13683302.299067663,15819032.020190945,0,166320,2,0],[13456308.641047321,15948545.77237722,0,166380,0,0],[13227205.260028621,16075558.659088474,0,166440,1,0],[12996147.914288597,16199922.61614194,0,166500,2,0],[12762858.144505456,16321773.314760081,0,166560,0,0],[12527503.857936803,16440998.671315921,0,166620,1,0],[12290281.871273167,16557462.230740216,0,166680,2,0],[12050890.378276672,16671293.31662132,0,166740,0,0],[11809501.682104072,16782389.076522447,0,166800,2,0],[11566162.31205548,16890684.970939495,0,166860,0,0],[11320876.133753428,16996159.87246062,0,166920,1,0],[11073851.92487626,17098702.776875008,0,166980,0,0],[10825127.830516273,17198274.091630474,0,167040,0,0],[10574864.107550792,17294764.492971353,0,167100,1,0],[10322972.317810884,17388235.101169314,0,167160,1,0],[10069274.03608931,17478676.498789623,0,167220,1,0],[9813816.997031657,17566061.496490464,0,167280,2,0],[9556469.630530052,17650401.192542277,0,167340,2,0],[9297057.318706665,17731707.79317007,0,167400,1,0],[9035838.00543019,17809914.16369068,0,167460,0,0],[8773161.967678566,17884866.880732216,0,167520,1,0],[8509045.938406603,17956525.88228618,0,167580,1,0],[8243401.574150504,18024894.25291209,0,167640,1,0],[7976214.741669004,18089940.238753535,0,167700,0,0],[7707729.682097612,18151579.84417492,0,167760,1,0],[7437996.42122637,18209791.53405185,0,167820,2,0],[7166647.896579376,18264606.550876524,0,167880,0,0],[6893972.711515315,18315947.47194492,0,167940,2,0],[6619960.949244049,18363785.173483793,0,168000,2,0],[6344315.694735951,18408142.774970587,0,168060,0,0],[6067440.53528317,18448918.75613969,0,168120,1,0],[5789562.197945083,18486045.030669414,0,168180,0,0],[5510723.04024058,18519528.826991286,0,168240,1,0],[5230934.971272025,18549277.87116308,0,168300,2,0],[4949939.340704516,18575335.799098894,0,168360,2,0],[4667595.724007593,18597675.85263028,0,168420,2,0],[4383924.684726951,18616263.771927975,0,168480,0,0],[4099371.5674850657,18631019.96386436,0,168540,2,0],[3813957.602602522,18641935.238524713,0,168600,1,0],[3527585.072502993,18648962.385328002,0,168660,0,0],[3240641.1346741817,18652081.79345413,0,168720,0,0],[2953372.3319718586,18651244.888138488,0,168780,2,0],[2665477.3453258,18646452.165747583,0,168840,1,0],[2376819.582214616,18637635.308108486,0,168900,1,0],[2087657.0536900633,18624787.51582124,0,168960,2,0],[1797859.7370522097,18607869.881599102,0,169020,0,0],[1507665.8072388265,18586874.6144227,0,169080,0,0],[1217507.0817832947,18561784.433561202,0,169140,2,0],[927073.5691312221,18532558.618798953,0,169200,0,0],[636425.2657819152,18499176.39194256,0,169260,2,0],[345628.2222325739,18461607.2927159,0,169320,0,0],[54767.370676713,18419830.987291764,0,169380,1,0],[-235945.54871892658,18373849.680858266,0,169440,1,0],[-526594.8929443253,18323620.311899457,0,169500,1,0],[-817114.4089141609,18269125.2222197,0,169560,0,0],[-1107270.9699312202,18210365.562394354,0,169620,2,0],[-1397165.7574992212,18147312.02001643,0,169680,2,0],[-1687087.924444015,18079850.147749294,0,169740,2,0],[-1976962.6943175194,18007991.878279805,0,169800,0,0],[-2266329.6986062713,17931769.83089601,0,169860,1,0],[-2554998.3375676097,17851247.687813234,0,169920,0,0],[-2842850.870580373,17766398.779728018,0,169980,2,0],[-3130012.8119741464,17677189.487516984,0,170040,1,0],[-3416565.6765873465,17583520.095746998,0,170100,2,0],[-3702444.7694327687,17485413.12276217,0,170160,1,0],[-3987554.7556613823,17382843.64887334,0,170220,2,0],[-4271831.710794828,17275830.778818447,0,170280,0,0],[-4555016.572514019,17164408.406814,0,170340,0,0],[-4836695.351850837,17048736.805637006,0,170400,0,0],[-5116802.007831128,16928795.59042749,0,170460,2,0],[-5395584.3040306335,16804462.838435527,0,170520,2,0],[-5673275.974942715,16675586.773374619,0,170580,1,0],[-5949650.685697456,16542268.89499863,0,170640,0,0],[-6224285.366896414,16404662.60058576,0,170700,2,0],[-6497272.060255897,16262688.021441974,0,170760,1,0],[-6768669.949978828,16116300.714390364,0,170820,0,0],[-7038098.149618647,15965662.85224796,0,170880,1,0],[-7305476.487035041,15810784.909140749,0,170940,0,0],[-7570702.6346253045,15651733.52239828,0,171000,1,0],[-7833722.68679897,15488480.829395132,0,171060,1,0],[-8094571.78184487,15320984.363680512,0,171120,2,0],[-8353354.872507127,15149170.481697636,0,171180,1,0],[-8609966.683207415,14973044.799783127,0,171240,1,0],[-8864193.488563672,14792755.883266343,0,171300,1,0],[-9115916.589573713,14608331.330077248,0,171360,2,0],[-9365239.13831098,14419690.389770696,0,171420,2,0],[-9612208.519705571,14226743.389765149,0,171480,1,0],[-9856581.382894775,14029681.073221494,0,171540,1,0],[-10098161.567359846,13828598.051577954,0,171600,0,0],[-10336701.71365753,13623695.03809618,0,171660,1,0],[-10572151.775837451,13415006.863095641,0,171720,1,0],[-10804537.667611111,13202446.103672583,0,171780,2,0],[-11033953.914533881,12985949.698165487,0,171840,0,0],[-11260161.778925695,12765678.367222812,0,171900,1,0],[-11482971.58419026,12541839.609574063,0,171960,1,0],[-11702430.66669507,12314327.251099177,0,172020,1,0],[-11918467.598459046,12083207.693715699,0,172080,1,0],[-12130995.953025037,11848537.835128518,0,172140,0,0],[-12339829.547132595,11610541.024537003,0,172200,2,0],[-12545037.508854635,11369104.824143885,0,172260,2,0],[-12746777.389008347,11124016.423730109,0,172320,1,0],[-12944824.541647874,10875505.231384005,0,172380,0,0],[-13138919.331172837,10623909.7782194,0,172440,1,0],[-13329014.019055001,10369288.432310065,0,172500,0,0],[-13515024.75027181,10111742.80597572,0,172560,1,0],[-13696896.990358423,9851298.114186227,0,172620,2,0],[-13874783.244775262,9587774.7668754,0,172680,0,0],[-14048515.61380002,9321386.424045824,0,172740,1,0],[-14217949.896662954,9052368.114468168,0,172800,1,0],[-14383112.201545803,8780619.292667564,0,172860,1,0],[-14543971.322667673,8506245.2357551,0,172920,1,0],[-14700465.813524883,8229311.6795266,0,172980,2,0],[-14852635.713915315,7949763.489619929,0,173040,0,0],[-15000341.372599412,7667819.504947468,0,173100,0,0],[-15143390.196814233,7383899.681685439,0,173160,1,0],[-15281811.244979506,7097919.565825583,0,173220,1,0],[-15415655.932848295,6809823.096181186,0,173280,2,0],[-15544940.572417418,6519506.954112578,0,173340,0,0],[-15669570.509370837,6227245.975948626,0,173400,2,0],[-15789514.025114655,5933121.236455008,0,173460,0,0],[-15904737.03542416,5637218.236674801,0,173520,2,0],[-16015206.81405182,5339632.566966431,0,173580,1,0],[-16120978.071623461,5040279.935716134,0,173640,0,0],[-16221865.689875081,4739607.535514029,0,173700,0,0],[-16317832.80924117,4437867.148781934,0,173760,1,0],[-16408897.532898948,4134980.662399173,0,173820,2,0],[-16495161.315922413,3830696.320517591,0,173880,0,0],[-16576554.155293245,3525275.6932915943,0,173940,2,0],[-16653051.960796943,3218821.2697540293,0,174000,1,0],[-16724695.278168479,2911243.289569128,0,174060,1,0],[-16791436.71947162,2602800.046066924,0,174120,1,0],[-16853263.562895283,2293605.628711754,0,174180,1,0],[-16910172.998361282,1983754.6807588595,0,174240,1,0],[-16962169.42396824,1673313.930492566,0,174300,2,0],[-17009293.20493632,1362210.2825249876,0,174360,2,0],[-17051540.659743488,1050348.612005124,0,174420,2,0],[-17088917.517826356,737838.3372171329,0,174480,0,0],[-17121417.146414198,425122.56538725493,0,174540,1,0],[-17148995.484678023,112441.77648791467,0,174600,0,0],[-17171688.549579542,-200071.4747214949,0,174660,0,0],[-17189485.13681504,-512170.1487944776,0,174720,2,0],[-17202429.52220019,-824119.3555001086,0,174780,2,0],[-17210561.0952902,-1136212.175579942,0,174840,0,0],[-17213866.981008697,-1447982.8208623913,0,174900,0,0],[-17212396.89641144,-1758990.4145321555,0,174960,1,0],[-17206162.446974587,-2069327.1575423132,0,175020,0,0],[-17195181.044114117,-2378907.460904409,0,175080,2,0],[-17179472.859245993,-2687847.341826725,0,175140,2,0],[-17159062.48318062,-2996417.3987822286,0,175200,1,0],[-17133989.05081352,-3304335.363919798,0,175260,1,0],[-17104273.12183473,-3611374.6313941665,0,175320,1,0],[-17069977.747421212,-3917435.9054774176,0,175380,2,0],[-17031102.056426123,-4222633.5361616695,0,175440,2,0],[-16987646.528945584,-4527076.087681211,0,175500,2,0],[-16939638.874312177,-4830664.383722825,0,175560,1,0],[-16887172.423213735,-5133169.378203364,0,175620,1,0],[-16830293.33653692,-5434342.363420146,0,175680,2,0],[-16769012.23091758,-5734260.522354112,0,175740,1,0],[-16703375.678334493,-6032901.079425547,0,175800,1,0],[-16633458.36287673,-6329977.36794646,0,175860,1,0],[-16559308.19466872,-6625455.251826448,0,175920,0,0],[-16481018.970182333,-6919073.754391096,0,175980,0,0],[-16398684.754300974,-7210599.973921896,0,176040,0,0],[-16312342.436318098,-7500000.855081095,0,176100,1,0],[-16222017.250348419,-7787362.1367227,0,176160,1,0],[-16127705.362044249,-8072806.804960314,0,176220,0,0],[-16029498.706329662,-8356086.026242082,0,176280,2,0],[-15927393.983102333,-8637349.28523951,0,176340,0,0],[-15821451.34783551,-8916534.552719034,0,176400,1,0],[-15711796.930904014,-9193417.412678096,0,176460,2,0],[-15598309.70478783,-9468282.607181534,0,176520,2,0],[-15481024.76762646,-9741240.22739572,0,176580,1,0],[-15360014.794635223,-10012073.355514133,0,176640,0,0],[-15235512.448238522,-10280402.072809441,0,176700,1,0],[-15107567.13512388,-10546209.284585916,0,176760,1,0],[-14976165.966814145,-10809597.12153749,0,176820,1,0],[-14841343.906417718,-11070521.16820396,0,176880,2,0],[-14703081.732701542,-11329101.562203651,0,176940,0,0],[-14561521.622776812,-11585130.13670171,0,177000,1,0],[-14416808.17529743,-11838425.622787705,0,177060,2,0],[-14268808.763233267,-12089282.267645914,0,177120,2,0],[-14117497.41204451,-12337776.987615947,0,177180,0,0],[-13963113.942240061,-12583584.11239735,0,177240,1,0],[-13805814.103495846,-12826512.703337513,0,177300,0,0],[-13645660.356454952,-13066541.075506877,0,177360,0,0],[-13482796.016242899,-13303496.56497403,0,177420,1,0],[-13317183.33075069,-13537517.176642219,0,177480,2,0],[-13148681.412119456,-13768823.194318904,0,177540,2,0],[-12977223.41171033,-13997556.952820782,0,177600,0,0],[-12803087.690925248,-14223406.536344405,0,177660,1,0],[-12626459.75044599,-14446216.498841207,0,177720,2,0],[-12447132.401982738,-14666207.17867006,0,177780,0,0],[-12265301.637507115,-14883255.693440367,0,177840,2,0],[-12081021.101265388,-15097320.371342236,0,177900,1,0],[-11894222.969692282,-15308535.541478347,0,177960,1,0],[-11705093.078065598,-15516718.08567162,0,178020,1,0],[-11513659.032172382,-15721870.25258123,0,178080,2,0],[-11319874.662669186,-15924120.622660358,0,178140,1,0],[-11123775.28853473,-16123423.891957324,0,178200,0,0],[-10925696.19718254,-16319537.57604689,0,178260,1,0],[-10725674.391790774,-16512402.2361182,0,178320,0,0],[-10523764.713048777,-16702060.780994326,0,178380,1,0],[-10320024.268507095,-16888482.37593957,0,178440,0,0],[-10114500.138392257,-17071656.45456226,0,178500,0,0],[-9907408.93439235,-17251455.845768046,0,178560,1,0],[-9698627.261189165,-17427993.50131806,0,178620,1,0],[-9488098.306370968,-17601382.45383437,0,178680,1,0],[-9275858.720633687,-17771607.53939036,0,178740,0,0],[-9062125.210786069,-17938562.20532559,0,178800,2,0],[-8846766.762798294,-18102343.56324264,0,178860,2,0],[-8629583.634227728,-18263147.039780606,0,178920,2,0],[-8410604.276824016,-18421006.659687657,0,178980,2,0],[-8189868.136564796,-18575895.696277015,0,179040,0,0],[-7967751.680771967,-18727566.1524325,0,179100,2,0],[-7744256.788666834,-18876094.520002607,0,179160,2,0],[-7519159.579927553,-19021593.654575087,0,179220,2,0],[-7292486.484939859,-19164105.449093696,0,179280,0,0],[-7064631.36683794,-19303431.4575818,0,179340,0,0],[-6835896.616893831,-19439386.464065082,0,179400,0,0],[-6606360.78678804,-19571959.907094322,0,179460,1,0],[-6375885.863742835,-19701265.036615115,0,179520,2,0],[-6144236.573569394,-19827478.118499696,0,179580,0,0],[-5911590.653922129,-19950499.287839886,0,179640,0,0],[-5678350.478422393,-20070182.305332776,0,179700,0,0],[-5444515.572420713,-20186538.52451861,0,179760,0,0],[-5210145.095649258,-20299567.785244063,0,179820,2,0],[-4974967.458276477,-20409411.86482737,0,179880,0,0],[-4739020.350245671,-20516111.250006422,0,179940,1,0],[-4502493.8151865015,-20619572.89951586,0,180000,1,0],[-4265308.708990349,-20719894.308471978,0,180060,2,0],[-4027295.5946965395,-20817153.120532826,0,180120,1,0],[-3788502.704272771,-20911344.403846264,0,180180,1,0],[-3549134.916741084,-21002388.411832705,0,180240,1,0],[-3309257.0800672774,-21090334.52835683,0,180300,1,0],[-3068890.899431115,-21175165.886809234,0,180360,1,0],[-2828069.798840325,-21256897.075103045,0,180420,1,0],[-2586839.389847438,-21335532.720235024,0,180480,1,0],[-2345251.8662098665,-21411060.184928715,0,180540,2,0],[-2103129.1747960923,-21483600.699707564,0,180600,1,0],[-1860533.0372383147,-21553119.68861404,0,180660,2,0],[-1617510.0823186913,-21619623.644852515,0,180720,0,0],[-1374260.0968302737,-21683087.944907084,0,180780,2,0],[-1130824.5697173818,-21743514.09834996,0,180840,2,0],[-886867.3611166269,-21801011.75703179,0,180900,0,0],[-642794.6138176053,-21855485.63317748,0,180960,0,0],[-399004.4816327525,-21906880.52592563,0,181020,2,0],[-155132.01685822572,-21955288.79091991,0,181080,0,0],[88759.2982948937,-22000736.777567852,0,181140,2,0],[332619.3357506117,-22043213.827235032,0,181200,1,0],[576630.6440052267,-22082765.801406313,0,181260,2,0],[820747.9489700791,-22119386.72966242,0,181320,0,0],[1064728.6347908333,-22153102.185614176,0,181380,1,0],[1308418.4556068059,-22183877.26787318,0,181440,2,0],[1552109.4423596265,-22211789.489590324,0,181500,1,0],[1795783.374127405,-22236817.037802294,0,181560,0,0],[2039014.4789742434,-22258947.19495571,0,181620,0,0],[2281646.7608674164,-22278199.377824754,0,181680,2,0],[2523999.7195217265,-22294597.23556799,0,181740,1,0],[2766191.1567898723,-22308169.2934571,0,181800,2,0],[3008227.5082590478,-22318925.8435156,0,181860,1,0],[3250076.755755088,-22326921.232823417,0,181920,2,0],[3491669.0418327767,-22332093.916312367,0,181980,1,0],[3733014.149130113,-22334504.24836891,0,182040,1,0],[3973920.3892387715,-22334158.085316412,0,182100,0,0],[4214138.121371728,-22331087.650796097,0,182160,0,0],[4453486.670652372,-22325266.102126416,0,182220,2,0],[4692297.406015406,-22316743.360671137,0,182280,0,0],[4930533.349484537,-22305508.4369483,0,182340,1,0],[5167991.010103109,-22291597.245660346,0,182400,1,0],[5404831.20566413,-22275046.7063846,0,182460,2,0],[5641237.559245109,-22255803.292816132,0,182520,2,0],[5877289.340204329,-22233882.810353354,0,182580,0,0],[6112661.644100644,-22209346.68909267,0,182640,0,0],[6346969.003578021,-22182255.294837706,0,182700,1,0],[6580355.965446103,-22152580.502483208,0,182760,0,0],[6812788.7835583985,-22120358.521396488,0,182820,2,0],[7044440.336914483,-22085569.81865089,0,182880,0,0],[7275281.944629677,-22048249.660082553,0,182940,0,0],[7504925.842285906,-22008452.37588452,0,183000,2,0],[7733732.232798026,-21966142.533572577,0,183060,0,0],[7961653.165192067,-21921341.49783953,0,183120,2,0],[8188659.29530229,-21874034.856915038,0,183180,0,0],[8414752.299521724,-21824308.19440687,0,183240,2,0],[8639898.070077742,-21772117.50160978,0,183300,0,0],[8864070.893179962,-21717496.835157067,0,183360,2,0],[9087284.103059607,-21660453.6958818,0,183420,1,0],[9309643.350513497,-21600956.128417417,0,183480,2,0],[9531149.2209002,-21539035.240860365,0,183540,1,0],[9751803.791931488,-21474725.213425778,0,183600,0,0],[9971186.305531831,-21408086.00049651,0,183660,0,0],[10189153.188662793,-21339247.10618394,0,183720,2,0],[10406027.876066698,-21268072.56123048,0,183780,2,0],[10622130.099579163,-21194496.270703785,0,183840,1,0],[10837210.680583851,-21118568.074458797,0,183900,0,0],[11050996.261359569,-21040452.615617517,0,183960,1,0],[11263418.69608287,-20960137.34402805,0,184020,1,0],[11474658.183770407,-20877593.706022073,0,184080,0,0],[11684486.556149492,-20792908.80249659,0,184140,1,0],[11892931.122153634,-20706060.735872284,0,184200,0,0],[12099950.104537152,-20617145.457750157,0,184260,2,0],[12305704.134723097,-20526028.71684846,0,184320,0,0],[12510141.497296518,-20432778.85565348,0,184380,2,0],[12713302.048258482,-20337388.28648863,0,184440,2,0],[12915469.3934253,-20239741.98117326,0,184500,2,0],[13116606.321812142,-20139831.85377522,0,184560,0,0],[13316394.984541357,-20037841.330160484,0,184620,2,0],[13514800.880141985,-19933784.05853824,0,184680,2,0],[13712159.594344348,-19827516.85839855,0,184740,0,0],[13908104.624824883,-19719200.02924289,0,184800,1,0],[14102455.684932128,-19608971.399458822,0,184860,1,0],[14295381.561252676,-19496747.888528787,0,184920,2,0],[14487022.568407683,-19382446.286807653,0,184980,0,0],[14677171.833160924,-19266162.694979858,0,185040,1,0],[14865707.47910209,-19148068.363973834,0,185100,2,0],[15052894.191345721,-19027925.379240513,0,185160,1,0],[15238701.15740361,-18905781.27610665,0,185220,0,0],[15422836.566275524,-18781827.6885427,0,185280,0,0],[15605141.365223415,-18656221.084729634,0,185340,1,0],[15785729.944343997,-18528853.51227488,0,185400,2,0],[15964916.067879878,-18399535.47622247,0,185460,1,0],[16142650.063963758,-18268253.932913378,0,185520,1,0],[16318801.25069643,-18135203.415380493,0,185580,2,0],[16493459.681387126,-18000232.850009073,0,185640,0,0],[16666494.639459,-17863502.206248462,0,185700,0,0],[16837612.04969218,-17725201.98407159,0,185760,2,0],[17007088.7887432,-17585208.351591658,0,185820,1,0],[17175009.73388858,-17443336.40847578,0,185880,1,0],[17341289.77475237,-17299784.521771993,0,185940,1,0],[17505842.18720529,-17154542.24740162,0,186000,1,0],[17668702.539566543,-17007617.229294743,0,186060,1,0],[17829831.817659866,-16859047.59773619,0,186120,1,0],[17989248.726140734,-16708823.69762997,0,186180,0,0],[18146778.40073608,-16557126.517047057,0,186240,1,0],[18302427.850193437,-16403932.430212678,0,186300,0,0],[18456169.33783969,-16249294.619552484,0,186360,2,0],[18608150.46068808,-16093086.146285057,0,186420,2,0],[18758579.61460811,-15935034.222136864,0,186480,1,0],[18907315.324878983,-15775352.011042908,0,186540,1,0],[19054248.660374273,-15614141.095601054,0,186600,0,0],[19199217.940865163,-15451598.184120048,0,186660,1,0],[19342238.96700192,-15287672.829592265,0,186720,2,0],[19483514.96873367,-15122156.739559734,0,186780,1,0],[19623060.642300848,-14955038.68191237,0,186840,2,0],[19760838.54015711,-14786381.94982201,0,186900,1,0],[19896845.526155487,-14616161.458186658,0,186960,2,0],[20031074.362795055,-14444402.356588507,0,187020,1,0],[20163462.151950747,-14271131.778068915,0,187080,0,0],[20293859.20765581,-14096639.366099626,0,187140,0,0],[20422106.226745665,-13921115.69615407,0,187200,2,0],[20548419.648303136,-13744237.985885153,0,187260,1,0],[20672883.518250447,-13565948.047479454,0,187320,0,0],[20795268.753931675,-13386484.2234993,0,187380,0,0],[20915495.871178795,-13206064.400986472,0,187440,0,0],[21033526.845128328,-13024697.724211272,0,187500,2,0],[21149574.175708104,-12842084.386607071,0,187560,1,0],[21263694.579309404,-12658090.897993218,0,187620,1,0],[21375834.68985003,-12472920.57232174,0,187680,0,0],[21485830.42853279,-12286709.341242159,0,187740,1,0],[21593727.4685288,-12099513.868353114,0,187800,0,0],[21699457.180871192,-11911303.62598178,0,187860,1,0],[21803095.131623887,-11722124.332746403,0,187920,2,0],[21904722.287481777,-11531683.975217193,0,187980,2,0],[22004456.049213514,-11339855.585012577,0,188040,1,0],[22102176.373132564,-11146745.916355504,0,188100,0,0],[22197747.390461896,-10952791.408361504,0,188160,0,0],[22291053.991471432,-10758103.08366089,0,188220,1,0],[22382152.26910594,-10562576.624457214,0,188280,2,0],[22471219.293467157,-10365859.743429413,0,188340,2,0],[22558324.536365733,-10167854.15789455,0,188400,2,0],[22643409.965221945,-9968536.308768786,0,188460,0,0],[22726381.946894836,-9768276.79638078,0,188520,1,0],[22807095.289418068,-9567284.561352037,0,188580,2,0],[22885734.743797794,-9365185.013762236,0,188640,0,0],[22962183.397091456,-9162204.201816816,0,188700,1,0],[23036415.69581545,-8958545.291431699,0,188760,2,0],[23108491.607237894,-8753839.68368748,0,188820,1,0],[23178436.584560093,-8548127.529815549,0,188880,1,0],[23246195.65174884,-8341631.044528062,0,188940,1,0],[23311721.049275063,-8134308.49423079,0,189000,1,0],[23375037.534595028,-7926226.824122493,0,189060,0,0],[23436061.688249014,-7717567.749666265,0,189120,1,0],[23494779.635864887,-7508334.005254746,0,189180,2,0],[23551331.703498237,-7298210.466736385,0,189240,0,0],[23605634.66605689,-7087382.838443146,0,189300,2,0],[23657636.38556277,-6875889.715194988,0,189360,2,0],[23707479.251987793,-6663367.9371264,0,189420,2,0],[23755103.938588984,-6449858.018527612,0,189480,1,0],[23800512.77089179,-6235568.566900647,0,189540,1,0],[23843602.309478644,-6020656.335019986,0,189600,0,0],[23884351.38664593,-5805373.28463089,0,189660,1,0],[23922766.2737545,-5589674.280887796,0,189720,1,0],[23958884.389394525,-5373447.536793597,0,189780,2,0],[23992711.9236911,-5156521.411349678,0,189840,1,0],[24024211.403063193,-4938919.084796066,0,189900,0,0],[24053346.45596923,-4721013.640211312,0,189960,1,0],[24080149.48034662,-4502816.289806513,0,190020,0,0],[24104550.41365056,-4284367.886491971,0,190080,0,0],[24126568.649851438,-4065874.34420249,0,190140,1,0],[24146194.09031082,-3847140.4708195403,0,190200,1,0],[24163477.82916933,-3628031.23262126,0,190260,0,0],[24178325.636230413,-3408735.0120608225,0,190320,2,0],[24190817.659886915,-3189120.32228206,0,190380,2,0],[24200936.77332973,-2968822.731464014,0,190440,0,0],[24208664.707000565,-2748238.747362957,0,190500,1,0],[24214001.11691807,-2527546.12613257,0,190560,2,0],[24216902.67695161,-2306427.6368885986,0,190620,0,0],[24217415.478994887,-2085090.6232968185,0,190680,1,0],[24215486.414430648,-1863731.0206460818,0,190740,2,0],[24211147.184524674,-1641992.7088122529,0,190800,0,0],[24204358.85403971,-1420074.0578521714,0,190860,1,0],[24195140.485683642,-1198226.3187307222,0,190920,1,0],[24183479.97126523,-976236.449249327,0,190980,0,0],[24169399.82128095,-754330.0485591638,0,191040,1,0],[24152860.85515942,-532536.0729845059,0,191100,2,0],[24133879.135878272,-310475.34765540756,0,191160,2,0],[24112360.964036305,-88058.73604494348,0,191220,1,0],[24088396.576895896,134559.1929941837,0,191280,2,0],[24061902.349841155,357345.5200424123,0,191340,2,0],[24032904.037471734,580435.3462954928,0,191400,0,0],[24001433.309574593,803483.9440276109,0,191460,0,0],[23967516.766766965,1026076.321029516,0,191520,0,0],[23931159.585832812,1248230.6011294194,0,191580,2,0],[23892303.452757668,1470224.766771272,0,191640,1,0],[23850946.757581126,1692265.2368798705,0,191700,1,0],[23807056.45902509,1914124.9932690118,0,191760,2,0],[23760632.908462767,2135961.5729866517,0,191820,0,0],[23711687.826507777,2357551.168953207,0,191880,2,0],[23660248.07123575,2578910.2384921093,0,191940,0,0],[23606280.463201575,2799978.50594054,0,192000,1,0],[23549825.62163067,3020583.3494179286,0,192060,0,0],[23490901.24495881,3240694.505913747,0,192120,2,0],[23429437.4031863,3460460.677579112,0,192180,2,0],[23365365.775452673,3680195.2978055757,0,192240,0,0],[23298736.178257696,3899511.2192524793,0,192300,0,0],[23229698.302515164,4118087.9568246915,0,192360,1,0],[23158164.415302183,4336020.525406254,0,192420,1,0],[23084092.405462664,4553482.9575697435,0,192480,1,0],[23007476.37771267,4770437.722523282,0,192540,2,0],[22928261.959727243,4987053.890422724,0,192600,1,0],[22846420.56989597,5203287.210161464,0,192660,0,0],[22762124.221770678,5418755.533986335,0,192720,2,0],[22675237.87553265,5633607.064653494,0,192780,0,0],[22585823.341153104,5847844.94523167,0,192840,0,0],[22494019.151387744,6061082.738761145,0,192900,0,0],[22399774.23288022,6273296.555516813,0,192960,0,0],[22303125.95926479,6484486.584518669,0,193020,2,0],[22203931.79505993,6694912.308523967,0,193080,0,0],[22102198.89016763,6904586.965953863,0,193140,2,0],[21997884.75743342,7113457.869573027,0,193200,2,0],[21890858.78395222,7321806.436416709,0,193260,2,0],[21781120.369396288,7529636.9699738715,0,193320,1,0],[21668740.345326148,7736736.300867317,0,193380,0,0],[21553909.23869005,7942789.221777708,0,193440,1,0],[21436599.92678052,8147723.217054465,0,193500,2,0],[21316639.09743588,8351847.581440352,0,193560,1,0],[21194047.8445405,8555126.193633163,0,193620,0,0],[21068999.873139404,8757218.253509605,0,193680,2,0],[20941402.574221212,8958264.258294402,0,193740,1,0],[20811176.433081046,9158361.913294135,0,193800,1,0],[20678402.49554294,9357351.439146148,0,193860,0,0],[20543223.9583769,9555030.66202146,0,193920,2,0],[20405458.594246417,9751547.627960041,0,193980,1,0],[20265081.617288705,9946993.366339618,0,194040,0,0],[20122303.445718925,10141047.94755301,0,194100,2,0],[19976972.075079158,10333844.2150968,0,194160,0,0],[19829123.379700754,10525325.462983018,0,194220,2,0],[19678765.64705462,10715476.363473909,0,194280,2,0],[19525677.647759322,10904536.130795395,0,194340,1,0],[19369961.087211657,11092351.740531756,0,194400,0,0],[19211866.841238536,11278583.211208044,0,194460,2,0],[19051268.68747049,11463341.157715386,0,194520,0,0],[18888202.25959783,11646619.724705676,0,194580,0,0],[18722888.424310092,11828092.387013897,0,194640,2,0],[18555109.43239701,12008015.026093,0,194700,1,0],[18384736.05845762,12186464.306247521,0,194760,0,0],[18212023.152830962,12363156.496846339,0,194820,1,0],[18036993.497583732,12538055.3047052,0,194880,1,0],[17859510.224138882,12711252.64124056,0,194940,2,0],[17679457.651270494,12882855.166951811,0,195000,2,0],[17496744.235168893,13052920.454640139,0,195060,0,0],[17311589.870513417,13221200.90293284,0,195120,2,0],[17124054.052902013,13387629.84531164,0,195180,1,0],[16933983.945445433,13552327.259729203,0,195240,2,0],[16741398.493978718,13715222.332355026,0,195300,1,0],[16546300.58588391,13876306.22731356,0,195360,1,0],[16348844.87283816,14035395.218617506,0,195420,1,0],[16149060.133929802,14192476.368859721,0,195480,2,0],[15946788.749195676,14347633.1397213,0,195540,1,0],[15742042.496463956,14500780.288196016,0,195600,0,0],[15535167.888865273,14651732.746924356,0,195660,1,0],[15326102.709407417,14800397.250077678,0,195720,0,0],[15114939.87733891,14946768.768283086,0,195780,1,0],[14901680.95170485,15090811.389801573,0,195840,2,0],[14686009.997501008,15232681.201515477,0,195900,2,0],[14467826.761153147,15372437.432301123,0,195960,1,0],[14247276.511376575,15509942.968228485,0,196020,1,0],[14024538.548432352,15645064.339037111,0,196080,1,0],[13799625.463687958,15777769.486022757,0,196140,1,0],[13572574.68043097,15908026.512369407,0,196200,1,0],[13343380.525530985,16035777.003430584,0,196260,0,0],[13112244.546423512,16160893.142355893,0,196320,0,0],[12879347.944426429,16283287.075032562,0,196380,2,0],[12644360.769052494,16403064.123579096,0,196440,1,0],[12407176.708525084,16520272.08434825,0,196500,0,0],[12168160.647441618,16634716.439341893,0,196560,1,0],[11927290.553310495,16746353.830307143,0,196620,2,0],[11684283.171080554,16855293.48740794,0,196680,0,0],[11439356.326409372,16961432.36914636,0,196740,2,0],[11192485.143087698,17064739.32982883,0,196800,1,0],[10943568.125429736,17165215.514892284,0,196860,0,0],[10692969.158664359,17262734.679099545,0,196920,1,0],[10440682.707311764,17357207.27943108,0,196980,1,0],[10186609.058132676,17448689.24066808,0,197040,0,0],[9930934.278883854,17537062.293403905,0,197100,2,0],[9673523.788599916,17622381.983796824,0,197160,0,0],[9414399.656773066,17704579.401003957,0,197220,2,0],[9153588.833914207,17783622.47332313,0,197280,1,0],[8890972.088578377,17859535.931713957,0,197340,2,0],[8626570.509475768,17932273.373807844,0,197400,1,0],[8360424.3910462735,18001783.00949402,0,197460,1,0],[8092746.110382531,18067997.305945504,0,197520,0,0],[7823752.595195057,18130825.305283062,0,197580,2,0],[7553297.079799954,18190274.21748651,0,197640,0,0],[7281427.832869844,18246311.56670345,0,197700,1,0],[7008338.074638348,18298838.19839447,0,197760,0,0],[6734116.741244863,18347856.738481466,0,197820,2,0],[6458588.688174405,18393361.590222716,0,197880,0,0],[6181799.758351632,18435286.405815676,0,197940,0,0],[5904174.234857057,18473559.960066054,0,198000,0,0],[5625753.42183708,18508171.404596996,0,198060,0,0],[5346552.873435639,18539057.448895287,0,198120,2,0],[5066299.51082314,18566241.698683158,0,198180,2,0],[4784639.945826808,18589713.12715392,0,198240,2,0],[4501678.565070301,18609461.001820724,0,198300,0,0],[4217800.910539261,18625391.631575864,0,198360,0,0],[3933392.938538802,18637465.1955003,0,198420,2,0],[3648178.983204956,18645668.263463568,0,198480,1,0],[3362009.8362483294,18649972.002106123,0,198540,0,0],[3075330.3458062396,18650353.52255394,0,198600,2,0],[2787985.888797458,18646765.684130535,0,198660,2,0],[2499695.2357284157,18639172.615915403,0,198720,0,0],[2210849.54998134,18627567.6227208,0,198780,1,0],[1921716.6039227403,18611917.711310644,0,198840,0,0],[1632337.428281933,18592211.16950231,0,198900,2,0],[1342604.7372165404,18568381.95170571,0,198960,2,0],[1052208.507465674,18540408.145092037,0,199020,2,0],[761216.0763070157,18508232.67015257,0,199080,2,0],[469697.5726689313,18471836.471940566,0,199140,0,0],[178074.88396905555,18431249.685058367,0,199200,2,0],[-113605.0019960481,18386436.530688528,0,199260,0,0],[-405243.5303955067,18337375.847826116,0,199320,1,0],[-696605.9771740427,18284085.3654787,0,199380,1,0],[-987815.472134609,18226492.711439688,0,199440,1,0],[-1278782.9575353104,18164620.729885798,0,199500,0,0],[-1569263.8150694051,18098469.44390508,0,199560,1,0],[-1859212.5484201694,18028025.643156078,0,199620,2,0],[-2148879.723951304,17953193.55016619,0,199680,0,0],[-2438017.436780206,17873994.67353175,0,199740,0,0],[-2726231.4365462684,17790532.916568365,0,199800,2,0],[-3013766.167612573,17702690.65637712,0,199860,0,0],[-3300551.396671593,17610449.830582157,0,199920,1,0],[-3586335.255996851,17513891.061835933,0,199980,0,0],[-3871044.821059526,17412984.724789057,0,200040,2,0],[-4154791.2998780627,17307685.140737012,0,200100,2,0],[-4437809.182169481,17197836.340504427,0,200160,1,0],[-4719870.99703833,17083528.67198907,0,200220,0,0],[-5000533.063187983,16964878.699670635,0,200280,1,0],[-5279736.911078596,16841915.42839277,0,200340,2,0],[-5557729.639549287,16714456.963728052,0,200400,1,0],[-5834436.248114756,16582554.080861177,0,200460,2,0],[-6109753.63720056,16446175.200170465,0,200520,2,0],[-6383765.889606701,16305278.500727657,0,200580,0,0],[-6656069.809456198,16160029.127861546,0,200640,2,0],[-6926595.973791501,16010430.86622247,0,200700,2,0],[-7195562.349076983,15856318.173950206,0,200760,1,0],[-7462724.888726249,15697819.548313096,0,200820,1,0],[-7727842.531502427,15535026.757088145,0,200880,2,0],[-7990983.264158798,15367866.17672917,0,200940,1,0],[-8252093.623442126,15196367.023338443,0,201000,0,0],[-8510742.86337794,15020757.89264808,0,201060,1,0],[-8766877.765719585,14841050.298212975,0,201120,1,0],[-9020557.012919324,14657200.308261635,0,201180,0,0],[-9271550.336414894,14469315.617426671,0,201240,2,0],[-9519927.208851466,14277353.18066542,0,201300,1,0],[-9765731.989415944,14081220.19255891,0,201360,0,0],[-10008621.06004135,13881189.2817745,0,201420,0,0],[-10248367.106663266,13677404.21151276,0,201480,2,0],[-10485156.931879189,13469695.720719371,0,201540,2,0],[-10719204.688961618,13257858.383193772,0,201600,1,0],[-10950277.533758959,13042060.56818651,0,201660,0,0],[-11178035.713779824,12822592.014595741,0,201720,0,0],[-11402273.580806315,12599652.471908953,0,201780,1,0],[-11623056.260526452,12373147.88528077,0,201840,0,0],[-11840312.905307287,12143153.683373623,0,201900,1,0],[-12053953.35280883,11909699.57437344,0,201960,0,0],[-12263917.884856004,11672879.435928592,0,202020,1,0],[-12470144.969038036,11432740.129468253,0,202080,0,0],[-12672552.906265263,11189358.530464726,0,202140,2,0],[-12871204.859820308,10942645.956482526,0,202200,2,0],[-13066241.76408547,10692395.26471533,0,202260,1,0],[-13257505.692059543,10438807.068326931,0,202320,2,0],[-13444905.468841605,10181973.425092919,0,202380,2,0],[-13628493.073567266,9921788.28697113,0,202440,2,0],[-13808213.681782492,9658335.592207016,0,202500,0,0],[-13983787.732129022,9391987.546565218,0,202560,2,0],[-14155165.946901854,9122835.410801424,0,202620,1,0],[-14322378.943898322,8850770.63803104,0,202680,0,0],[-14485208.115341084,8576206.250186788,0,202740,0,0],[-14643486.05437562,8299379.154282107,0,202800,2,0],[-14797368.162593272,8020045.404498005,0,202860,0,0],[-14946785.349486742,7738302.101385652,0,202920,1,0],[-15091616.894500697,7454388.0187610155,0,202980,2,0],[-15232005.414097168,7168078.511503523,0,203040,1,0],[-15367879.738189412,6879443.158916426,0,203100,0,0],[-15499054.210000003,6588890.976682464,0,203160,0,0],[-15625430.29996642,6296715.786998526,0,203220,1,0],[-15747060.682582332,6002806.731153994,0,203280,1,0],[-15863960.801516201,5707084.6390551245,0,203340,0,0],[-15976040.41716438,5409837.554719661,0,203400,1,0],[-16083281.445807679,5111135.970660255,0,203460,1,0],[-16185727.522918157,4810901.563420375,0,203520,0,0],[-16283291.201611895,4509419.543875208,0,203580,1,0],[-16375955.27218483,4206745.176735964,0,203640,1,0],[-16463757.932165416,3902835.5084493505,0,203700,2,0],[-16546729.089576975,3597598.6735168244,0,203760,2,0],[-16624913.99190809,3290936.846762859,0,203820,2,0],[-16698272.595155142,2982968.1771532437,0,203880,0,0],[-16766731.582860159,2674122.456584328,0,203940,1,0],[-16830229.897481572,2364668.831173822,0,204000,0,0],[-16888768.75993646,2054700.1525146645,0,204060,1,0],[-16942359.77763721,1744301.2904708225,0,204120,1,0],[-16991030.019304417,1433395.62986066,0,204180,1,0],[-17034793.954385113,1122091.591013123,0,204240,2,0],[-17073649.512799952,810267.3654273596,0,204300,1,0],[-17107641.66828781,498035.7487732409,0,204360,1,0],[-17136721.016996212,185676.9049150046,0,204420,1,0],[-17160915.289402243,-126746.70661735591,0,204480,0,0],[-17180225.738128364,-438956.71782823396,0,204540,2,0],[-17194680.669540703,-751034.1635047827,0,204600,2,0],[-17204321.84793829,-1063280.129118169,0,204660,2,0],[-17209135.944904085,-1375580.5178907842,0,204720,1,0],[-17209152.253114175,-1687669.9826888219,0,204780,0,0],[-17204408.17846792,-1999108.6382214478,0,204840,1,0],[-17194901.201998193,-2309826.425998147,0,204900,0,0],[-17180686.55397974,-2619713.6965124095,0,204960,0,0],[-17161796.396565698,-2928532.9251015945,0,205020,1,0],[-17138238.562172007,-3236375.90521233,0,205080,1,0],[-17110060.85212242,-3543344.342072478,0,205140,0,0],[-17077288.552202556,-3849177.4089050107,0,205200,2,0],[-17039956.97798446,-4153993.319995312,0,205260,0,0],[-16998076.273308758,-4457692.843673132,0,205320,1,0],[-16951743.5416228,-4760037.812148544,0,205380,2,0],[-16900916.3175544,-5061321.784170772,0,205440,1,0],[-16845651.547730796,-5361442.295381479,0,205500,1,0],[-16786011.117063094,-5660170.488719943,0,205560,2,0],[-16721995.739769446,-5957638.656874798,0,205620,0,0],[-16653686.928004354,-6253550.556827441,0,205680,1,0],[-16581175.745633258,-6547705.4856646815,0,205740,1,0],[-16504471.711902788,-6840195.029164187,0,205800,0,0],[-16423658.667399082,-7130791.684439475,0,205860,0,0],[-16338836.898650514,-7419259.082042149,0,205920,2,0],[-16249961.182251344,-7705898.544319217,0,205980,2,0],[-16156958.330386914,-7990978.083911931,0,206040,1,0],[-16059958.059780998,-8274253.248985618,0,206100,1,0],[-15959035.63190433,-8555534.093495514,0,206160,1,0],[-15854255.087395905,-8834725.980298318,0,206220,2,0],[-15745605.530680258,-9111986.126408976,0,206280,2,0],[-15633076.926382583,-9387399.841823567,0,206340,0,0],[-15516849.78890108,-9660599.535649145,0,206400,1,0],[-15397031.690178225,-9931356.446276702,0,206460,2,0],[-15273566.816660797,-10199949.902247077,0,206520,0,0],[-15146560.094401034,-10466194.496166715,0,206580,2,0],[-15016069.77877636,-10730029.49426467,0,206640,0,0],[-14882139.656553363,-10991409.489147957,0,206700,2,0],[-14744843.161293512,-11250320.23371882,0,206760,2,0],[-14604059.835647777,-11507000.982958214,0,206820,2,0],[-14459855.927962998,-11761433.459624097,0,206880,1,0],[-14312335.812466798,-12013401.940420726,0,206940,0,0],[-14161771.27477443,-12262578.368667664,0,207000,0,0],[-14008304.649902977,-12508774.0536394,0,207060,0,0],[-13851999.08843981,-12751974.084473858,0,207120,0,0],[-13692895.83956548,-12992103.725485994,0,207180,1,0],[-13531000.950815959,-13229333.494155804,0,207240,2,0],[-13366109.520620678,-13463891.575409282,0,207300,1,0],[-13198314.29350849,-13695767.031347143,0,207360,0,0],[-13027874.905040566,-13924662.80252161,0,207420,2,0],[-12854746.831359604,-14150663.347308407,0,207480,0,0],[-12678964.344688265,-14373743.417927708,0,207540,2,0],[-12500606.039189821,-14593918.848778758,0,207600,1,0],[-12319591.37302826,-14811275.135324175,0,207660,2,0],[-12136004.486281,-15025782.308817767,0,207720,0,0],[-11950006.53204826,-15237321.55411814,0,207780,0,0],[-11761870.546524515,-15445557.740551805,0,207840,1,0],[-11571557.54281531,-15650642.413442375,0,207900,1,0],[-11378980.703482365,-15852676.261718111,0,207960,1,0],[-11184221.526081678,-16051669.397851352,0,208020,1,0],[-10987311.40103338,-16247557.156618658,0,208080,0,0],[-10788445.418729044,-16440245.756683635,0,208140,1,0],[-10587668.904088741,-16629710.269340292,0,208200,2,0],[-10384779.893803217,-16816187.51475754,0,208260,1,0],[-10179821.061915262,-16999636.34280377,0,208320,1,0],[-9972986.75113373,-17179960.68532454,0,208380,1,0],[-9764338.071425406,-17357153.079531986,0,208440,2,0],[-9553767.788298627,-17531297.110115048,0,208500,0,0],[-9341476.960502801,-17702278.675572082,0,208560,2,0],[-9127510.597459156,-17870083.800466932,0,208620,0,0],[-8911934.951912204,-18034737.519940432,0,208680,2,0],[-8694774.580321902,-18196193.489239313,0,208740,2,0],[-8475801.508235049,-18354689.092750758,0,208800,2,0],[-8255060.994970894,-18510196.208180014,0,208860,0,0],[-8032926.42238188,-18662524.704591177,0,208920,0,0],[-7809696.313479457,-18811447.825049087,0,208980,2,0],[-7585129.261366513,-18957195.610662214,0,209040,1,0],[-7359139.836351735,-19099844.45957591,0,209100,1,0],[-7131934.277905806,-19239265.033766303,0,209160,1,0],[-6903529.886831318,-19375521.3075805,0,209220,1,0],[-6673986.803304777,-19508559.13149516,0,209280,0,0],[-6443500.276366905,-19638331.2197128,0,209340,1,0],[-6212144.683090225,-19764820.78478055,0,209400,2,0],[-5979600.891643041,-19888214.014973287,0,209460,0,0],[-5746127.459719465,-20008389.714531895,0,209520,0,0],[-5512055.846973616,-20125254.02482504,0,209580,1,0],[-5277264.83159718,-20238856.1354046,0,209640,1,0],[-5041633.751387379,-20349267.67189917,0,209700,1,0],[-4805247.371056933,-20456518.37385503,0,209760,0,0],[-4568265.41909806,-20560523.98840183,0,209820,2,0],[-4330575.163251332,-20661387.036370758,0,209880,0,0],[-4092248.3613684913,-20759103.741809543,0,209940,2,0],[-3853265.9712867914,-20853652.097703066,0,210000,1,0],[-3613569.7508332743,-20945140.228743922,0,210060,2,0],[-3373145.029861459,-21033557.463988267,0,210120,1,0],[-3132060.7120158505,-21118923.777608626,0,210180,1,0],[-2890506.979707557,-21201175.76039388,0,210240,1,0],[-2648536.9888324076,-21280319.34297234,0,210300,0,0],[-2406341.1558712358,-21356302.47745783,0,210360,2,0],[-2163809.3482869365,-21429210.374541994,0,210420,0,0],[-1920967.7220384025,-21499032.481432594,0,210480,1,0],[-1678010.7101819206,-21565745.34284578,0,210540,2,0],[-1434651.1588607877,-21629429.247832336,0,210600,0,0],[-1191086.3794215985,-21690099.157194197,0,210660,1,0],[-947528.8011160753,-21747649.616046205,0,210720,2,0],[-703664.5666969632,-21802237.652201466,0,210780,1,0],[-459536.740010329,-21853847.35949186,0,210840,0,0],[-215520.33061641967,-21902439.83360877,0,210900,2,0],[28538.81312251033,-21948005.10013038,0,210960,1,0],[272750.0455520981,-21990637.640304696,0,211020,1,0],[516933.3698936072,-22030304.37492622,0,211080,1,0],[761068.2978940156,-22067020.6396543,0,211140,1,0],[1005068.6093115915,-22100789.596971314,0,211200,2,0],[1249136.3159609411,-22131671.544483233,0,211260,1,0],[1493204.9501511606,-22159641.991065282,0,211320,2,0],[1737282.1250960217,-22184724.712111276,0,211380,2,0],[1981481.631902104,-22206950.607934017,0,211440,0,0],[2225408.5242374768,-22226322.887508024,0,211500,1,0],[2468879.933739066,-22242807.745678753,0,211560,1,0],[2712017.5641285623,-22256444.8682468,0,211620,2,0],[2955003.76276855,-22267259.32611031,0,211680,1,0],[3197801.574090512,-22275255.854258187,0,211740,0,0],[3440007.2990975366,-22280438.47060649,0,211800,2,0],[3681792.5644663386,-22282855.127692197,0,211860,0,0],[3923106.992248535,-22282480.05765884,0,211920,0,0],[4163591.7742828056,-22279328.427407544,0,211980,2,0],[4403542.208862785,-22273476.909298368,0,212040,0,0],[4642971.276262232,-22264856.890719607,0,212100,2,0],[4881826.704223923,-22253524.97903635,0,212160,0,0],[5120097.546369489,-22239512.686293937,0,212220,0,0],[5357370.896672237,-22222820.971054696,0,212280,2,0],[5594022.57335844,-22203453.11062023,0,212340,1,0],[5830168.125911198,-22181444.29629514,0,212400,2,0],[6065807.84057607,-22156757.957157753,0,212460,0,0],[6300726.16797921,-22129450.926468752,0,212520,1,0],[6534722.980824985,-22099557.774599448,0,212580,1,0],[6767947.664100781,-22067067.50010411,0,212640,1,0],[7000403.973438368,-22032031.59760848,0,212700,1,0],[7232036.860301775,-21994404.576901905,0,212760,0,0],[7462659.931613795,-21954274.337496754,0,212820,0,0],[7692058.029115341,-21911687.851796027,0,212880,2,0],[7920581.1651212415,-21866573.7336241,0,212940,1,0],[8148369.650798443,-21818954.89931384,0,213000,2,0],[8375429.633290768,-21768810.89614861,0,213060,2,0],[8601864.691310411,-21716111.371386554,0,213120,2,0],[8827699.20754737,-21660880.492436968,0,213180,1,0],[9052727.197705645,-21603208.591266945,0,213240,1,0],[9276735.727451207,-21543090.05051062,0,213300,0,0],[9499528.486867107,-21480640.32244463,0,213360,1,0],[9721099.112383123,-21415871.89412301,0,213420,1,0],[9941613.207073623,-21348721.68855477,0,213480,0,0],[10160840.172515916,-21279291.44806015,0,213540,1,0],[10378796.149444083,-21207579.54653654,0,213600,1,0],[10595614.886266371,-21133571.773101907,0,213660,0,0],[10811127.009562952,-21057317.731167212,0,213720,0,0],[11025121.495752873,-20978903.013358504,0,213780,2,0],[11237931.543433625,-20898222.760308437,0,213840,1,0],[11449681.283826288,-20815227.839734297,0,213900,0,0],[11660068.47130971,-20730084.411021456,0,213960,1,0],[11869037.08901691,-20642802.505247276,0,214020,0,0],[12076570.104623735,-20553384.538831163,0,214080,2,0],[12282830.297535473,-20461788.707468964,0,214140,2,0],[12488133.018342044,-20367913.971176643,0,214200,1,0],[12692260.200789832,-20271783.414031494,0,214260,1,0],[12895077.754884496,-20173558.830557924,0,214320,0,0],[13096368.25105039,-20073271.99586009,0,214380,1,0],[13296136.590908188,-19970988.989177555,0,214440,2,0],[13494693.069938185,-19866546.786765408,0,214500,2,0],[13692159.414851362,-19759882.203354172,0,214560,2,0],[13888529.412595054,-19650990.58628527,0,214620,0,0],[14083487.407353945,-19540106.802189685,0,214680,2,0],[14276971.04004589,-19427196.390103575,0,214740,0,0],[14469019.607133662,-19312286.518881552,0,214800,0,0],[14659249.305268478,-19195605.83845516,0,214860,2,0],[14848014.390780983,-19076949.36950944,0,214920,2,0],[15035575.556739764,-18956195.43972776,0,214980,1,0],[15221743.820255626,-18833384.86678443,0,215040,0,0],[15406239.049319483,-18708797.366413392,0,215100,2,0],[15589178.634914609,-18582322.283439036,0,215160,2,0],[15770848.815399088,-18453779.809407197,0,215220,1,0],[15951060.285118278,-18323255.758112602,0,215280,1,0],[16129710.532737117,-18190899.709578756,0,215340,0,0],[16306590.730669422,-18056851.902246684,0,215400,1,0],[16481678.444882143,-17921098.288857047,0,215460,0,0],[16655023.766477397,-17783703.768541977,0,215520,2,0],[16826685.421918947,-17644524.44728388,0,215580,0,0],[16996718.31468212,-17503592.376825113,0,215640,0,0],[17164762.744819947,-17361176.07401293,0,215700,2,0],[17331130.947898466,-17217046.597076163,0,215760,0,0],[17495791.086249523,-17071211.061956678,0,215820,1,0],[17658585.376139577,-16923832.587076914,0,215880,1,0],[17819674.6285391,-16774771.637491636,0,215940,1,0],[17978985.219476502,-16624097.660315493,0,216000,1,0],[18136590.43465518,-16471781.27393691,0,216060,1,0],[18292366.349008206,-16317856.35167072,0,216120,1,0],[18446396.303497925,-16162366.055865077,0,216180,2,0],[18598742.783008054,-16005146.39301779,0,216240,1,0],[18749419.852247685,-15846245.8407601,0,216300,0,0],[18898138.250281326,-15685939.73240012,0,216360,2,0],[19045058.349262122,-15524113.543657314,0,216420,2,0],[19190360.02239203,-15360536.114752261,0,216480,0,0],[19333783.30464448,-15195450.818698574,0,216540,0,0],[19475118.36508627,-15029195.438398745,0,216600,1,0],[19614488.32187899,-14861621.98310039,0,216660,2,0],[19752051.023765296,-14692456.205259684,0,216720,1,0],[19887832.81359261,-14521753.553408237,0,216780,1,0],[20021718.349598046,-14349678.00543836,0,216840,0,0],[20153573.10700005,-14176348.684549293,0,216900,0,0],[20283252.695867475,-14001943.1308099,0,216960,2,0],[20410994.921497885,-13826182.246045364,0,217020,1,0],[20536917.30428436,-13648969.532400962,0,217080,1,0],[20660853.382786885,-13470436.980387095,0,217140,0,0],[20782697.407037497,-13290787.443048093,0,217200,2,0],[20902581.55101229,-13109843.286828255,0,217260,0,0],[21020450.028782614,-12927665.293789027,0,217320,1,0],[21136197.233269606,-12744392.93296702,0,217380,2,0],[21250080.48431455,-12559756.572575528,0,217440,2,0],[21362083.343358368,-12373603.695234034,0,217500,1,0],[21472122.63025079,-12186123.876599433,0,217560,2,0],[21580254.305930857,-11997319.085025517,0,217620,1,0],[21686390.529679134,-11807234.662132887,0,217680,0,0],[21790369.530478436,-11616176.089902842,0,217740,0,0],[21892088.581989005,-11424318.9700377,0,217800,1,0],[21991675.49156019,-11231538.809446936,0,217860,0,0],[22089061.3570951,-11037859.574373795,0,217920,2,0],[22184361.213088904,-10843096.918267677,0,217980,0,0],[22277498.94213846,-10647325.244630136,0,218040,2,0],[22368550.486525487,-10450531.592815213,0,218100,1,0],[22457559.036088366,-10252577.59098305,0,218160,1,0],[22544395.883906577,-10053650.56307154,0,218220,0,0],[22629027.537547845,-9853931.11032746,0,218280,2,0],[22711492.627356034,-9653251.986183701,0,218340,1,0],[22791845.69699933,-9451504.817380037,0,218400,2,0],[22870091.55934164,-9248672.548041578,0,218460,1,0],[22946234.593473345,-9044784.889856955,0,218520,0,0],[23020115.34701607,-8840235.096482687,0,218580,1,0],[23091711.43385236,-8634966.294483611,0,218640,1,0],[23161096.55338249,-8428904.272878082,0,218700,2,0],[23228347.102990754,-8221845.70068695,0,218760,0,0],[23293356.145165123,-8013991.791848341,0,218820,2,0],[23356126.22590264,-7805374.633913806,0,218880,2,0],[23416771.901338525,-7595673.073760662,0,218940,0,0],[23475137.64468583,-7385229.071018019,0,219000,2,0],[23531255.716425262,-7174085.0774225,0,219060,0,0],[23585099.24973319,-6962235.441760472,0,219120,0,0],[23636581.21577507,-6750097.049054027,0,219180,2,0],[23685783.764870856,-6537259.669898982,0,219240,0,0],[23732691.66864866,-6323827.158613652,0,219300,1,0],[23777284.33512018,-6109951.920478983,0,219360,0,0],[23819499.723979365,-5895646.029381241,0,219420,2,0],[23859431.88826739,-5680762.260703881,0,219480,0,0],[23897017.023934893,-5465339.836014876,0,219540,0,0],[23932231.86519051,-5249730.089182894,0,219600,2,0],[23965132.656108543,-5033623.738220981,0,219660,2,0],[23995703.016154435,-4816647.992411945,0,219720,1,0],[24023956.12124869,-4599036.199899003,0,219780,1,0],[24049880.508458707,-4380991.995032781,0,219840,2,0],[24073439.247104015,-4162313.516423265,0,219900,2,0],[24094673.875000335,-3942867.7289874014,0,219960,0,0],[24113516.79901657,-3723020.221993428,0,220020,1,0],[24129995.251889125,-3503027.4363548975,0,220080,1,0],[24144058.97014669,-3282640.6483361907,0,220140,0,0],[24155719.751791283,-3062137.6381741795,0,220200,0,0],[24164963.740522873,-2841693.7209374392,0,220260,2,0],[24171821.0218484,-2620949.676112791,0,220320,1,0],[24176244.772652194,-2399760.2327360017,0,220380,1,0],[24178278.74275898,-2178356.4628068926,0,220440,1,0],[24177857.526801094,-1956713.9025662653,0,220500,0,0],[24175007.50247134,-1735061.0199767998,0,220560,1,0],[24169751.22953663,-1513404.4237257896,0,220620,0,0],[24162024.905353278,-1291794.9399881864,0,220680,0,0],[24151880.440976672,-1070386.6673186116,0,220740,1,0],[24139281.460839212,-849062.9186285243,0,220800,1,0],[24124256.60415643,-627661.7309348176,0,220860,2,0],[24106731.28145887,-405995.7443786786,0,220920,1,0],[24086717.896489106,-184122.454472064,0,220980,2,0],[24064218.752149906,37949.304080307425,0,221040,2,0],[24039207.73926764,260378.8551740088,0,221100,2,0],[24011670.517593477,483131.9479488869,0,221160,2,0],[23981609.92080597,706198.6585837911,0,221220,1,0],[23949014.233591553,929376.5873265708,0,221280,0,0],[23913950.010418806,1152251.3862207304,0,221340,1,0],[23876438.699655894,1374865.5035855416,0,221400,1,0],[23836403.30159331,1597301.8703732437,0,221460,2,0],[23793819.709241543,1819765.6229339363,0,221520,0,0],[23748749.81042983,2042035.614607155,0,221580,0,0],[23701218.470646005,2263747.451385417,0,221640,0,0],[23651233.339730084,2484846.2617243445,0,221700,1,0],[23598798.931678776,2705516.6643306655,0,221760,0,0],[23543842.402656354,2925717.6547886403,0,221820,1,0],[23486413.823130094,3145422.4039321574,0,221880,1,0],[23426476.990981568,3364807.517627642,0,221940,1,0],[23363984.06004661,3583808.9096689825,0,222000,2,0],[23298886.468160737,3802597.7003806722,0,222060,0,0],[23231282.28312322,4020987.35350036,0,222120,2,0],[23161111.328048337,4238931.864807097,0,222180,2,0],[23088277.21185368,4456736.201227355,0,222240,2,0],[23012777.75774202,4674409.617870419,0,222300,0,0],[22934734.138761822,4891554.04754809,0,222360,0,0],[22854270.59948057,5107802.970956178,0,222420,0,0],[22771398.738139972,5323149.6448782245,0,222480,0,0],[22686072.67689446,5537572.863013801,0,222540,1,0],[22598263.062807553,5751199.260356224,0,222600,0,0],[22507978.908457726,5964019.39966332,0,222660,2,0],[22415129.829917405,6176163.899175292,0,222720,2,0],[22319559.01246635,6387938.311105704,0,222780,2,0],[22221298.20774016,6599285.08125373,0,222840,2,0],[22120317.951685112,6810200.411940213,0,222900,1,0],[22016693.97052976,7020497.980046264,0,222960,1,0],[21910503.567398567,7229990.704664597,0,223020,2,0],[21801673.527593892,7438785.327323898,0,223080,2,0],[21690136.189717084,7647010.456292832,0,223140,0,0],[21576022.071618494,7854353.100564601,0,223200,1,0],[21459447.029669445,8060594.292934707,0,223260,1,0],[21340312.70526284,8265878.9257187005,0,223320,2,0],[21218529.043382306,8470349.445778813,0,223380,1,0],[21094098.728361968,8673939.803427681,0,223440,2,0],[20967036.317964856,8876635.829128295,0,223500,0,0],[20837413.60637312,9078251.163799444,0,223560,1,0],[20705349.767914414,9278595.578187676,0,223620,0,0],[20570846.78115102,9477654.187028665,0,223680,2,0],[20433792.278145082,9675556.137093427,0,223740,0,0],[20294194.55147514,9872236.974943882,0,223800,1,0],[20152170.874920025,10067557.190850513,0,223860,1,0],[20007627.12010575,10261601.402018944,0,223920,1,0],[19860535.63487809,10454361.380040769,0,223980,1,0],[19710943.886274498,10645787.087120714,0,224040,1,0],[19558839.60302563,10835851.157315034,0,224100,1,0],[19404218.602739483,11024530.445359632,0,224160,2,0],[19246981.874084413,11211921.881900357,0,224220,1,0],[19087125.109322883,11397999.583814826,0,224280,1,0],[18924767.684223797,11582599.527461324,0,224340,1,0],[18759936.55425058,11765663.683567202,0,224400,1,0],[18592620.937620748,11947159.236962937,0,224460,0,0],[18422972.0284079,12126945.601392675,0,224520,0,0],[18251086.296068083,12304859.095518563,0,224580,0,0],[18076995.419757072,12480841.155441958,0,224640,0,0],[17900731.790158562,12654890.89698222,0,224700,2,0],[17722013.950871374,12827216.284338286,0,224760,2,0],[17540612.29403416,12998050.152356746,0,224820,1,0],[17356658.483100876,13167186.543902457,0,224880,1,0],[17170284.789695937,13334500.05532836,0,224940,2,0],[16981406.424633745,13500087.40602555,0,225000,0,0],[16790109.564668044,13663760.323704451,0,225060,2,0],[16596455.2458727,13825506.837004796,0,225120,2,0],[16400147.405366689,13985523.805626052,0,225180,0,0],[16201521.918422991,14143525.650829518,0,225240,0,0],[16000820.282824332,14299257.246783227,0,225300,0,0],[15798086.227516593,14452699.107128091,0,225360,1,0],[15593184.511820616,14603931.486103678,0,225420,2,0],[15385827.625902653,14753113.330298083,0,225480,0,0],[15176208.027667668,14900094.519647678,0,225540,2,0],[14964313.371318076,15044884.777996792,0,225600,1,0],[14750022.139704762,15187496.200101193,0,225660,1,0],[14533518.66260708,15327802.698373144,0,225720,1,0],[14314790.006815549,15465781.8899304,0,225780,2,0],[14093708.047726799,15601493.919195345,0,225840,1,0],[13870305.836775526,15734898.850062883,0,225900,0,0],[13644901.58212975,15865737.155438736,0,225960,2,0],[13417347.980235413,15994114.176800683,0,226020,1,0],[13187534.320090435,16120042.898588737,0,226080,2,0],[12955458.228312481,16243501.46115827,0,226140,0,0],[12721327.142060468,16364359.02516237,0,226200,0,0],[12485454.935012396,16482431.715993071,0,226260,1,0],[12247728.943232987,16597729.098041886,0,226320,2,0],[12007816.810347103,16710406.364578677,0,226380,2,0],[11765623.450145062,16820477.424408272,0,226440,1,0],[11521293.876817992,16927831.29301719,0,226500,0,0],[11275212.55617616,17032287.43355,0,226560,0,0],[11027563.090825336,17133720.56795556,0,226620,2,0],[10778046.646066278,17232256.816173535,0,226680,2,0],[10526346.392675087,17327968.458640616,0,226740,2,0],[10272500.578744976,17420842.01353676,0,226800,0,0],[10016871.371743944,17510692.56057634,0,226860,0,0],[9759849.154616099,17597360.00540483,0,226920,0,0],[9501424.13592342,17680814.498984758,0,226980,0,0],[9241687.591014886,17761015.490849603,0,227040,2,0],[8980259.973340573,17838039.801933214,0,227100,1,0],[8717067.409508375,17911910.419510137,0,227160,2,0],[8452108.39687467,17982584.4539496,0,227220,0,0],[8185605.100299924,18049960.222664326,0,227280,1,0],[7917776.3788266275,18113960.07324811,0,227340,1,0],[7648455.448103612,18174591.98184946,0,227400,1,0],[7377719.721061651,18231836.366110504,0,227460,2,0],[7105415.398225313,18285682.635215662,0,227520,0,0],[6831762.7866193345,18336032.178589012,0,227580,2,0],[6556785.956307595,18382886.369018625,0,227640,0,0],[6280565.173429021,18426177.756286044,0,227700,0,0],[6003474.211645378,18465858.777230095,0,227760,2,0],[5725201.5664549135,18501900.894310795,0,227820,2,0],[5445431.594209839,18534329.856194146,0,227880,2,0],[5164230.321953,18563116.30557252,0,227940,1,0],[4881822.09683301,18588184.82393172,0,228000,1,0],[4598405.079547025,18609498.278693903,0,228060,0,0],[4314253.827049947,18627031.96094304,0,228120,0,0],[4029559.710495138,18640690.77803727,0,228180,2,0],[3744046.808695837,18650514.486158144,0,228240,0,0],[3457744.3256285843,18656444.11644513,0,228300,0,0],[3171073.9942031573,18658443.22782311,0,228360,1,0],[2883923.66231849,18656492.495788828,0,228420,2,0],[2595971.0060976436,18650570.165790614,0,228480,0,0],[2307465.8630562415,18640639.290228035,0,228540,2,0],[2018450.19691236,18626663.1420251,0,228600,1,0],[1728819.5147366393,18608616.901352152,0,228660,2,0],[1438618.4008291794,18586476.153826986,0,228720,0,0],[1148115.7290368497,18560201.92162202,0,228780,1,0],[857527.9157677123,18529810.458208263,0,228840,1,0],[566747.7135782596,18495255.03757222,0,228900,1,0],[275839.6390842035,18456511.053095,0,228960,0,0],[-14944.84189720985,18413578.319678303,0,229020,0,0],[-305363.8720864365,18366487.52230518,0,229080,0,0],[-595373.5058452066,18315180.61974494,0,229140,2,0],[-885255.6836036558,18259603.56008674,0,229200,1,0],[-1175085.428846204,18199713.947299793,0,229260,1,0],[-1464634.3095420124,18135518.75167371,0,229320,2,0],[-1754029.5239864008,18066952.89823031,0,229380,2,0],[-2043342.0297365193,17993968.988794126,0,229440,1,0],[-2332340.219877012,17916602.13835467,0,229500,1,0],[-2620761.8156803343,17834876.561788447,0,229560,2,0],[-2908724.389761708,17748720.350152165,0,229620,1,0],[-3196143.92073882,17658125.742775783,0,229680,0,0],[-3482575.4622457586,17563230.2552316,0,229740,0,0],[-3767809.4412174625,17464052.213639934,0,229800,1,0],[-4051936.845605863,17360519.71098236,0,229860,2,0],[-4335194.843153277,17252545.457720343,0,229920,0,0],[-4617345.176777254,17140171.297511436,0,229980,1,0],[-4898148.6995729925,17023457.821069203,0,230040,1,0],[-5177694.873056604,16902363.186733197,0,230100,2,0],[-5456053.2162850695,16776797.78707559,0,230160,1,0],[-5733137.474028244,16646773.735531634,0,230220,1,0],[-6008738.820891391,16512377.989946166,0,230280,0,0],[-6282577.919779065,16373694.240411485,0,230340,2,0],[-6554740.527042299,16230641.540375553,0,230400,1,0],[-6825309.718193862,16083178.376144972,0,230460,2,0],[-7094201.853424664,15931279.657013854,0,230520,0,0],[-7361181.46394341,15775092.376927627,0,230580,1,0],[-7625993.790987098,15614708.829529867,0,230640,0,0],[-7888570.129420522,15450136.019921415,0,230700,2,0],[-8148979.282230294,15281312.595324468,0,230760,0,0],[-8407135.580559814,15108275.563189767,0,230820,0,0],[-8662658.22180691,14931249.519664524,0,230880,1,0],[-8915626.189756328,14750164.612592064,0,230940,0,0],[-9165935.03492926,14565055.223140731,0,231000,2,0],[-9413679.153834091,14375836.36993851,0,231060,2,0],[-9659040.201952351,14182314.955648538,0,231120,1,0],[-9901799.182213694,13984678.750184951,0,231180,1,0],[-10141726.47249431,13783045.353058496,0,231240,2,0],[-10378901.163179215,13577356.591446685,0,231300,1,0],[-10613217.146139173,13367622.790168637,0,231360,2,0],[-10844602.098866198,13153928.54385701,0,231420,1,0],[-11072987.317897374,12936291.29321008,0,231480,1,0],[-11298140.851887861,12714907.348000474,0,231540,0,0],[-11519881.264971107,12489935.709682168,0,231600,1,0],[-11738128.94890803,12261436.607524278,0,231660,1,0],[-11952927.78577941,12029346.98069146,0,231720,1,0],[-12164202.906726003,11793725.341626517,0,231780,2,0],[-12372019.469351174,11554477.226638107,0,231840,1,0],[-12576297.703644374,11311670.63653743,0,231900,1,0],[-12776839.748573344,11065518.676463034,0,231960,2,0],[-12973688.918745972,10815921.634718962,0,232020,1,0],[-13166794.632140288,10562978.73656529,0,232080,0,0],[-13355868.559732527,10307034.13863505,0,232140,2,0],[-13540940.56657204,10048012.07888351,0,232200,0,0],[-13721960.333654914,9785972.66336221,0,232260,0,0],[-13898668.537480423,9521298.108151473,0,232320,0,0],[-14071013.853911543,9254072.396242537,0,232380,0,0],[-14238937.732338673,8984358.328807715,0,232440,2,0],[-14402565.193203056,8711956.068236135,0,232500,2,0],[-14562060.614439076,8436613.282784244,0,232560,2,0],[-14717355.111553859,8158410.945670125,0,232620,2,0],[-14868386.703951176,7877446.355680195,0,232680,1,0],[-15015010.467521856,7593946.004601211,0,232740,0,0],[-15157032.087678257,7308331.971498976,0,232800,1,0],[-15294425.927514814,7020670.607288892,0,232860,1,0],[-15427194.52844639,6730899.130620128,0,232920,1,0],[-15555332.87175379,6439086.36665428,0,232980,1,0],[-15678786.233907523,6145355.5257092,0,233040,0,0],[-15797465.158743154,5849942.123206127,0,233100,1,0],[-15911348.775507536,5552936.504882363,0,233160,1,0],[-16020450.355202373,5254258.348145823,0,233220,2,0],[-16124809.40658247,4953852.452376134,0,233280,2,0],[-16224476.120935641,4651607.233181055,0,233340,2,0],[-16319397.497234056,4347630.106581125,0,233400,2,0],[-16409575.364507698,4042032.5670761145,0,233460,0,0],[-16494863.561829304,3735219.2169435318,0,233520,1,0],[-16575217.343142161,3427481.1440684497,0,233580,1,0],[-16650667.953725414,3118720.8731224313,0,233640,0,0],[-16721164.763176274,2809224.617087797,0,233700,0,0],[-16786658.622363888,2499254.7124109576,0,233760,1,0],[-16847187.649086572,2188725.10520402,0,233820,2,0],[-16902821.607255626,1877363.5083582168,0,233880,1,0],[-16953553.900512632,1565282.4981251417,0,233940,1,0],[-16999356.59954414,1252743.7154026036,0,234000,2,0],[-17040263.637468137,939676.2281243787,0,234060,0,0],[-17076253.609163575,626342.7206584299,0,234120,2,0],[-17107324.27521404,312800.6057606129,0,234180,0,0],[-17133497.637222793,-799.1511721930668,0,234240,0,0],[-17154755.028570294,-314064.722835898,0,234300,2,0],[-17171140.323541377,-627224.0826995247,0,234360,0,0],[-17182675.433792304,-940223.5794404369,0,234420,1,0],[-17189355.031890202,-1252765.3694764765,0,234480,0,0],[-17191214.380503234,-1564773.8380804572,0,234540,1,0],[-17188277.311564554,-1876169.1056616532,0,234600,0,0],[-17180587.369533524,-2186856.3739304934,0,234660,0,0],[-17168151.962260332,-2496591.1573653766,0,234720,2,0],[-17151001.08857541,-2805643.2488087025,0,234780,1,0],[-17129142.345477395,-3114091.52901895,0,234840,1,0],[-17102639.174651824,-3421705.2322452627,0,234900,2,0],[-17071480.89297699,-3728573.523130302,0,234960,2,0],[-17035701.217109088,-4034801.767098182,0,235020,1,0],[-16995346.939765826,-4340123.448187432,0,235080,2,0],[-16950441.877208408,-4644462.717159057,0,235140,2,0],[-16900992.61797847,-4947938.518944333,0,235200,0,0],[-16847125.281371415,-5250116.530475039,0,235260,0,0],[-16788912.0005397,-5550567.036900532,0,235320,1,0],[-16726380.478259452,-5849403.962582839,0,235380,2,0],[-16659486.021536281,-6146908.08447426,0,235440,1,0],[-16588291.275203332,-6443007.481845485,0,235500,0,0],[-16512915.472306103,-6737282.978982767,0,235560,1,0],[-16433404.89388496,-7029680.591609538,0,235620,1,0],[-16349768.5352247,-7320320.1546183415,0,235680,0,0],[-16262100.457843145,-7608960.055929725,0,235740,0,0],[-16170513.31337651,-7895377.713787876,0,235800,1,0],[-16074991.794179335,-8179658.8843755135,0,235860,0,0],[-15975606.492793184,-8461795.701600185,0,235920,2,0],[-15872324.463350719,-8741864.578682477,0,235980,2,0],[-15765097.054976039,-9020163.49819269,0,236040,0,0],[-15654088.568161724,-9296298.478685688,0,236100,1,0],[-15539440.114417568,-9570053.394289074,0,236160,2,0],[-15421045.480151514,-9841722.652644768,0,236220,2,0],[-15298884.632186115,-10111428.827637445,0,236280,0,0],[-15173166.47674953,-10378754.711580817,0,236340,0,0],[-15044112.249559997,-10643366.70699493,0,236400,1,0],[-14911682.909422832,-10905376.963032257,0,236460,2,0],[-14775764.869779678,-11165085.158647014,0,236520,2,0],[-14636348.00010209,-11422574.110021904,0,236580,0,0],[-14493655.19591455,-11677485.38721137,0,236640,0,0],[-14347896.84654396,-11929508.141541336,0,236700,2,0],[-14198997.666405385,-12178878.884935524,0,236760,2,0],[-14046765.975014994,-12425901.706379721,0,236820,1,0],[-13891412.044389572,-12670369.904591387,0,236880,1,0],[-13733045.355466168,-12912099.23046195,0,236940,2,0],[-13571638.468572766,-13151235.52481852,0,237000,0,0],[-13407345.809878686,-13387553.332487565,0,237060,1,0],[-13240331.937125897,-13620888.973925099,0,237120,0,0],[-13070645.328800468,-13851234.112350147,0,237180,0,0],[-12898473.062716637,-14078422.302405138,0,237240,2,0],[-12723624.949436551,-14302717.096794011,0,237300,0,0],[-12546179.400148805,-14524072.284077471,0,237360,1,0],[-12366296.15365902,-14742337.99628437,0,237420,2,0],[-12183814.067729613,-14957771.44838562,0,237480,0,0],[-11998904.965071948,-15170231.269576412,0,237540,0,0],[-11811848.258487029,-15379411.542516574,0,237600,2,0],[-11622464.650444435,-15585545.270893557,0,237660,0,0],[-11430795.543817319,-15788645.560936874,0,237720,2,0],[-11236929.69695094,-15988697.748720169,0,237780,1,0],[-11040770.527691988,-16185799.291342208,0,237840,1,0],[-10842510.467606641,-16379806.681824964,0,237900,0,0],[-10642342.009871071,-16570586.716450207,0,237960,1,0],[-10440288.391758407,-16758130.862783384,0,238020,0,0],[-10236425.25220517,-16942432.075905636,0,238080,2,0],[-10030650.220930325,-17123594.204231966,0,238140,1,0],[-9822910.719601905,-17301754.12291452,0,238200,2,0],[-9613237.887773516,-17476854.781275164,0,238260,2,0],[-9401554.392044462,-17649021.793425333,0,238320,1,0],[-9188054.582982672,-17818149.3462621,0,238380,1,0],[-8972902.800667329,-17984093.29551636,0,238440,1,0],[-8756175.154828891,-18146872.05578311,0,238500,2,0],[-8537764.322255703,-18306556.00177777,0,238560,1,0],[-8317719.201512973,-18463157.795087762,0,238620,2,0],[-8096079.584984424,-18616686.533704747,0,238680,1,0],[-7872912.421041337,-18767120.77114092,0,238740,1,0],[-7648410.380402144,-18914344.399152488,0,238800,0,0],[-7422765.128148584,-19058307.795617875,0,238860,1,0],[-7196014.7271174295,-19198952.551127464,0,238920,1,0],[-6968080.60272171,-19336414.576252807,0,238980,1,0],[-6738988.600713452,-19470684.768494964,0,239040,2,0],[-6508641.874996682,-19601815.10933264,0,239100,2,0],[-6276908.059625806,-19729961.886630084,0,239160,0,0],[-6044166.840201194,-19854927.24222794,0,239220,1,0],[-5810612.395315792,-19976592.186571628,0,239280,1,0],[-5576144.795054908,-20095090.249609347,0,239340,1,0],[-5340787.512210779,-20210394.383094676,0,239400,1,0],[-5104589.515463655,-20322541.501862094,0,239460,0,0],[-4867748.922139958,-20431439.015513197,0,239520,0,0],[-4630500.014379373,-20537009.157534875,0,239580,1,0],[-4392689.600472443,-20639368.190788507,0,239640,0,0],[-4154388.4926259196,-20738499.1229396,0,239700,1,0],[-3915614.8116499796,-20834419.294738043,0,239760,2,0],[-3676075.6213491475,-20927264.91800368,0,239820,2,0],[-3435664.36628238,-21017106.571914315,0,239880,1,0],[-3194565.0356234247,-21103892.854401078,0,239940,0,0],[-2953151.8626737716,-21187488.63513766,0,240000,0,0],[-2711674.685273897,-21267882.318546854,0,240060,2,0],[-2469785.2414216427,-21345171.334458318,0,240120,1,0],[-2227365.8164804745,-21419431.262978856,0,240180,1,0],[-1984633.3637762924,-21490611.16312765,0,240240,2,0],[-1741443.416967176,-21558756.66782968,0,240300,2,0],[-1497657.2242563558,-21623969.39083249,0,240360,1,0],[-1253479.2151866448,-21686146.710761007,0,240420,0,0],[-1009305.6861438948,-21745283.361731272,0,240480,2,0],[-764988.8034422635,-21801369.81864734,0,240540,0,0],[-520576.5651123933,-21854434.555915333,0,240600,0,0],[-276441.37562070636,-21904452.399421934,0,240660,0,0],[-32635.23152594587,-21951399.336927693,0,240720,1,0],[211014.81337865954,-21995331.802514523,0,240780,2,0],[454811.841940159,-22036305.57932376,0,240840,2,0],[698918.6235215538,-22074431.19557842,0,240900,1,0],[943089.2935908878,-22109617.863457847,0,240960,1,0],[1187151.7256891122,-22141878.69619426,0,241020,1,0],[1431036.0614638035,-22171222.78041368,0,241080,2,0],[1674926.2984466532,-22197672.29229255,0,241140,0,0],[1918604.5535620665,-22221256.731152754,0,241200,0,0],[2161660.655311855,-22241914.856003348,0,241260,1,0],[2404260.634356881,-22259734.932370003,0,241320,1,0],[2646560.844888027,-22274682.881664567,0,241380,1,0],[2888521.01355327,-22286800.86021682,0,241440,1,0],[3130124.169517465,-22296096.873731103,0,241500,1,0],[3371331.176738255,-22302592.83091525,0,241560,0,0],[3611941.2098019836,-22306300.90166473,0,241620,0,0],[3851726.4423250044,-22307216.811965633,0,241680,2,0],[4091038.8951829965,-22305386.647710692,0,241740,1,0],[4330031.598277954,-22300826.052284554,0,241800,0,0],[4568307.5426325435,-22293519.311472155,0,241860,2,0],[4806040.126020542,-22283494.771719504,0,241920,2,0],[5043545.713591091,-22270763.10187296,0,241980,1,0],[5280622.559956981,-22255326.876728047,0,242040,2,0],[5517261.211277513,-22237224.731901225,0,242100,0,0],[5753211.757934136,-22216456.230788976,0,242160,1,0],[5988304.834149911,-22193063.569156814,0,242220,0,0],[6222527.876202787,-22167077.4133665,0,242280,2,0],[6456006.830440684,-22138483.17946333,0,242340,2,0],[6689101.588618918,-22107263.45655385,0,242400,0,0],[6921403.705479926,-22073463.963975217,0,242460,2,0],[7152928.065286477,-22037091.853602264,0,242520,1,0],[7383780.203298687,-21998146.200860728,0,242580,1,0],[7613778.849079123,-21956708.04083282,0,242640,0,0],[7842747.285318087,-21912753.035387103,0,242700,2,0],[8070814.727330245,-21866320.250446428,0,242760,1,0],[8298144.899501013,-21817360.106609035,0,242820,0,0],[8524348.685970102,-21765995.94417445,0,242880,2,0],[8749620.694488106,-21712191.895512912,0,242940,1,0],[8974081.54839716,-21655900.447323434,0,243000,0,0],[9197367.71097328,-21597251.264101688,0,243060,1,0],[9419460.490163468,-21536241.83115562,0,243120,2,0],[9640677.064202692,-21472802.400546968,0,243180,1,0],[9861020.652822457,-21406963.699143324,0,243240,1,0],[10080265.714388506,-21338770.784462176,0,243300,0,0],[10298240.736212999,-21268327.015127342,0,243360,2,0],[10515109.00053054,-21195511.890513998,0,243420,0,0],[10730821.599688819,-21120463.572405413,0,243480,0,0],[10945040.138174394,-21043218.63348875,0,243540,1,0],[11157919.149371378,-20963789.103273265,0,243600,2,0],[11369769.88776029,-20882036.648693673,0,243660,1,0],[11580578.11826064,-20797990.758682214,0,243720,1,0],[11790161.218839677,-20711740.114101402,0,243780,2,0],[11998645.918838758,-20623236.110680047,0,243840,2,0],[12206206.675509715,-20532364.332846314,0,243900,2,0],[12412807.676731417,-20439223.726903312,0,243960,0,0],[12618102.012570448,-20343935.264773466,0,244020,0,0],[12821733.342923418,-20246682.46450378,0,244080,0,0],[13023713.24853142,-20147449.59137098,0,244140,2,0],[13224355.870132236,-20046132.189223077,0,244200,0,0],[13423613.457339596,-19942751.93529312,0,244260,2,0],[13621498.452383706,-19837301.26008811,0,244320,1,0],[13818124.884411188,-19729703.191028874,0,244380,1,0],[14013353.580940364,-19620112.287330694,0,244440,0,0],[14206973.369104354,-19508574.468063347,0,244500,2,0],[14399139.496682461,-19395069.49600842,0,244560,0,0],[14589858.057305409,-19279579.27687677,0,244620,2,0],[14779071.842700208,-19162122.999234207,0,244680,2,0],[14967120.225953843,-19042550.301944684,0,244740,0,0],[15153623.859446164,-18921021.48432673,0,244800,2,0],[15338622.672016848,-18797632.863922574,0,244860,1,0],[15522231.458781099,-18672229.785421498,0,244920,1,0],[15704281.394683637,-18544956.01615513,0,244980,0,0],[15884619.714380844,-18415946.66652638,0,245040,1,0],[16063214.145929549,-18285170.258322172,0,245100,1,0],[16240230.233875282,-18152610.930952452,0,245160,2,0],[16415761.468864027,-18018119.9625528,0,245220,0,0],[16589652.948788319,-17881864.106347587,0,245280,0,0],[16761636.797416385,-17744031.00052904,0,245340,2,0],[16931961.92814402,-17604465.24344858,0,245400,1,0],[17100754.098362047,-17463058.96989856,0,245460,0,0],[17267757.301096004,-17320048.922602635,0,245520,2,0],[17433029.185006756,-17175325.32845077,0,245580,0,0],[17596611.36519686,-17028938.296744432,0,245640,2,0],[17758477.929642003,-16880870.646442875,0,245700,0,0],[17918611.048860837,-16731177.945357349,0,245760,1,0],[18076864.68239924,-16579965.828908129,0,245820,1,0],[18233367.783487894,-16427163.632927956,0,245880,2,0],[18388223.326229844,-16272602.961735114,0,245940,0,0],[18541281.188526798,-16116484.516824162,0,246000,1,0],[18692456.43758903,-15958939.372936836,0,246060,2,0],[18841926.09657111,-15799703.066277064,0,246120,0,0],[18989561.242765885,-15638959.361562481,0,246180,0,0],[19135133.072424587,-15476976.694217814,0,246240,2,0],[19278890.572872624,-15313485.533686873,0,246300,2,0],[19421012.8041264,-15148256.333883852,0,246360,0,0],[19561269.427786086,-14981582.567489404,0,246420,0,0],[19699419.637546577,-14813751.766807526,0,246480,2,0],[19835661.85653541,-14644486.694565985,0,246540,2,0],[19970243.401164226,-14473545.000475863,0,246600,2,0],[20103154.023833044,-14300927.802495219,0,246660,1,0],[20234223.837621585,-14126816.117525764,0,246720,0,0],[20363280.83784565,-13951487.611055676,0,246780,1,0],[20490272.50171024,-13774971.923184201,0,246840,1,0],[20615313.29706033,-13597140.221066594,0,246900,0,0],[20738280.214455884,-13418185.614898337,0,246960,1,0],[20859174.287415233,-13238083.20137456,0,247020,1,0],[20978107.092979006,-13056730.702786218,0,247080,0,0],[21094926.5369933,-12874272.64994244,0,247140,1,0],[21209638.167675134,-12690746.869056204,0,247200,2,0],[21322430.622333564,-12505866.815998822,0,247260,2,0],[21433401.67822343,-12319464.34557329,0,247320,0,0],[21542325.801280327,-12131926.716039632,0,247380,2,0],[21649214.757957708,-11943237.268356204,0,247440,1,0],[21754111.55944242,-11753226.142660689,0,247500,2,0],[21857052.601313885,-11561974.004278567,0,247560,0,0],[21957911.57325928,-11369611.51682405,0,247620,2,0],[22056667.89720763,-11176163.09163989,0,247680,2,0],[22153522.95512678,-10981344.026496949,0,247740,1,0],[22248335.578819204,-10785310.826824652,0,247800,0,0],[22340973.913086932,-10588415.325550554,0,247860,1,0],[22431379.95688117,-10390687.208842598,0,247920,0,0],[22519619.950662185,-10192135.909850342,0,247980,1,0],[22605648.231701206,-9992797.66823012,0,248040,1,0],[22689496.680497427,-9792475.191295046,0,248100,1,0],[22771196.04328704,-9591238.30420224,0,248160,2,0],[22850815.41022946,-9388906.843782138,0,248220,0,0],[22928254.74700709,-9185710.125523295,0,248280,0,0],[23003373.9733548,-8981943.329948302,0,248340,0,0],[23076178.89721748,-8777690.211661352,0,248400,2,0],[23146788.123051345,-8572578.527325906,0,248460,0,0],[23215187.155032743,-8366657.357453723,0,248520,1,0],[23281330.38034003,-8160127.957236712,0,248580,2,0],[23345295.935350664,-7952599.951965264,0,248640,1,0],[23407059.513142295,-7744176.827740325,0,248700,1,0],[23466611.833144907,-7535014.276404101,0,248760,2,0],[23523936.257476456,-7324929.754523363,0,248820,0,0],[23579014.202377286,-7114156.770028928,0,248880,2,0],[23631814.246878132,-6902687.885474297,0,248940,0,0],[23682377.024691246,-6690567.3433846375,0,249000,2,0],[23730608.81339526,-6477796.395757142,0,249060,1,0],[23776639.308987256,-6264238.517123765,0,249120,1,0],[23820346.33577896,-6050068.503242796,0,249180,0,0],[23861721.334679633,-5835492.544452256,0,249240,2,0],[23900810.17947136,-5620348.537881042,0,249300,0,0],[23937551.915474907,-5404652.156659902,0,249360,1,0],[23971936.07874787,-5188633.356146606,0,249420,2,0],[24004025.09824386,-4971907.592249682,0,249480,1,0],[24033823.865187254,-4754532.83432081,0,249540,1,0],[24061253.46356785,-4536671.992485862,0,249600,0,0],[24086310.045130484,-4318580.578518872,0,249660,2,0],[24109029.122803893,-4100044.1206554156,0,249720,1,0],[24129372.293946605,-3880914.369937836,0,249780,0,0],[24147351.080556806,-3661618.5658805417,0,249840,1,0],[24162920.036708303,-3442105.4634260535,0,249900,2,0],[24176124.44272142,-3222092.3828652636,0,249960,1,0],[24186936.70454447,-3001580.3955852673,0,250020,2,0],[24195378.78857546,-2780580.154035186,0,250080,1,0],[24201400.725567684,-2559140.9837572356,0,250140,1,0],[24205046.23256405,-2337420.7615112956,0,250200,0,0],[24206256.242316075,-2115688.438945902,0,250260,1,0],[24205032.968117584,-1893876.3057241025,0,250320,1,0],[24201384.238547113,-1671918.4282123542,0,250380,1,0],[24195301.998310085,-1449771.7097799694,0,250440,1,0],[24186810.907489255,-1227468.5429380354,0,250500,1,0],[24175846.987818927,-1005060.6619601144,0,250560,1,0],[24162433.270090286,-782532.2302146436,0,250620,1,0],[24146597.67197768,-559939.2016914042,0,250680,0,0],[24128279.46217228,-337480.1116254163,0,250740,0,0],[24107553.493277416,-115331.4205221397,0,250800,1,0],[24084355.871041782,106670.31269725604,0,250860,2,0],[24058677.02002311,328806.35633235046,0,250920,2,0],[24030495.061564382,551284.126444925,0,250980,1,0],[23999775.37119922,773900.887898672,0,251040,1,0],[23966572.608570594,996408.6189552848,0,251100,0,0],[23930924.68153706,1218633.2905241298,0,251160,2,0],[23892774.100101963,1440756.5900817288,0,251220,1,0],[23852080.51208674,1662886.6120421893,0,251280,1,0],[23808883.607757095,1884848.4743187083,0,251340,0,0],[23763211.20328272,2106420.470993823,0,251400,2,0],[23715055.213062484,2327785.001239153,0,251460,1,0],[23664320.49881487,2549067.2040708167,0,251520,2,0],[23611011.602427967,2770280.0627003126,0,251580,2,0],[23555127.795229036,2991531.5790979816,0,251640,0,0],[23496692.04425747,3212454.3064102647,0,251700,1,0],[23435810.791898508,3432862.261676368,0,251760,0,0],[23372416.054979376,3652712.3441790547,0,251820,1,0],[23306548.09288879,3872001.256892929,0,251880,0,0],[23238215.734073684,4090721.664037344,0,251940,1,0],[23167375.00139649,4308807.801846436,0,252000,0,0],[23094043.745123975,4526229.373193698,0,252060,2,0],[23018189.708016176,4743184.7128477935,0,252120,1,0],[22939720.910861187,4959763.223957937,0,252180,1,0],[22858710.27689319,5175798.62167175,0,252240,1,0],[22775146.890726376,5391252.955410493,0,252300,1,0],[22689056.54784299,5606119.301743097,0,252360,1,0],[22600391.753708486,5820349.4141365215,0,252420,1,0],[22509178.395324256,6033912.485927241,0,252480,1,0],[22415412.83771791,6246793.697358481,0,252540,1,0],[22319087.402792744,6458977.838164139,0,252600,1,0],[22220217.104102496,6670405.520275898,0,252660,1,0],[22118820.584106077,6881069.982181781,0,252720,0,0],[22014911.260956276,7090790.913181409,0,252780,1,0],[21908547.35885621,7299501.424783813,0,252840,2,0],[21799535.381279174,7507558.206396325,0,252900,2,0],[21687812.168240204,7715021.76859666,0,252960,0,0],[21573528.494637683,7921583.685006809,0,253020,2,0],[21456703.793877233,8127235.068893575,0,253080,2,0],[21337134.786129747,8332200.633059588,0,253140,1,0],[21214928.214390386,8536353.839555921,0,253200,2,0],[21090122.858695075,8739617.932973955,0,253260,0,0],[20962723.916413143,8941828.449016988,0,253320,1,0],[20832897.38471315,9142814.769745823,0,253380,1,0],[20700543.875316914,9342666.756427541,0,253440,1,0],[20565636.385573108,9541402.002064807,0,253500,1,0],[20428210.2709164,9738944.085122412,0,253560,0,0],[20288375.227141388,9935124.679176932,0,253620,0,0],[20146215.086372625,10129791.866141766,0,253680,2,0],[20001499.425553944,10323191.840101035,0,253740,2,0],[19854078.899557002,10515578.572005272,0,253800,0,0],[19704140.466631193,10706619.450635953,0,253860,1,0],[19551802.038532488,10896179.751610102,0,253920,2,0],[19396847.20827743,11084476.339711567,0,253980,0,0],[19239423.198499914,11271335.92848402,0,254040,1,0],[19079597.473555375,11456622.168285562,0,254100,0,0],[18917417.235038456,11640263.50788152,0,254160,2,0],[18752756.72515682,11822390.856179744,0,254220,1,0],[18585517.692429934,12003080.714436695,0,254280,0,0],[18415925.999737848,12182051.830463128,0,254340,0,0],[18244137.912917744,12359148.178194206,0,254400,2,0],[18069882.947485957,12534590.017665915,0,254460,0,0],[17893209.22988649,12708328.117354274,0,254520,1,0],[17714215.368530497,12880214.252539823,0,254580,2,0],[17532692.592517957,13050478.874429092,0,254640,2,0],[17348494.7448731,13219197.386947803,0,254700,1,0],[17161741.0394841,13386178.144815201,0,254760,1,0],[16972625.179762337,13551317.582058797,0,254820,1,0],[16781122.499449253,13714565.51142354,0,254880,0,0],[16587394.900764026,13875744.761171786,0,254940,1,0],[16391453.34955561,14034859.959062446,0,255000,2,0],[16193030.888443433,14192077.370120598,0,255060,0,0],[15992277.945835292,14347261.225393828,0,255120,2,0],[15789191.602227405,14500347.053443389,0,255180,0,0],[15583821.536389573,14651341.78366582,0,255240,0,0],[15376478.249555595,14799974.1181559,0,255300,2,0],[15166847.990962403,14946409.824357996,0,255360,2,0],[14954649.317933073,15090841.198582346,0,255420,1,0],[14740101.13919982,15233110.900722539,0,255480,0,0],[14523464.067105994,15372986.347540988,0,255540,1,0],[14304766.852730095,15510430.810497541,0,255600,2,0],[14083737.883427734,15645599.271750763,0,255660,0,0],[13860548.02555627,15778358.977737034,0,255720,1,0],[13635364.667450806,15908601.081662426,0,255780,0,0],[13408197.716140114,16036254.295504335,0,255840,1,0],[13179094.952291343,16161301.42184422,0,255900,0,0],[12948071.152024908,16283718.2011678,0,255960,2,0],[12714973.904584846,16403529.126142146,0,256020,2,0],[12479502.498351226,16520865.29825042,0,256080,2,0],[12241711.859377738,16635701.457171533,0,256140,2,0],[12001579.375754196,16747980.194783136,0,256200,1,0],[11759323.100053947,16857585.955580696,0,256260,0,0],[11515313.26058054,16964341.19770712,0,256320,1,0],[11269524.872876065,17068195.13216355,0,256380,0,0],[11022024.054854266,17169108.473960694,0,256440,2,0],[10772653.382555688,17267117.391666975,0,256500,0,0],[10521461.270190412,17362196.05231906,0,256560,1,0],[10268629.226230271,17454222.528923552,0,256620,1,0],[10014016.932161462,17543247.51980718,0,256680,1,0],[9757657.505155273,17629219.15223852,0,256740,0,0],[9499768.850817319,17712042.188111722,0,256800,2,0],[9240201.379899418,17791737.046298116,0,256860,2,0],[8978622.261919504,17868360.744945854,0,256920,0,0],[8715451.727209551,17941774.209397636,0,256980,1,0],[8450876.113034023,18011904.75204362,0,257040,0,0],[8184938.490116592,18078712.77447586,0,257100,2,0],[7917504.728815996,18142195.621565428,0,257160,1,0],[7648417.20456406,18202340.755962003,0,257220,2,0],[7377726.726189034,18259151.722194362,0,257280,0,0],[7105650.956381891,18312537.040514532,0,257340,1,0],[6832417.744001583,18362419.854445025,0,257400,0,0],[6558044.695353972,18408750.944910415,0,257460,2,0],[6282420.389850253,18451556.903912324,0,257520,0,0],[6005570.577185463,18490793.260187555,0,257580,2,0],[5727570.671302819,18526416.88861622,0,257640,2,0],[5448052.68004421,18558417.017044153,0,257700,1,0],[5167287.7440289,18586780.418448098,0,257760,0,0],[4885669.483585251,18611396.18007087,0,257820,0,0],[4603433.3159901155,18632240.306474846,0,257880,1,0],[4320451.366223811,18649300.60935035,0,257940,0,0],[4036763.330761042,18662530.763089273,0,258000,2,0],[3752225.9879626376,18671902.11548365,0,258060,1,0],[3466727.8174046553,18677402.018879265,0,258120,2,0],[3180335.855031262,18679006.74691672,0,258180,1,0],[2893084.6848973916,18676660.304479815,0,258240,0,0],[2605405.6050515375,18670363.535013087,0,258300,1,0],[2317354.5767790223,18660056.853278406,0,258360,2,0],[2028608.0133174688,18645708.194378313,0,258420,2,0],[1739066.9179905443,18627303.998829193,0,258480,2,0],[1448774.0572380929,18604768.783499356,0,258540,1,0],[1158009.5017909296,18578142.438398205,0,258600,0,0],[867150.7199765533,18547373.049401574,0,258660,0,0],[576449.8286656698,18512493.34309473,0,258720,1,0],[285813.5397919581,18473459.908195842,0,258780,2,0],[-5080.386534724497,18430194.744841952,0,258840,0,0],[-295962.57655882946,18382708.40488636,0,258900,2,0],[-586784.6435157373,18330971.425671443,0,258960,1,0],[-877644.9432431017,18274944.418294914,0,259020,2,0],[-1168474.7814051034,18214607.86310992,0,259080,0,0],[-1459023.9114979177,18149963.5131484,0,259140,2,0],[-1749242.4262072372,18080996.92435793,0,259200,0,0],[-2039029.5301190019,18007709.415763516,0,259260,1,0],[-2328158.989449457,17930130.142838817,0,259320,2,0],[-2616875.3810131964,17848141.408073522,0,259380,0,0],[-2904977.453003532,17761795.50802423,0,259440,2,0],[-3192357.4550191904,17671075.27858199,0,259500,1,0],[-3479101.587394628,17575932.74855498,0,259560,1,0],[-3765001.4665363296,17476380.51938545,0,259620,1,0],[-4049941.797391058,17372461.218216907,0,259680,0,0],[-4333683.537481899,17264206.301981978,0,259740,0,0],[-4615997.1782664135,17151691.0012034,0,259800,2,0],[-4897126.988332441,17034777.889176823,0,259860,0,0],[-5176993.39103293,16913478.240441237,0,259920,1,0],[-5455348.780278049,16787872.63936514,0,259980,2,0],[-5732464.448900299,16657803.179714441,0,260040,1,0],[-6008215.707007044,16523279.341541288,0,260100,0,0],[-6282227.300255146,16384488.076134393,0,260160,2,0],[-6554566.242124416,16241345.209466912,0,260220,1,0],[-6825318.454979528,16093761.627393976,0,260280,0,0],[-7094082.268989701,15941949.533866785,0,260340,2,0],[-7360929.133582408,15785835.182719622,0,260400,1,0],[-7625926.941488302,15625350.009304432,0,260460,1,0],[-7888837.181145793,15460587.541105289,0,260520,2,0],[-8149751.050624952,15291486.352529118,0,260580,1,0],[-8408550.178744607,15118070.074580207,0,260640,0,0],[-8664871.757731698,14940571.683486128,0,260700,1,0],[-8918642.327032324,14759017.166379929,0,260760,2,0],[-9170073.560398612,14573211.78807208,0,260820,1,0],[-9419043.736558292,14383214.17619473,0,260880,2,0],[-9665514.089231974,14189042.794600895,0,260940,0,0],[-9909233.921570417,13990849.48530861,0,261000,1,0],[-10150012.807732195,13788784.314122727,0,261060,0,0],[-10387736.655326033,13582894.076085908,0,261120,0,0],[-10622212.087018114,13373347.464827748,0,261180,2,0],[-10853624.177185219,13159937.300994914,0,261240,0,0],[-11081895.33679822,12942743.820304148,0,261300,2,0],[-11306955.943473173,12721774.887987383,0,261360,2,0],[-11528988.879737614,12496851.504984792,0,261420,1,0],[-11747766.797149388,12268167.773907144,0,261480,0,0],[-11963000.304681156,12036016.559504833,0,261540,0,0],[-12174471.66922847,11800585.524168346,0,261600,2,0],[-12382348.202027721,11561692.304632585,0,261660,0,0],[-12586575.237091303,11319389.64971725,0,261720,1,0],[-12786969.808044255,11073870.198399505,0,261780,0,0],[-12983452.623031236,10825205.244729001,0,261840,1,0],[-13175978.029092716,10573464.595122613,0,261900,0,0],[-13364468.364308558,10318724.422948463,0,261960,0,0],[-13548761.902857637,10061211.397668231,0,262020,1,0],[-13728909.797089154,9800832.129215103,0,262080,2,0],[-13905049.549000392,9537365.37958672,0,262140,0,0],[-14077037.602897823,9271064.461346464,0,262200,2,0],[-14244792.585238665,9001961.40166471,0,262260,2,0],[-14408476.079848763,8729863.01416831,0,262320,2,0],[-14568010.462252673,8454837.638451496,0,262380,1,0],[-14723270.649334328,8177111.309502207,0,262440,1,0],[-14874103.511216043,7896923.711598938,0,262500,1,0],[-15020470.955518277,7614372.1179174725,0,262560,0,0],[-15162233.336346885,7329704.083426312,0,262620,0,0],[-15299295.691133544,7043142.168531383,0,262680,0,0],[-15431590.300554695,6754801.30679094,0,262740,1,0],[-15559201.35858123,6464595.1103970595,0,262800,2,0],[-15682202.339097891,6172273.2787861675,0,262860,0,0],[-15800499.560304606,5878102.908583666,0,262920,2,0],[-15914079.266819103,5582184.335998529,0,262980,1,0],[-16022953.321928969,5284412.224630455,0,263040,1,0],[-16127031.421168894,4985084.107705088,0,263100,2,0],[-16226365.604362147,4684071.918882273,0,263160,2,0],[-16320982.732071044,4381333.550030728,0,263220,0,0],[-16410739.338417033,4077288.164843952,0,263280,2,0],[-16495623.60825568,3772032.6240025414,0,263340,1,0],[-16575669.323998837,3465500.400243565,0,263400,2,0],[-16650865.28746244,3157758.088508755,0,263460,2,0],[-16721235.256062722,2848726.7169565656,0,263520,1,0],[-16786726.55482652,2538690.7447633864,0,263580,0,0],[-16847265.245309237,2228097.0912390156,0,263640,1,0],[-16902840.914210267,1917005.7604383137,0,263700,0,0],[-16953463.38976908,1605566.6532352008,0,263760,1,0],[-16999127.44067895,1293805.2614649755,0,263820,0,0],[-17039832.95987189,981875.0198604127,0,263880,2,0],[-17075640.087308127,669634.4537312944,0,263940,2,0],[-17106566.99138532,356855.785194034,0,264000,2,0],[-17132625.215345226,43615.40935749745,0,264060,0,0],[-17153805.96959113,-269639.85691837757,0,264120,1,0],[-17170087.471317027,-582628.1281975674,0,264180,0,0],[-17181512.435742337,-895291.5407871394,0,264240,1,0],[-17188080.788622234,-1207495.7945623447,0,264300,2,0],[-17189833.729001738,-1519562.6673063561,0,264360,1,0],[-17186783.651156943,-1831377.4837904163,0,264420,2,0],[-17178961.72304314,-2142861.0237333756,0,264480,2,0],[-17166372.23414993,-2454119.1164992917,0,264540,1,0],[-17149059.933513425,-2764896.6978233764,0,264600,1,0],[-17127038.32655958,-3074886.0819858145,0,264660,0,0],[-17100373.217604242,-3383864.43557016,0,264720,1,0],[-17069098.381550778,-3691763.7919757855,0,264780,1,0],[-17033211.92189289,-3998648.560145015,0,264840,1,0],[-16992774.248291723,-4304480.075751735,0,264900,2,0],[-16947780.93332866,-4609333.433490859,0,264960,0,0],[-16898291.308859352,-4912968.7715236675,0,265020,1,0],[-16844393.126968388,-5215133.560610773,0,265080,1,0],[-16786088.50694648,-5515931.048127993,0,265140,2,0],[-16723369.477487057,-5815472.642263801,0,265200,2,0],[-16656253.466362298,-6113868.485166026,0,265260,0,0],[-16584869.268056773,-6410685.210925155,0,265320,0,0],[-16509328.721721452,-6705509.265045046,0,265380,0,0],[-16429709.33267807,-6998305.161770719,0,265440,2,0],[-16345926.48241808,-7289322.853880693,0,265500,0,0],[-16258068.472739743,-7578516.779311542,0,265560,0,0],[-16166269.88358786,-7865473.189876179,0,265620,0,0],[-16070599.065113163,-8150170.208130919,0,265680,2,0],[-15970967.94347121,-8432851.008113123,0,265740,1,0],[-15867404.316600066,-8713651.121539108,0,265800,1,0],[-15759986.129809996,-8992343.362925956,0,265860,1,0],[-15648798.734927997,-9268893.95925493,0,265920,1,0],[-15533868.629258933,-9543200.899744233,0,265980,0,0],[-15415340.340373408,-9815101.903970571,0,266040,0,0],[-15293319.791688196,-10084364.651174419,0,266100,1,0],[-15167813.078227162,-10351111.236337803,0,266160,2,0],[-15038706.222415583,-10615618.776760519,0,266220,1,0],[-14906070.57692799,-10877840.789128829,0,266280,0,0],[-14770110.518555764,-11137417.819843097,0,266340,1,0],[-14630884.522120368,-11394317.039542716,0,266400,2,0],[-14488278.372749208,-11648802.954210766,0,266460,1,0],[-14342357.197469994,-11900857.308246074,0,266520,0,0],[-14193331.758166896,-12150122.619228927,0,266580,2,0],[-14041204.798548998,-12396697.64142923,0,266640,2,0],[-13885793.673244754,-12640874.233391026,0,266700,2,0],[-13727198.642509503,-12882624.400354216,0,266760,1,0],[-13565537.226804653,-13121751.534108942,0,266820,0,0],[-13401093.338162085,-13357914.03224977,0,266880,1,0],[-13233903.396103622,-13591112.144499866,0,266940,2,0],[-13063837.99779741,-13821602.066999773,0,267000,0,0],[-12891045.676023709,-14049204.948681582,0,267060,1,0],[-12715699.571879048,-14273757.620893022,0,267120,2,0],[-12537606.21343915,-14495525.061623596,0,267180,0,0],[-12356973.928403879,-14714330.335634442,0,267240,1,0],[-12173961.89964287,-14930025.373579592,0,267300,1,0],[-11988494.573348546,-15142713.684946854,0,267360,1,0],[-11800646.668144774,-15352396.15926605,0,267420,1,0],[-11610462.610192247,-15559029.130503455,0,267480,2,0],[-11417889.325590076,-15762755.173232786,0,267540,1,0],[-11222953.16470276,-15963551.988931417,0,267600,2,0],[-11025726.808613596,-16161387.84532105,0,267660,0,0],[-10826407.056178022,-16356121.310865443,0,267720,1,0],[-10625133.495367948,-16547617.748737877,0,267780,2,0],[-10421740.934429178,-16736111.835728796,0,267840,1,0],[-10216254.886000318,-16921624.155747812,0,267900,0,0],[-10009012.637522968,-17103828.214410968,0,267960,0,0],[-9800197.493201237,-17282673.274315868,0,268020,0,0],[-9589855.450789632,-17458110.87549387,0,268080,1,0],[-9377911.06077016,-17630286.589664023,0,268140,2,0],[-9164136.545558946,-17799375.394488353,0,268200,0,0],[-8948735.247809842,-17965280.60662789,0,268260,2,0],[-8731726.383743566,-18128008.020865522,0,268320,0,0],[-8513196.541737687,-18287524.246189397,0,268380,2,0],[-8293171.341550685,-18443870.175395027,0,268440,0,0],[-8071709.860329386,-18596996.88734194,0,268500,2,0],[-7848837.529903928,-18746926.270617682,0,268560,1,0],[-7624501.856326003,-18893755.501373652,0,268620,0,0],[-7399012.453392721,-19037279.927249644,0,268680,2,0],[-7172283.947879104,-19177579.963706017,0,268740,2,0],[-6944021.361848185,-19314881.606036644,0,268800,0,0],[-6714642.022404016,-19448966.651740666,0,268860,2,0],[-6484145.555338551,-19579871.92299415,0,268920,0,0],[-6252574.012660872,-19707553.449344918,0,268980,1,0],[-6020161.50433574,-19831936.44498763,0,269040,0,0],[-5786933.607618061,-19953063.00205441,0,269100,0,0],[-5553116.457300949,-20070827.390405245,0,269160,2,0],[-5318382.137810034,-20185410.593708817,0,269220,2,0],[-5082500.182694427,-20296952.628124535,0,269280,2,0],[-4845495.635651663,-20405458.749812175,0,269340,2,0],[-4607405.9728203975,-20510956.362973485,0,269400,0,0],[-4368610.983002951,-20613282.198464137,0,269460,1,0],[-4129317.5422822093,-20712376.431256842,0,269520,1,0],[-3889381.9204767807,-20808301.643209603,0,269580,0,0],[-3649043.1838183017,-20901028.72062986,0,269640,2,0],[-3408147.003748853,-20990605.655749634,0,269700,1,0],[-3166563.3090798995,-21077125.471997455,0,269760,0,0],[-2924687.3685836545,-21160447.704583336,0,269820,0,0],[-2682722.966210991,-21240565.11565597,0,269880,2,0],[-2440366.3734158506,-21317549.81739763,0,269940,1,0],[-2197479.8538318444,-21391502.36384016,0,270000,2,0],[-1954111.1365809664,-21462415.709925726,0,270060,1,0],[-1710284.4640010744,-21530305.00840359,0,270120,2,0],[-1466024.9328854808,-21595175.994398598,0,270180,1,0],[-1221398.7411577795,-21657035.671564087,0,270240,0,0],[-976776.2010764449,-21715793.068798635,0,270300,2,0],[-732009.62169858,-21771530.05598757,0,270360,0,0],[-487168.5312253923,-21824247.46065253,0,270420,0,0],[-242585.12471916564,-21873864.67606919,0,270480,1,0],[1849.132676200517,-21920462.396995313,0,270540,2,0],[246454.125822622,-21964115.063532818,0,270600,2,0],[491392.08969725907,-22004839.784192014,0,270660,0,0],[736260.8487821012,-22042616.407040324,0,270720,0,0],[980664.8116062747,-22077371.044168927,0,270780,1,0],[1224756.7018302567,-22109177.215644635,0,270840,1,0],[1468690.835939096,-22138060.728246126,0,270900,1,0],[1712448.5515756859,-22164036.815705784,0,270960,2,0],[1956146.485399463,-22187141.82883469,0,271020,1,0],[2199783.441508457,-22207376.174077623,0,271080,1,0],[2443119.72127389,-22224739.211154167,0,271140,0,0],[2685977.596455811,-22239251.541851208,0,271200,1,0],[2928292.2889089035,-22250899.69691586,0,271260,2,0],[3170426.723828459,-22259722.31225233,0,271320,1,0],[3412355.0923275016,-22265777.968219675,0,271380,1,0],[3653842.4536647727,-22269012.546699215,0,271440,0,0],[3894690.9380360423,-22269453.065744966,0,271500,0,0],[4134707.9291264024,-22267155.141373184,0,271560,0,0],[4373843.428835302,-22262104.406584993,0,271620,2,0],[4612423.644455823,-22254309.82854336,0,271680,2,0],[4850832.322750598,-22243772.05607776,0,271740,1,0],[5088823.508061748,-22230530.30643675,0,271800,1,0],[5326185.0404352145,-22214619.942218527,0,271860,0,0],[5562726.676530431,-22196026.035653763,0,271920,2,0],[5798629.755001768,-22174785.00668503,0,271980,1,0],[6033990.089845669,-22150869.015510976,0,272040,2,0],[6268828.65656213,-22124322.365184758,0,272100,1,0],[6503100.913114357,-22095127.60045627,0,272160,2,0],[6736783.150283653,-22063322.355177507,0,272220,1,0],[6969856.833815584,-22028904.306308705,0,272280,0,0],[7201956.288392547,-21991979.371036112,0,272340,0,0],[7432842.475792481,-21952540.635816976,0,272400,2,0],[7662913.7854473945,-21910586.51729857,0,272460,1,0],[7892238.788473324,-21866078.41820971,0,272520,0,0],[8120521.394962542,-21819113.655288503,0,272580,0,0],[8347481.208448255,-21769733.35735502,0,272640,2,0],[8573536.723870205,-21717884.788631205,0,272700,1,0],[8798790.03927058,-21663550.038550034,0,272760,0,0],[9022870.70149966,-21606841.087932795,0,272820,2,0],[9245961.95884215,-21547690.410357494,0,272880,2,0],[9468372.535747634,-21486065.688121725,0,272940,2,0],[9690066.902928608,-21421962.339827448,0,273000,0,0],[9910688.632230144,-21355484.26399579,0,273060,1,0],[10130064.167604497,-21286723.147963002,0,273120,2,0],[10348490.931514096,-21215574.118011672,0,273180,0,0],[10565784.377644602,-21142099.30774893,0,273240,1,0],[10781754.222631251,-21066376.39779303,0,273300,1,0],[10996576.417220246,-20988406.512087896,0,273360,0,0],[11210012.640612595,-20908216.032060437,0,273420,0,0],[11421928.611756394,-20825886.47504829,0,273480,2,0],[11632635.57254741,-20741364.226897795,0,273540,0,0],[11842071.181828033,-20654609.084334537,0,273600,2,0],[12050268.346174866,-20565646.945061956,0,273660,2,0],[12257518.77645498,-20474380.360401094,0,273720,1,0],[12463632.841485025,-20380880.78946237,0,273780,1,0],[12668447.841342011,-20285219.97003315,0,273840,0,0],[12871754.784430258,-20187526.705814354,0,273900,1,0],[13073559.754422436,-20087787.56803455,0,273960,0,0],[13273844.69760573,-19986040.41925692,0,274020,2,0],[13472734.482602807,-19882222.053586897,0,274080,2,0],[13670568.55804145,-19776166.81082119,0,274140,2,0],[13867298.007720416,-19667899.539365336,0,274200,0,0],[14062601.479549356,-19557599.086504392,0,274260,1,0],[14256295.227991438,-19445398.147256505,0,274320,1,0],[14448537.461641388,-19331196.653431606,0,274380,1,0],[14639308.47333901,-19215024.83939633,0,274440,0,0],[14828440.423666343,-19096989.193659283,0,274500,1,0],[15015906.442133423,-18977113.872817088,0,274560,1,0],[15201847.88487751,-18855315.062982246,0,274620,2,0],[15386410.557250226,-18731510.64223335,0,274680,2,0],[15569708.287486745,-18605620.26352457,0,274740,0,0],[15751476.022978215,-18477863.716348276,0,274800,0,0],[15931329.885344433,-18348443.3488143,0,274860,0,0],[16109308.289582558,-18217409.817258943,0,274920,2,0],[16285687.118554613,-18084575.79565684,0,274980,2,0],[16460738.26762384,-17949707.675515745,0,275040,0,0],[16634134.539139977,-17813061.38214335,0,275100,2,0],[16805914.37306166,-17674657.934461314,0,275160,0,0],[16976005.933883112,-17534497.03599047,0,275220,1,0],[17144293.835261345,-17392715.95570967,0,275280,2,0],[17311039.794334333,-17249102.103586517,0,275340,1,0],[17476198.502699554,-17103684.668530054,0,275400,0,0],[17639509.509220064,-16956693.079454895,0,275460,0,0],[17800819.174593024,-16808297.25439066,0,275520,2,0],[17960426.01127723,-16658249.059307888,0,275580,1,0],[18118377.447048504,-16506462.242164547,0,275640,2,0],[18274694.30723255,-16352928.702577401,0,275700,1,0],[18429381.86235973,-16197694.760760315,0,275760,0,0],[18582119.354893923,-16041004.916723818,0,275820,1,0],[18732955.754591472,-15882879.761366654,0,275880,2,0],[18882093.05566383,-15723106.43997083,0,275940,1,0],[19029515.40676096,-15561646.589207772,0,276000,2,0],[19175228.16891842,-15398573.283454716,0,276060,1,0],[19319225.707651403,-15233890.51414797,0,276120,0,0],[19461227.105701845,-15067845.56890222,0,276180,0,0],[19601140.478513848,-14900657.275441365,0,276240,2,0],[19739142.891657937,-14732000.900557576,0,276300,2,0],[19875484.81318804,-14561671.846589552,0,276360,0,0],[20009928.28283731,-14389956.62740033,0,276420,0,0],[20142230.383122973,-14217141.13922166,0,276480,2,0],[20272619.98754897,-14042939.544592295,0,276540,0,0],[20401045.356132578,-13867411.79296989,0,276600,2,0],[20527509.78698082,-13690564.261279708,0,276660,1,0],[20652157.337670818,-13512259.746848568,0,276720,0,0],[20774698.024643745,-13332817.397100003,0,276780,0,0],[20895054.957251832,-13152395.019736966,0,276840,2,0],[21013461.707273487,-12970708.197828941,0,276900,1,0],[21129922.368133873,-12787648.685040435,0,276960,2,0],[21244461.072092563,-12603206.158122128,0,277020,1,0],[21357103.767089557,-12417427.509582754,0,277080,1,0],[21467691.60915784,-12230455.313668968,0,277140,1,0],[21576232.379027266,-12042296.731401825,0,277200,2,0],[21682843.241133686,-11852881.47324638,0,277260,0,0],[21787343.259050347,-11662310.483982269,0,277320,0,0],[21889636.80374503,-11470958.232787307,0,277380,0,0],[21989675.205470122,-11278830.197548663,0,277440,2,0],[22087624.741605554,-11085628.181837497,0,277500,1,0],[22183539.656268325,-10891217.341021208,0,277560,1,0],[22277374.2288857,-10695771.7871312,0,277620,0,0],[22368986.033350427,-10499474.18953641,0,277680,0,0],[22458323.093078908,-10302496.49273434,0,277740,1,0],[22545460.436108306,-10104712.295971626,0,277800,2,0],[22630515.09637771,-9905799.889702989,0,277860,2,0],[22713551.128746245,-9705577.405325213,0,277920,2,0],[22794587.96857972,-9504135.935742036,0,277980,0,0],[22873424.757718127,-9301799.696074598,0,278040,1,0],[22950020.980096046,-9098714.194161138,0,278100,1,0],[23024442.09199762,-8894777.424375659,0,278160,0,0],[23096600.447194926,-8690145.518326953,0,278220,2,0],[23166541.207522757,-8484707.152576892,0,278280,2,0],[23234383.431801315,-8278090.877869421,0,278340,1,0],[23300088.409155995,-8070521.618000053,0,278400,0,0],[23363486.83415859,-7862363.42019496,0,278460,1,0],[23424586.16007012,-7653623.008866576,0,278520,1,0],[23483460.457631446,-7444147.491005533,0,278580,2,0],[23540109.659692597,-7233758.802559687,0,278640,0,0],[23594516.21257899,-7022717.049479868,0,278700,2,0],[23646642.032900266,-6810960.583684443,0,278760,0,0],[23696478.42502015,-6598570.339042148,0,278820,2,0],[23744052.719962373,-6385532.413205742,0,278880,0,0],[23789317.775947843,-6171889.391351748,0,278940,2,0],[23832300.975362156,-5957653.546143739,0,279000,1,0],[23872995.592061386,-5742649.949202259,0,279060,0,0],[23911349.45156358,-5527275.962318851,0,279120,1,0],[23947372.874011517,-5311538.117753054,0,279180,1,0],[23981031.983319685,-5095282.746451736,0,279240,0,0],[24012354.205336917,-4878720.627971434,0,279300,2,0],[24041326.444954146,-4661654.098353602,0,279360,2,0],[24067993.09410858,-4443798.0702825375,0,279420,0,0],[24092301.73509747,-4225522.499281008,0,279480,0,0],[24114215.11494566,-4007173.449203411,0,279540,2,0],[24133757.15088987,-3788411.650824748,0,279600,2,0],[24150945.63060262,-3568925.663164724,0,279660,1,0],[24165764.73499491,-3348917.148836707,0,279720,2,0],[24178222.04196478,-3128417.6711575896,0,279780,2,0],[24188298.038273517,-2907210.631732571,0,279840,0,0],[24195976.44501009,-2685742.0077134464,0,279900,0,0],[24201254.879272107,-2464360.015276837,0,279960,0,0],[24204080.15991795,-2243087.6715248646,0,280020,2,0],[24204500.951725107,-2021593.932951404,0,280080,0,0],[24202511.121699043,-1799907.934157414,0,280140,2,0],[24198066.712204203,-1578033.6953311074,0,280200,1,0],[24191184.189224537,-1355808.8039242306,0,280260,1,0],[24181892.36923237,-1133460.4610540874,0,280320,2,0],[24170117.311396364,-910822.4036462124,0,280380,0,0],[24155911.509383224,-688073.9027753285,0,280440,0,0],[24139254.79836038,-465631.5204182818,0,280500,1,0],[24120148.08637164,-243308.19037194733,0,280560,2,0],[24098560.431338005,-20797.062136015393,0,280620,0,0],[24074535.23468568,201725.2642616691,0,280680,0,0],[24048037.860949896,423866.4866033929,0,280740,1,0],[24019114.821452036,645789.3450226531,0,280800,1,0],[23987679.625756327,867652.6711002928,0,280860,0,0],[23953779.86900473,1089233.6403428249,0,280920,0,0],[23917469.14134108,1310359.6262685014,0,280980,1,0],[23878667.03478957,1531163.939143795,0,281040,1,0],[23837366.00355359,1751805.0528479363,0,281100,2,0],[23793533.119868062,1972439.103662016,0,281160,1,0],[23747149.907196645,2193030.0854822933,0,281220,2,0],[23698219.30718962,2413591.9109796914,0,281280,1,0],[23646754.713157076,2634067.0667806887,0,281340,1,0],[23592743.78654606,2854252.5448147235,0,281400,1,0],[23536208.83790184,3074140.4974717163,0,281460,1,0],[23477156.372575466,3293673.54733065,0,281520,1,0],[23415591.754488204,3512890.721423232,0,281580,1,0],[23351475.76907357,3731703.52530023,0,281640,0,0],[23284868.819869965,3949943.5912568597,0,281700,1,0],[23215791.711416483,4167580.0327074574,0,281760,1,0],[23144199.027202275,4384763.134182057,0,281820,1,0],[23070035.363064483,4601470.368645768,0,281880,2,0],[22993264.7435134,4817826.642099415,0,281940,2,0],[22913841.690259494,5033999.568036194,0,282000,1,0],[22831805.99228487,5249767.546982248,0,282060,0,0],[22747304.033434227,5464814.754092378,0,282120,2,0],[22660225.37641914,5679223.603474893,0,282180,2,0],[22570474.404271055,5893316.549280769,0,282240,1,0],[22478093.181839038,6106920.6323693395,0,282300,1,0],[22383153.801387973,6319846.469664308,0,282360,1,0],[22285667.884023324,6532036.580478989,0,282420,1,0],[22185631.358454436,6743475.400913128,0,282480,1,0],[22083061.070167586,6954153.688789762,0,282540,0,0],[21977989.940861892,7163849.575905586,0,282600,2,0],[21870389.82088463,7372710.513809385,0,282660,2,0],[21760061.20521424,7581041.448107171,0,282720,1,0],[21647078.86405357,7788655.249864079,0,282780,1,0],[21531555.46892322,7995330.0825642375,0,282840,0,0],[21413570.37483263,8200885.619980896,0,282900,0,0],[21293214.871277254,8405168.67583935,0,282960,2,0],[21170322.73634753,8608468.610902393,0,283020,1,0],[21044782.552149437,8810871.482225537,0,283080,1,0],[20916701.324778266,9012204.475818442,0,283140,2,0],[20785971.994281597,9212599.37562906,0,283200,0,0],[20652714.345585305,9411868.12769639,0,283260,0,0],[20517123.853241805,9609680.721472627,0,283320,1,0],[20379098.932679452,9806151.014914561,0,283380,1,0],[20238552.564455338,10001417.760661954,0,283440,1,0],[20095481.83377554,10195434.784945859,0,283500,2,0],[19949797.71588516,10388337.948334543,0,283560,0,0],[19801593.495148785,10579898.900340647,0,283620,0,0],[19651060.63252715,10769844.781497538,0,283680,2,0],[19498066.849058036,10958411.966826197,0,283740,2,0],[19342325.34787279,11145881.922597583,0,283800,0,0],[19184095.28100478,11331884.298033407,0,283860,0,0],[19023601.086192127,11516144.300307956,0,283920,1,0],[18860759.07992935,11698769.69623434,0,283980,2,0],[18695316.483862936,11879999.985743815,0,284040,2,0],[18527138.258701075,12059930.721901039,0,284100,1,0],[18356402.58100709,12238380.640539577,0,284160,0,0],[18183340.903105885,12415056.59474524,0,284220,1,0],[18007950.347237974,12589955.85252508,0,284280,1,0],[17830118.543608442,12763136.764525764,0,284340,1,0],[17649872.341914006,12934588.67911883,0,284400,1,0],[17467202.247236162,13104275.087918725,0,284460,2,0],[17281984.641234096,13272263.754060272,0,284520,0,0],[17094374.521531425,13438421.912233504,0,284580,1,0],[16904535.653633494,13602573.411514498,0,284640,0,0],[16712432.2152759,13764712.141329352,0,284700,2,0],[16517968.792474803,13924898.1478689,0,284760,1,0],[16321013.807640988,14083213.216334071,0,284820,0,0],[16121872.331073051,14239398.781428847,0,284880,1,0],[15920567.117531793,14393418.224999826,0,284940,1,0],[15716915.368170815,14545356.767926238,0,285000,2,0],[15510833.962734189,14695277.760490695,0,285060,1,0],[15302321.650248647,14843134.792905115,0,285120,1,0],[15091561.253328212,14988801.002930688,0,285180,0,0],[14878685.4538933,15132127.13888067,0,285240,1,0],[14663723.815196041,15273077.014260756,0,285300,2,0],[14446401.892011123,15411809.46969051,0,285360,2,0],[14226574.703884335,15548404.175809423,0,285420,1,0],[14004414.240289524,15682715.88008327,0,285480,1,0],[13780082.499582827,15814591.892206034,0,285540,1,0],[13553608.83367838,15943992.890922882,0,285600,2,0],[13324851.210879149,16071020.477893611,0,285660,0,0],[13094022.59090184,16195487.556797152,0,285720,1,0],[12861247.917696273,16317305.403955698,0,285780,1,0],[12626425.77098249,16436527.697286261,0,285840,2,0],[12389385.804078428,16553151.637772627,0,285900,0,0],[12150358.009486606,16667114.287670871,0,285960,0,0],[11909661.466895621,16778172.391544413,0,286020,0,0],[11667340.662805362,16886334.857629243,0,286080,2,0],[11423070.496383913,16991698.712495383,0,286140,2,0],[11176547.417235209,17094360.8128859,0,286200,2,0],[10927833.098155914,17194273.21686866,0,286260,0,0],[10677252.453157755,17291275.82765281,0,286320,0,0],[10425202.39760315,17385194.39479374,0,286380,2,0],[10171331.746182576,17476101.544226307,0,286440,2,0],[9915351.443339469,17564107.119084332,0,286500,2,0],[9657308.770186575,17649163.2472051,0,286560,0,0],[9397569.680880891,17731102.005092803,0,286620,0,0],[9136508.079355292,17809787.60082271,0,286680,0,0],[8874142.70259183,17885176.810020268,0,286740,1,0],[8610365.974882048,17957299.333146125,0,286800,1,0],[8345025.535342346,18026159.726045474,0,286860,2,0],[8077963.474048228,18091751.391415518,0,286920,1,0],[7809243.20013927,18154064.01475501,0,286980,0,0],[7539259.8861817615,18212958.079480644,0,287040,2,0],[7267836.8640296925,18268432.309518486,0,287100,1,0],[6994882.555775214,18320504.55910741,0,287160,0,0],[6720785.601857668,18369045.06640554,0,287220,1,0],[6445568.514460071,18414047.306198563,0,287280,1,0],[6169096.8776668785,18455491.754394975,0,287340,1,0],[5891438.039912682,18493317.09486788,0,287400,1,0],[5612621.346099482,18527537.976426825,0,287460,2,0],[5332491.017515625,18558104.627192292,0,287520,1,0],[5051153.868479781,18585001.201193754,0,287580,2,0],[4768601.462630926,18608171.5158848,0,287640,1,0],[4484912.97735232,18627582.009968795,0,287700,2,0],[4200125.528697773,18643204.183437567,0,287760,1,0],[3914285.5501566087,18655020.64986677,0,287820,1,0],[3627654.2207427737,18662953.815299343,0,287880,0,0],[3340430.432682048,18666990.73006321,0,287940,0,0],[3052883.353740504,18667103.69567747,0,288000,1,0],[2764848.6576128188,18663250.3036507,0,288060,2,0],[2476049.1768362965,18655415.19326729,0,288120,2,0],[2186355.188060899,18643536.742113717,0,288180,0,0],[1896193.5662195778,18627623.95958125,0,288240,0,0],[1605985.154026526,18607672.883229032,0,288300,1,0],[1315577.0487610085,18583623.156388137,0,288360,2,0],[1024712.4907526863,18555435.495841015,0,288420,0,0],[733625.6859062936,18523096.380025163,0,288480,0,0],[442717.2013523614,18486637.864420574,0,288540,1,0],[151893.89088346701,18445983.03963618,0,288600,2,0],[-139146.77053930788,18401101.997932564,0,288660,1,0],[-430315.27206879284,18351959.46857929,0,288720,2,0],[-721584.9840912168,18298532.122141022,0,288780,0,0],[-1012668.1512367574,18240819.66620029,0,288840,0,0],[-1303172.6568642794,18178884.81940155,0,288900,1,0],[-1593182.4296655841,18112689.66549804,0,288960,1,0],[-1882825.9815663074,18042148.7047649,0,289020,2,0],[-2172178.8909393116,17967259.16021232,0,289080,0,0],[-2461013.3191394485,17888001.072674654,0,289140,1,0],[-2749066.157910078,17804440.24301149,0,289200,2,0],[-3036618.9430122226,17716439.260002464,0,289260,2,0],[-3323775.867242921,17623971.118215367,0,289320,0,0],[-3610102.3855430568,17527107.260922015,0,289380,0,0],[-3895173.480072482,17425993.520759027,0,289440,0,0],[-4178923.7441494064,17320587.4892682,0,289500,1,0],[-4461462.541838019,17210864.654916737,0,289560,1,0],[-4742847.179370777,17096737.161861733,0,289620,2,0],[-5023184.518672501,16978165.575288143,0,289680,1,0],[-5302393.380396875,16855115.08759862,0,289740,2,0],[-5580374.377686747,16727622.24849853,0,289800,0,0],[-5856910.087792233,16595739.88744408,0,289860,1,0],[-6131729.697413117,16459580.217735719,0,289920,2,0],[-6405089.5017017955,16318962.59536584,0,289980,2,0],[-6677067.484666049,16173842.462078737,0,290040,2,0],[-6947576.928782531,16024224.751477141,0,290100,0,0],[-7216201.456137695,15870285.713857142,0,290160,0,0],[-7482563.623749359,15712231.172757518,0,290220,0,0],[-7746586.415474387,15550079.784476338,0,290280,0,0],[-8008180.6880317945,15383865.470762754,0,290340,1,0],[-8267424.024136905,15213534.16657039,0,290400,1,0],[-8524383.714678183,15038972.578825314,0,290460,2,0],[-8779116.560215088,14860142.893793344,0,290520,0,0],[-9031408.261298921,14677167.170244409,0,290580,2,0],[-9281152.908279594,14490071.786720103,0,290640,2,0],[-9528593.058299698,14298679.22425258,0,290700,2,0],[-9773606.424902098,14103019.136146791,0,290760,0,0],[-10015834.55018021,13903356.152092103,0,290820,1,0],[-10255087.949740168,13699846.092150873,0,290880,1,0],[-10491396.700269643,13492405.187324814,0,290940,1,0],[-10724686.597063353,13281094.538123993,0,291000,1,0],[-10954882.816256717,13065949.785283413,0,291060,1,0],[-11181911.934431452,12847022.238008816,0,291120,2,0],[-11405819.26776324,12624238.96230434,0,291180,0,0],[-11626395.000357306,12397778.156314181,0,291240,0,0],[-11843334.5644681,12167952.105901614,0,291300,0,0],[-12056566.871768521,11934820.464835105,0,291360,0,0],[-12266011.969997426,11698462.108958865,0,291420,2,0],[-12471827.9375657,11458638.85628706,0,291480,1,0],[-12674076.217322463,11215313.138854455,0,291540,2,0],[-12872696.236496577,10968507.609285094,0,291600,1,0],[-13067605.358254928,10718321.207046036,0,291660,1,0],[-13258637.197436273,10464942.86533284,0,291720,2,0],[-13445831.517450389,10208298.855655236,0,291780,1,0],[-13629108.942788823,9948476.453671893,0,291840,2,0],[-13808421.240679916,9685530.620339382,0,291900,0,0],[-13983605.465686422,9419689.061775997,0,291960,1,0],[-14154513.058660775,9151170.7762739,0,292020,1,0],[-14321161.719130661,8879913.588873738,0,292080,1,0],[-14483536.94558002,8605996.941750867,0,292140,2,0],[-14641640.627521116,8329332.523531948,0,292200,1,0],[-14795452.167557267,8050022.014267276,0,292260,0,0],[-14944711.221107878,7768447.959507324,0,292320,1,0],[-15089418.728299627,7484714.421802465,0,292380,0,0],[-15229497.451627782,7198883.323378962,0,292440,1,0],[-15364946.069729054,6911061.647766656,0,292500,1,0],[-15495775.990615176,6621151.9381330805,0,292560,1,0],[-15621956.829230519,6329262.421129331,0,292620,1,0],[-15743461.563709756,6035464.062366644,0,292680,0,0],[-15860187.694738021,5740053.957055476,0,292740,1,0],[-15972098.600104775,5443081.519875724,0,292800,2,0],[-16079305.81709812,5144309.8411391275,0,292860,0,0],[-16181718.47069154,4844001.093460364,0,292920,2,0],[-16279315.99509889,4542253.420996321,0,292980,0,0],[-16372063.15493573,4239166.375128079,0,293040,0,0],[-16459865.348949159,3935148.8714434667,0,293100,2,0],[-16542784.684968827,3629985.2515329383,0,293160,1,0],[-16620863.584185082,3323569.5214377963,0,293220,0,0],[-16694003.01998954,3016344.0952222273,0,293280,2,0],[-16762247.98563887,2708223.581250541,0,293340,0,0],[-16825563.30983032,2399318.2803528276,0,293400,1,0],[-16883929.767596178,2089893.1364833687,0,293460,2,0],[-16937423.165050354,1779681.1554316157,0,293520,1,0],[-16986011.63734826,1468768.4239949181,0,293580,1,0],[-17029681.705864146,1157440.5548694679,0,293640,0,0],[-17068421.50445218,845947.1558595736,0,293700,2,0],[-17102238.675155245,534201.2096556321,0,293760,1,0],[-17131197.724784978,222144.89862113504,0,293820,1,0],[-17155253.260724414,-89990.39439418862,0,293880,1,0],[-17174432.749823157,-402085.8502760183,0,293940,0,0],[-17188753.455935005,-713890.9032721545,0,294000,2,0],[-17198217.33149172,-1025513.5754109711,0,294060,2,0],[-17202861.119276978,-1337189.2658656465,0,294120,2,0],[-17202711.73666769,-1648871.6335324594,0,294180,1,0],[-17197785.518415414,-1960262.2361406577,0,294240,2,0],[-17188085.18409493,-2271282.578010847,0,294300,0,0],[-17173653.97008428,-2581679.2089970587,0,294360,0,0],[-17154544.334278625,-2891030.28972948,0,294420,0,0],[-17130780.066176597,-3199212.457865531,0,294480,1,0],[-17102377.155443273,-3506345.4184875633,0,294540,1,0],[-17069376.366123244,-3812539.303117692,0,294600,2,0],[-17031761.04352984,-4117909.054100613,0,294660,1,0],[-16989595.990830917,-4422331.879426508,0,294720,1,0],[-16942917.66330727,-4725604.609806135,0,294780,2,0],[-16891747.56263005,-5027797.221680052,0,294840,0,0],[-16836142.68284221,-5328653.613082432,0,294900,1,0],[-16776185.867267106,-5627967.5072198175,0,294960,1,0],[-16711889.33565391,-5925823.62863843,0,295020,1,0],[-16643288.358343985,-6222142.099119907,0,295080,2,0],[-16570386.802459052,-6517063.489064537,0,295140,2,0],[-16493189.365601556,-6810660.040807898,0,295200,1,0],[-16411777.108124187,-7102722.659499217,0,295260,0,0],[-16326296.464420829,-7392817.583384884,0,295320,2,0],[-16236735.090256868,-7681075.367876204,0,295380,1,0],[-16143118.09078953,-7967603.697860025,0,295440,0,0],[-16045575.679017462,-8252006.431472957,0,295500,1,0],[-15944173.572404407,-8534206.171997368,0,295560,0,0],[-15838969.284677634,-8814196.012929458,0,295620,2,0],[-15729955.248893188,-9092033.795521988,0,295680,0,0],[-15617168.103009049,-9367713.52203315,0,295740,2,0],[-15500672.380442247,-9641171.216590168,0,295800,2,0],[-15380367.497897603,-9912659.32937742,0,295860,1,0],[-15256400.83865045,-10182023.31792276,0,295920,0,0],[-15128952.581644177,-10448821.746884886,0,295980,1,0],[-14998104.255909948,-10713070.347767929,0,296040,0,0],[-14863891.707031503,-10974690.965860635,0,296100,1,0],[-14726384.506850744,-11233675.234186606,0,296160,1,0],[-14585531.618433239,-11490108.390196048,0,296220,1,0],[-14441431.785054673,-11743952.844893564,0,296280,0,0],[-14294203.61291844,-11995039.538689163,0,296340,1,0],[-14143908.325655099,-12243323.728121663,0,296400,2,0],[-13990428.061364071,-12489087.799020195,0,296460,1,0],[-13833794.991001042,-12732278.109358324,0,296520,2,0],[-13674078.199034654,-12972873.263670139,0,296580,1,0],[-13511327.732545137,-13210836.297915153,0,296640,0,0],[-13345813.06988542,-13445837.984834727,0,296700,2,0],[-13177479.623339418,-13678003.090748252,0,296760,2,0],[-13006176.987756727,-13907597.12764372,0,296820,0,0],[-12832165.780156314,-14134293.621595861,0,296880,1,0],[-12655619.129035706,-14357949.084819553,0,296940,2,0],[-12476359.861494325,-14578798.517049618,0,297000,1,0],[-12294479.369897373,-14796813.51234032,0,297060,0,0],[-12110220.689190777,-15011721.843048142,0,297120,1,0],[-11923648.386898246,-15223488.207790136,0,297180,0,0],[-11734849.524570964,-15432093.460611055,0,297240,0,0],[-11543983.679679358,-15637411.274567965,0,297300,1,0],[-11350970.500185708,-15839523.13341738,0,297360,0,0],[-11155889.390200347,-16038447.54766506,0,297420,2,0],[-10958651.008594714,-16234270.122736543,0,297480,2,0],[-10759069.972203322,-16427260.84347414,0,297540,2,0],[-10557184.889711592,-16617384.405405976,0,297600,1,0],[-10353187.84290952,-16804508.744784597,0,297660,0,0],[-10147384.063159447,-16988379.505631953,0,297720,1,0],[-9939853.630055754,-17168962.571025375,0,297780,2,0],[-9730343.192993013,-17346531.737153124,0,297840,1,0],[-9518928.016403073,-17521035.593866784,0,297900,2,0],[-9305645.382160205,-17692494.62687588,0,297960,1,0],[-9090558.995926479,-17860882.33656245,0,298020,1,0],[-8873840.287727574,-18026082.290056817,0,298080,2,0],[-8655417.393638128,-18188213.03191475,0,298140,1,0],[-8435329.51697225,-18347237.43598401,0,298200,0,0],[-8213915.748627511,-18502978.39617707,0,298260,1,0],[-7991219.821299163,-18655405.94900363,0,298320,1,0],[-7767170.6137959,-18804639.88113945,0,298380,0,0],[-7541942.6150735,-18950560.39389399,0,298440,0,0],[-7315735.037639128,-19093086.87002141,0,298500,1,0],[-7088460.267907096,-19232322.08745181,0,298560,2,0],[-6859843.314498103,-19368428.39372744,0,298620,1,0],[-6629923.437480689,-19501426.81261248,0,298680,1,0],[-6398926.871126621,-19631238.54816141,0,298740,0,0],[-6167051.3217469845,-19757750.66168443,0,298800,1,0],[-5934335.840457877,-19880987.46800746,0,298860,2,0],[-5700495.579371212,-20001093.591938905,0,298920,1,0],[-5465594.118438953,-20118111.15926144,0,298980,0,0],[-5230001.649110727,-20231846.370556507,0,299040,1,0],[-4993738.214149376,-20342338.28111604,0,299100,2,0],[-4756527.767689504,-20449726.095457274,0,299160,2,0],[-4518242.026769869,-20554082.10113811,0,299220,0,0],[-4279271.974368926,-20655278.109647438,0,299280,0,0],[-4039985.9973509023,-20753186.508322753,0,299340,2,0],[-3800080.8328746855,-20847941.581842944,0,299400,0,0],[-3559603.3806033125,-20939533.682529096,0,299460,0,0],[-3318937.325427365,-21027882.937036544,0,299520,1,0],[-3077932.5843354454,-21113047.81591521,0,299580,2,0],[-2836291.4108778425,-21195139.170244213,0,299640,0,0],[-2594266.722344058,-21274104.80960348,0,299700,1,0],[-2352018.417809789,-21349939.80124383,0,299760,2,0],[-2109260.9321945226,-21422735.878941137,0,299820,2,0],[-1865828.7189359032,-21492552.94474396,0,299880,1,0],[-1621999.0249444032,-21559337.07384921,0,299940,0,0],[-1378095.7300821673,-21623020.858814057,0,300000,2,0],[-1133973.5598937396,-21683655.08680886,0,300060,1,0],[-889553.6265082156,-21741261.468065776,0,300120,0,0],[-645164.7907542691,-21795839.96706466,0,300180,0,0],[-401045.571654665,-21847297.111666907,0,300240,1,0],[-157052.59667987318,-21895725.231275573,0,300300,2,0],[87158.9695717284,-21941200.34317352,0,300360,2,0],[331680.27541266946,-21983759.884761214,0,300420,1,0],[576359.2805455084,-22023377.097944915,0,300480,2,0],[821130.4004053017,-22060073.443289902,0,300540,0,0],[1065798.57378223,-22093797.664369598,0,300600,0,0],[1309960.707902365,-22124587.26464213,0,300660,0,0],[1553590.4133687872,-22152394.136333212,0,300720,2,0],[1797024.105141962,-22177283.529726263,0,300780,1,0],[2040402.3954532018,-22199316.190565877,0,300840,2,0],[2283705.759139029,-22218491.24533552,0,300900,1,0],[2526875.215597553,-22234838.4773353,0,300960,0,0],[2769545.515268247,-22248301.455427002,0,301020,2,0],[3011882.8851502156,-22258926.145141967,0,301080,2,0],[3254167.608613341,-22266752.27442603,0,301140,0,0],[3496065.914068751,-22271783.611836385,0,301200,2,0],[3737514.1200386067,-22274020.697211802,0,301260,1,0],[3978682.8299703347,-22273482.918332316,0,301320,0,0],[4219189.318168333,-22270209.828800015,0,301380,0,0],[4458778.033973461,-22264166.505546853,0,301440,0,0],[4697489.844381334,-22255425.10340702,0,301500,2,0],[4935641.373741752,-22243961.036922455,0,301560,2,0],[5173525.691182967,-22229767.089753572,0,301620,2,0],[5411158.729370852,-22212889.1285299,0,301680,0,0],[5648155.559403636,-22193342.567092974,0,301740,1,0],[5884267.557149712,-22171152.168843143,0,301800,2,0],[6119876.439857138,-22146287.63538143,0,301860,1,0],[6354935.713540056,-22118826.375025842,0,301920,1,0],[6589257.321592646,-22088727.56602152,0,301980,0,0],[6822610.969546868,-22056091.86481914,0,302040,1,0],[7054994.90769167,-22020883.91331502,0,302100,1,0],[7286569.359992766,-21983127.601383377,0,302160,2,0],[7517482.684135275,-21942798.37639681,0,302220,2,0],[7747887.019534283,-21899879.69065848,0,302280,2,0],[7977733.681273573,-21854396.439571895,0,302340,0,0],[8206692.504170437,-21806437.5353058,0,302400,0,0],[8434376.94520475,-21756055.95014867,0,302460,0,0],[8660738.242028043,-21703316.714964107,0,302520,0,0],[8885778.718010327,-21648199.503100734,0,302580,1,0],[9109645.17738462,-21590724.31800249,0,302640,1,0],[9332516.45528967,-21530820.649699267,0,302700,1,0],[9554320.53335796,-21468523.822331294,0,302760,0,0],[9774909.132394418,-21403934.499655504,0,302820,2,0],[9994438.94184417,-21336968.57306571,0,302880,1,0],[10213030.860392507,-21267588.21252444,0,302940,1,0],[10430487.665195439,-21195890.62995767,0,303000,1,0],[10646843.451796874,-21121913.60613891,0,303060,1,0],[10862010.46205341,-21045617.374891795,0,303120,1,0],[11076044.54112225,-20967074.853993963,0,303180,1,0],[11288854.823565511,-20886245.351650413,0,303240,1,0],[11500474.6531467,-20803210.24281995,0,303300,1,0],[11710840.501736656,-20717920.694013353,0,303360,1,0],[11919973.221526641,-20630435.845564727,0,303420,1,0],[12127842.21881915,-20540772.120501336,0,303480,1,0],[12334432.235817933,-20448924.03278326,0,303540,1,0],[12539713.382972265,-20354938.240354743,0,303600,1,0],[12743682.926801706,-20258800.584682927,0,303660,1,0],[12946332.099884376,-20160544.870524973,0,303720,2,0],[13147773.4144211,-20060100.192639474,0,303780,1,0],[13348017.337133879,-19957500.004419036,0,303840,0,0],[13546703.04620807,-19852906.007143725,0,303900,1,0],[13743851.720779097,-19746365.88430478,0,303960,2,0],[13939723.762812782,-19637680.83037829,0,304020,0,0],[14134160.293610195,-19526970.10904507,0,304080,2,0],[14327178.968953783,-19414270.96241452,0,304140,2,0],[14519030.47988655,-19299408.610656627,0,304200,1,0],[14709544.994432554,-19182485.139883984,0,304260,0,0],[14898413.927029558,-19063706.69253545,0,304320,1,0],[15085649.063573759,-18943105.067465022,0,304380,1,0],[15271313.703819644,-18820568.932783704,0,304440,0,0],[15455318.780495623,-18696239.120606147,0,304500,0,0],[15637458.766240705,-18570255.81633516,0,304560,0,0],[15817741.115177305,-18442603.093294702,0,304620,1,0],[15996319.984524334,-18313215.1800118,0,304680,1,0],[16173255.71234493,-18181984.74095021,0,304740,2,0],[16348761.190393403,-18048828.827924255,0,304800,2,0],[16522909.952151075,-17913691.834541567,0,304860,1,0],[16695583.329761274,-17776635.73193033,0,304920,2,0],[16866734.746097084,-17637722.538143363,0,304980,2,0],[17036479.194146127,-17496830.003144737,0,305040,2,0],[17204842.408444934,-17353992.65267444,0,305100,1,0],[17371635.04669893,-17209338.593133308,0,305160,1,0],[17536743.662032403,-17063003.473120097,0,305220,0,0],[17699989.393422473,-16915090.46507782,0,305280,0,0],[17861233.291004866,-16765782.244672416,0,305340,0,0],[18020469.33289885,-16615083.448005553,0,305400,2,0],[18177968.615050375,-16462748.7631859,0,305460,0,0],[18333681.12170455,-16308840.285472138,0,305520,0,0],[18487365.445057966,-16153576.607865037,0,305580,1,0],[18639120.883378074,-15996891.32985142,0,305640,2,0],[18789202.303648327,-15838522.02892656,0,305700,2,0],[18937737.739529643,-15678355.869034352,0,305760,0,0],[19084394.784858216,-15516670.267649585,0,305820,1,0],[19229143.04083699,-15353632.080711262,0,305880,0,0],[19371884.063480612,-15189264.564025467,0,305940,2,0],[19512771.82759426,-15023412.36887337,0,306000,1,0],[19651906.237254947,-14855973.686006045,0,306060,1,0],[19789164.588801924,-14687137.383075928,0,306120,1,0],[19924490.573058575,-14516866.247194204,0,306180,0,0],[20057833.31163683,-14345372.849739531,0,306240,0,0],[20188992.285677563,-14172763.926534666,0,306300,1,0],[20318160.540813744,-13998966.400892735,0,306360,2,0],[20445481.544478577,-13823667.492527483,0,306420,2,0],[20571057.263858516,-13646762.105355311,0,306480,1,0],[20694767.610271968,-13468408.748334963,0,306540,1,0],[20816523.168471802,-13288791.465093488,0,306600,1,0],[20936266.19968467,-13107876.225937977,0,306660,1,0],[21054028.73857629,-12925722.40028997,0,306720,2,0],[21169899.16004621,-12742178.91071619,0,306780,2,0],[21283942.898224212,-12557149.115280315,0,306840,0,0],[21395956.03851012,-12370889.641255947,0,306900,0,0],[21505743.75681233,-12183803.810165592,0,306960,0,0],[21613307.65962733,-11995842.703583831,0,307020,2,0],[21718829.417609356,-11806740.274757866,0,307080,1,0],[21822386.795070466,-11616378.712556927,0,307140,1,0],[21923841.83574023,-11424882.42313837,0,307200,1,0],[22023242.13942155,-11232336.730260845,0,307260,2,0],[22120599.66542836,-11038529.792003348,0,307320,0,0],[22215875.95448835,-10843695.53114188,0,307380,2,0],[22309066.422405068,-10647836.642340044,0,307440,1,0],[22400180.384320267,-10450795.10683496,0,307500,2,0],[22489264.5542003,-10252597.2775055,0,307560,0,0],[22576192.976753373,-10053434.24765294,0,307620,1,0],[22660897.568400998,-9853444.000688728,0,307680,2,0],[22743515.78801299,-9652392.755377384,0,307740,0,0],[22824004.08928466,-9450399.535031553,0,307800,1,0],[22902222.730716534,-9247679.34311716,0,307860,1,0],[22978275.580103755,-9044089.92016092,0,307920,0,0],[23052061.78990877,-8839808.87631428,0,307980,1,0],[23123605.77177545,-8634849.903320352,0,308040,1,0],[23192933.06374414,-8429040.652581986,0,308100,1,0],[23260034.11097762,-8222462.220029603,0,308160,0,0],[23324880.164977882,-8015265.495533603,0,308220,1,0],[23387431.080472883,-7807439.248874559,0,308280,2,0],[23447803.789697263,-7598742.526203401,0,308340,1,0],[23505962.71751717,-7389114.910797058,0,308400,1,0],[23561891.318886563,-7178764.774597549,0,308460,2,0],[23615582.97306979,-6967589.431929794,0,308520,1,0],[23667043.522402275,-6755544.708242369,0,308580,0,0],[23716181.788587753,-6543021.030211901,0,308640,1,0],[23763026.200874828,-6330052.336841207,0,308700,2,0],[23807597.146095388,-6116294.238947514,0,308760,2,0],[23849920.062569097,-5901581.254704252,0,308820,1,0],[23890005.002754014,-5686148.130179647,0,308880,1,0],[23927739.794099223,-5470150.183917924,0,308940,0,0],[23963155.836642794,-5253800.895180286,0,309000,2,0],[23996213.588464577,-5036920.306486667,0,309060,0,0],[24026961.93265475,-4819573.3611108875,0,309120,1,0],[24055321.69710878,-4601924.095709878,0,309180,1,0],[24081360.019004032,-4383840.11040647,0,309240,0,0],[24104974.84232326,-4165507.2040441316,0,309300,2,0],[24126263.12880817,-3946748.785507564,0,309360,0,0],[24145179.475079156,-3727612.042469022,0,309420,1,0],[24161690.819669858,-3508269.8209619685,0,309480,2,0],[24175851.590031743,-3288415.3931602226,0,309540,1,0],[24187613.599593427,-3068072.8905561566,0,309600,2,0],[24196992.594419956,-2847226.3521400024,0,309660,0,0],[24203990.77580983,-2626103.1471113986,0,309720,1,0],[24208554.98356618,-2404898.8434951794,0,309780,1,0],[24210733.51442372,-2183452.725701545,0,309840,0,0],[24210457.43275422,-1961959.834991848,0,309900,0,0],[24207775.18180479,-1740649.0325911914,0,309960,2,0],[24202660.292739928,-1519158.3268621298,0,310020,2,0],[24195118.72866902,-1297155.3803102577,0,310080,1,0],[24185104.25421425,-1074839.8540407275,0,310140,2,0],[24172647.68021031,-852221.1127474481,0,310200,0,0],[24157739.14605536,-629524.0515272398,0,310260,1,0],[24140378.4546118,-406948.72722641006,0,310320,1,0],[24120583.40966636,-184333.0845490986,0,310380,2,0],[24098285.643192913,38484.99479217706,0,310440,2,0],[24073454.22446662,261664.67597016576,0,310500,1,0],[24046173.50142269,484980.8699534953,0,310560,1,0],[24016381.368597295,708256.1624425089,0,310620,1,0],[23984105.42615673,931458.841290949,0,310680,1,0],[23949369.52788052,1154558.2735944064,0,310740,0,0],[23912139.347501297,1377353.0669287967,0,310800,0,0],[23872479.848198727,1599647.626784294,0,310860,1,0],[23830344.06418321,1821624.0657185959,0,310920,1,0],[23785734.87761045,2043394.6200599468,0,310980,1,0],[23738587.740361016,2264944.9983657715,0,311040,0,0],[23688966.991046555,2486080.4830761533,0,311100,0,0],[23636934.645077657,2706583.9325957284,0,311160,0,0],[23582466.183796015,2926470.4678308098,0,311220,2,0],[23525452.50583236,3146052.4095804463,0,311280,2,0],[23465835.130966123,3365646.872136698,0,311340,1,0],[23403635.817331564,3585028.4778556554,0,311400,1,0],[23338904.883053243,3804025.9832351035,0,311460,1,0],[23271637.746081,4022627.7105177916,0,311520,0,0],[23201901.58345797,4240618.799213653,0,311580,1,0],[23129675.81864733,4457962.229372942,0,311640,2,0],[23054867.470276862,4674989.45661027,0,311700,2,0],[22977375.057012465,4891833.081377977,0,311760,0,0],[22897361.48230384,5108154.727437007,0,311820,0,0],[22814925.064294793,5323555.896069338,0,311880,2,0],[22729925.43975549,5538379.5550067,0,311940,2,0],[22642271.42406247,5752901.164201778,0,312000,0,0],[22552046.593625978,5966790.302062906,0,312060,2,0],[22459286.61641727,6179995.592064525,0,312120,1,0],[22363892.25293462,6392667.488641465,0,312180,1,0],[22265953.94226602,6604600.227201698,0,312240,0,0],[22165550.82790678,6815609.447349729,0,312300,1,0],[22062665.721091893,7025678.378929156,0,312360,2,0],[21957139.486378673,7235106.0275941575,0,312420,0,0],[21849094.138343606,7443697.894544175,0,312480,2,0],[21738467.91119874,7651416.757580068,0,312540,2,0],[21625134.12402611,7858543.08731092,0,312600,1,0],[21509160.460507195,8064913.404040021,0,312660,1,0],[21390644.370610695,8270322.663317259,0,312720,1,0],[21269591.704761785,8474734.509967722,0,312780,0,0],[21146085.745139662,8677993.006183513,0,312840,1,0],[21020118.53551629,8880053.21994068,0,312900,1,0],[20891620.828257855,9081044.448546423,0,312960,1,0],[20760595.295218978,9280924.585649692,0,313020,2,0],[20626939.609581817,9479852.796093423,0,313080,0,0],[20490749.122881453,9677578.80276996,0,313140,1,0],[20352130.87001928,9873982.594171703,0,313200,2,0],[20210895.286715407,10069305.72075316,0,313260,1,0],[20067014.003562085,10263537.196748875,0,313320,0,0],[19920729.521828927,10456299.389610622,0,313380,1,0],[19772051.41735626,10647627.539047847,0,313440,0,0],[19620985.760153282,10837456.64885338,0,313500,0,0],[19467655.14254043,11025627.072671281,0,313560,2,0],[19311805.009204183,11212391.596220076,0,313620,2,0],[19153251.67659748,11397977.513096651,0,313680,0,0],[18992190.148116477,11582082.339130493,0,313740,1,0],[18828789.287088282,11764554.932754597,0,313800,2,0],[18662811.108208943,11945614.792919362,0,313860,2,0],[18494117.768108882,12125354.108479638,0,313920,1,0],[18322847.907141387,12303624.962693391,0,313980,2,0],[18148993.881771546,12480390.332884995,0,314040,1,0],[17972592.722424656,12655595.091140244,0,314100,0,0],[17793878.025221523,12828970.239286926,0,314160,0,0],[17613006.722296823,13000335.987326384,0,314220,1,0],[17429874.333260845,13169808.770903848,0,314280,2,0],[17244187.699631408,13337599.423001291,0,314340,0,0],[17056113.13098749,13503534.120687464,0,314400,0,0],[16865963.57383079,13667357.086464578,0,314460,1,0],[16673548.97315533,13829140.748862067,0,314520,2,0],[16478670.180486713,13989081.558291312,0,314580,0,0],[16281436.061473014,14147034.370618965,0,314640,1,0],[16082021.822380742,14302866.202872077,0,314700,0,0],[15880433.88375382,14456519.989553053,0,314760,1,0],[15676678.824093776,14607970.17684987,0,314820,2,0],[15470502.61026495,14757409.621402962,0,314880,0,0],[15262038.694116538,14904662.575461542,0,314940,2,0],[15051327.488131138,15049727.702094039,0,315000,1,0],[14838245.393035008,15192651.754433064,0,315060,1,0],[14622909.205676137,15333300.050234137,0,315120,1,0],[14405389.936679374,15471641.46216128,0,315180,1,0],[14185673.78305041,15607619.175949298,0,315240,2,0],[13963635.47454864,15741301.610309679,0,315300,0,0],[13739463.653372165,15872566.23163156,0,315360,2,0],[13513133.24048499,16001374.42415858,0,315420,0,0],[13284705.045747785,16127681.697378414,0,315480,1,0],[13054349.990793722,16251354.707946531,0,315540,1,0],[12821910.921003185,16372446.156786947,0,315600,2,0],[12587279.138505297,16491036.069417102,0,315660,0,0],[12350629.912882162,16606956.27854038,0,315720,2,0],[12111960.855652567,16720182.846186558,0,315780,2,0],[11871009.203008087,16830856.80456116,0,315840,1,0],[11627940.700627405,16938826.55587408,0,315900,0,0],[11383100.175620262,17043920.066545747,0,315960,0,0],[11136711.257239422,17146039.875015832,0,316020,1,0],[10888603.977263562,17245213.68664595,0,316080,2,0],[10638499.870503347,17341545.781013656,0,316140,0,0],[10386592.809722777,17434888.972372774,0,316200,2,0],[10132884.188738769,17525260.74083599,0,316260,1,0],[9877255.648533512,17612661.628944945,0,316320,2,0],[9619730.248995112,17697054.516162157,0,316380,1,0],[9360343.771369116,17778383.38507682,0,316440,1,0],[9099310.611733986,17856575.616635475,0,316500,2,0],[8836491.70866294,17931629.11864809,0,316560,1,0],[8571893.15664445,18003518.105087824,0,316620,1,0],[8305753.300084644,18072138.489482272,0,316680,0,0],[8038258.921831229,18137421.434966438,0,316740,1,0],[7769477.354175676,18199336.21833956,0,316800,1,0],[7499258.930229238,18257880.76468653,0,316860,1,0],[7227645.928016504,18313018.472279962,0,316920,2,0],[6954489.465622483,18364733.09743403,0,316980,0,0],[6680003.171177229,18412976.320299786,0,317040,2,0],[6404255.338023087,18457701.230179172,0,317100,2,0],[6126907.6669462025,18498934.93627375,0,317160,1,0],[5848213.322911961,18536611.07862323,0,317220,0,0],[5568552.572088791,18570642.100126985,0,317280,0,0],[5288147.565054853,18600963.510722563,0,317340,1,0],[5006861.119914814,18627587.351305593,0,317400,2,0],[4724390.826338384,18650488.911852848,0,317460,2,0],[4440625.115542741,18669671.45500042,0,317520,1,0],[4155774.4622425847,18685063.25724083,0,317580,0,0],[3870264.1018050895,18696629.01705792,0,317640,0,0],[3584304.487434348,18704331.261637293,0,317700,2,0],[3297601.9689330445,18708146.926877502,0,317760,0,0],[3010213.3823736697,18708049.165258378,0,317820,0,0],[2722546.7255670736,18704016.32215342,0,317880,0,0],[2434669.7765370966,18696006.61839684,0,317940,2,0],[2146240.6845254283,18683981.006821986,0,318000,2,0],[1857020.5730404053,18667919.29796169,0,318060,1,0],[1567204.0310051336,18647785.881427307,0,318120,1,0],[1277046.7228991387,18623571.164633445,0,318180,1,0],[986608.5221821258,18595247.805061173,0,318240,0,0],[696121.5113721704,18562816.98078604,0,318300,0,0],[405852.3434755351,18526272.007329196,0,318360,0,0],[115857.89280131008,18485600.988508847,0,318420,0,0],[-173822.11249561174,18440780.768281206,0,318480,2,0],[-463472.0009449933,18391730.978207424,0,318540,2,0],[-753373.2223836569,18338373.304471087,0,318600,2,0],[-1043436.1151206739,18280714.792990915,0,318660,1,0],[-1333429.5002773576,18218740.72345517,0,318720,0,0],[-1622939.588425456,18152510.985212434,0,318780,0,0],[-1911726.5786617529,18082062.157720983,0,318840,1,0],[-2199865.427577239,18007329.382770214,0,318900,1,0],[-2487475.966942849,17928289.250799872,0,318960,1,0],[-2774483.6885449,17844908.53126109,0,319020,2,0],[-3060997.1353862556,17757125.51290073,0,319080,2,0],[-3347113.5118274316,17664864.554723598,0,319140,1,0],[-3632561.263066679,17568204.019287374,0,319200,2,0],[-3917276.066369915,17467100.33270305,0,319260,1,0],[-4201180.496232927,17361584.252595723,0,319320,0,0],[-4483849.176513413,17251759.90366608,0,319380,1,0],[-4765227.251086893,17137614.95056512,0,319440,1,0],[-5045390.100763693,17019118.62701601,0,319500,0,0],[-5324082.264970824,16896317.803652044,0,319560,2,0],[-5601406.692873496,16769156.241856417,0,319620,1,0],[-5877439.050492252,16637578.20310946,0,319680,0,0],[-6151770.521847034,16501721.017138645,0,319740,1,0],[-6424335.859393357,16361603.199845565,0,319800,1,0],[-6695202.4900267245,16217172.566973912,0,319860,2,0],[-6964438.071494905,16068352.356964858,0,319920,1,0],[-7231983.158885775,15915129.29914467,0,319980,1,0],[-7497566.403715085,15757659.859490836,0,320040,2,0],[-7761297.189810548,15595825.855460662,0,320100,2,0],[-8023227.218247146,15429570.643119097,0,320160,0,0],[-8282955.000516384,15259097.670556046,0,320220,0,0],[-8540119.799871141,15084661.671038793,0,320280,0,0],[-8794626.369823508,14906263.01217179,0,320340,0,0],[-9046417.098632291,14723948.317701967,0,320400,2,0],[-9295699.085225316,14537540.655863648,0,320460,0,0],[-9542370.984096618,14347067.326432196,0,320520,0,0],[-9786075.488746056,14152795.12143187,0,320580,1,0],[-10026907.55602901,13954648.226869598,0,320640,2,0],[-10265031.180891206,13752449.550427336,0,320700,2,0],[-10500506.083790107,13546086.37788813,0,320760,1,0],[-10733129.655204171,13335769.3610855,0,320820,0,0],[-10962547.77720644,13121740.16226671,0,320880,2,0],[-11188813.496872652,12903963.664406003,0,320940,1,0],[-11411996.305039652,12682328.799729962,0,321000,1,0],[-11631876.137994185,12457037.681230787,0,321060,2,0],[-11848512.604701474,12227999.811318656,0,321120,2,0],[-12061949.189150184,11995152.171029823,0,321180,0,0],[-12271880.594394883,11758806.964709481,0,321240,0,0],[-12477959.778165117,11519300.465568475,0,321300,2,0],[-12680403.17266105,11276404.95958881,0,321360,1,0],[-12879237.278225916,11030063.579380812,0,321420,1,0],[-13074273.483310623,10780470.39556031,0,321480,1,0],[-13265464.480955794,10527715.213066041,0,321540,0,0],[-13452622.064574217,10271979.223561646,0,321600,0,0],[-13635579.594685324,10013517.640684957,0,321660,1,0],[-13814409.804481689,9752213.71116046,0,321720,1,0],[-13989126.594978623,9488015.286494141,0,321780,1,0],[-14159694.996741127,9221021.486713834,0,321840,1,0],[-14326058.533292837,8951261.078193022,0,321900,2,0],[-14488239.53683617,8678687.804356208,0,321960,0,0],[-14646102.314131645,8403537.040885422,0,322020,2,0],[-14799622.603966668,8125869.539894529,0,322080,0,0],[-14948700.234737573,7845789.838311267,0,322140,1,0],[-15093258.454515649,7563520.905847069,0,322200,1,0],[-15233303.774168702,7279002.749024997,0,322260,1,0],[-15368808.008134779,6992314.28341349,0,322320,1,0],[-15499744.392621197,6703540.892571187,0,322380,2,0],[-15626116.043589458,6412611.538739386,0,322440,1,0],[-15747915.706513468,6119589.833455156,0,322500,0,0],[-15864962.364557497,5824926.572493431,0,322560,0,0],[-15977163.423794528,5528879.024493625,0,322620,2,0],[-16084615.943753475,5231178.835098485,0,322680,2,0],[-16187426.029918626,4931575.767003216,0,322740,0,0],[-16285437.573660946,4630531.443465118,0,322800,2,0],[-16378624.129475191,4328101.165096128,0,322860,1,0],[-16467037.424415091,4024219.7380230003,0,322920,0,0],[-16550564.576081026,3719344.4237480406,0,322980,2,0],[-16629207.097262062,3413372.085517795,0,323040,0,0],[-16702976.320184136,3106392.858616254,0,323100,2,0],[-16771869.826128118,2798500.4527919195,0,323160,0,0],[-16835846.418686062,2489799.4149683965,0,323220,1,0],[-16894913.194327593,2180545.6712948717,0,323280,2,0],[-16949088.23074952,1870476.1191446136,0,323340,1,0],[-16998390.7248155,1559703.0810750858,0,323400,0,0],[-17042766.925324917,1248642.4525520082,0,323460,0,0],[-17082203.15501522,937585.2672110725,0,323520,2,0],[-17116733.567454718,626266.450707833,0,323580,2,0],[-17146406.91814338,314390.37135278096,0,323640,2,0],[-17171241.373630412,2090.503736770907,0,323700,0,0],[-17191215.225843195,-310226.2518241554,0,323760,2,0],[-17206321.43695846,-622446.1233307531,0,323820,1,0],[-17216616.278212555,-934686.7861405801,0,323880,1,0],[-17222076.802626863,-1246651.113609901,0,323940,1,0],[-17222735.423123576,-1558265.750859665,0,324000,2,0],[-17218624.58809611,-1869640.9649362979,0,324060,1,0],[-17209745.948840886,-2180670.081756862,0,324120,1,0],[-17196150.024369825,-2491092.705457692,0,324180,1,0],[-17177834.63586389,-2800845.3495351793,0,324240,0,0],[-17154861.11308018,-3109658.6395522705,0,324300,1,0],[-17127266.47485516,-3417438.6231855555,0,324360,1,0],[-17095043.325622182,-3724296.819475592,0,324420,1,0],[-17058251.93505023,-4030183.84978575,0,324480,0,0],[-17016934.23008609,-4334781.805679293,0,324540,2,0],[-16971106.1030494,-4638268.58306429,0,324600,2,0],[-16920747.169985585,-4940864.851710466,0,324660,0,0],[-16865967.04205386,-5242169.575516048,0,324720,2,0],[-16806776.589670874,-5542119.431887612,0,324780,2,0],[-16743176.762154356,-5840981.134772183,0,324840,0,0],[-16675269.514240623,-6138335.425533449,0,324900,0,0],[-16603170.616111333,-6433775.48467845,0,324960,0,0],[-16526951.444701381,-6727208.904054676,0,325020,1,0],[-16446596.319146039,-7018793.116151892,0,325080,1,0],[-16362109.812341427,-7308609.124228077,0,325140,1,0],[-16273546.002046341,-7596611.7131597595,0,325200,1,0],[-16180946.0332096,-7882725.564281252,0,325260,1,0],[-16084374.666908843,-8166887.761356141,0,325320,1,0],[-15983873.244477384,-8449068.50086737,0,325380,1,0],[-15879484.126023952,-8729196.703143597,0,325440,0,0],[-15771324.288247066,-9007048.9404689,0,325500,0,0],[-15659536.026337428,-9282401.083711253,0,325560,1,0],[-15544067.759636942,-9555395.095899165,0,325620,1,0],[-15424947.538961055,-9826119.968630712,0,325680,2,0],[-15302126.558219789,-10094715.947154509,0,325740,1,0],[-15175670.13125821,-10361120.171954682,0,325800,2,0],[-15045626.54557605,-10625282.521496262,0,325860,0,0],[-14912121.725164998,-10887013.690477807,0,325920,2,0],[-14775216.64475211,-11146274.629767649,0,325980,2,0],[-14634810.76497955,-11403301.269664662,0,326040,1,0],[-14491004.070259342,-11657935.811023522,0,326100,2,0],[-14343895.542940764,-11910128.321739696,0,326160,2,0],[-14193406.75631044,-12160000.577167287,0,326220,1,0],[-14039723.36459283,-12407337.275339155,0,326280,0,0],[-13883068.440756049,-12651831.630153552,0,326340,1,0],[-13723519.30918004,-12893425.472844394,0,326400,0,0],[-13561107.359986749,-13132094.361601682,0,326460,2,0],[-13395798.69994446,-13367977.475859411,0,326520,0,0],[-13227664.254405275,-13601023.666144578,0,326580,0,0],[-13056965.013839686,-13830915.13112359,0,326640,2,0],[-12883534.314235821,-14057910.953469517,0,326700,2,0],[-12707204.702871826,-14282303.96796926,0,326760,0,0],[-12528285.66432615,-14503762.86408571,0,326820,0,0],[-12347030.044893421,-14721972.150463028,0,326880,1,0],[-12163401.606051723,-14937074.259751607,0,326940,0,0],[-11977444.194384843,-15149042.803875936,0,327000,2,0],[-11789102.648573605,-15358003.08642597,0,327060,2,0],[-11598172.872345176,-15564172.513502767,0,327120,1,0],[-11404859.630929604,-15767426.7622688,0,327180,2,0],[-11209211.861645732,-15967752.03984939,0,327240,0,0],[-11011365.224131148,-16164977.70945074,0,327300,1,0],[-10811559.27170376,-16358981.258925745,0,327360,2,0],[-10609560.110551879,-16549995.635412067,0,327420,0,0],[-10405556.474777853,-16737900.603188394,0,327480,2,0],[-10199606.962235324,-16922643.64786424,0,327540,0,0],[-9991751.99819841,-17104254.62710971,0,327600,1,0],[-9782191.728767686,-17282567.46992862,0,327660,0,0],[-9570984.231762959,-17457622.244025733,0,327720,2,0],[-9358027.472030826,-17629496.515537042,0,327780,1,0],[-9143239.220410954,-17798295.60973697,0,327840,2,0],[-8926679.732114023,-17964015.785695687,0,327900,1,0],[-8708381.408843623,-18126673.805176143,0,327960,1,0],[-8488546.893923398,-18286110.185629874,0,328020,2,0],[-8267076.28438651,-18442458.09653586,0,328080,0,0],[-8044177.960813133,-18595597.68068694,0,328140,1,0],[-7820041.898972698,-18745415.583501875,0,328200,0,0],[-7594717.763278284,-18891933.93671196,0,328260,0,0],[-7368403.000543327,-19035040.679198407,0,328320,1,0],[-7140988.485739629,-19174863.20945389,0,328380,1,0],[-6912381.683013289,-19311447.74770218,0,328440,2,0],[-6682467.389677424,-19444925.723304395,0,328500,0,0],[-6451459.547071874,-19575195.209997702,0,328560,1,0],[-6219547.21201234,-19702173.27144753,0,328620,0,0],[-5986797.132513345,-19825837.087316286,0,328680,1,0],[-5753225.090796079,-19946238.026979346,0,328740,1,0],[-5518722.426922769,-20063420.098438565,0,328800,1,0],[-5283342.201197755,-20177434.03506621,0,328860,0,0],[-5047303.0609253105,-20288164.853699427,0,328920,2,0],[-4810461.010080885,-20395692.42021446,0,328980,1,0],[-4572707.305934581,-20500134.76123786,0,329040,2,0],[-4334066.753562803,-20601485.57250059,0,329100,1,0],[-4094604.038548887,-20699703.02815635,0,329160,1,0],[-3854517.572142693,-20794781.41916303,0,329220,2,0],[-3613673.221668585,-20886763.5733794,0,329280,0,0],[-3372306.6839629794,-20975598.917182576,0,329340,0,0],[-3130752.8353857454,-21061191.24020785,0,329400,1,0],[-2888898.586091351,-21143561.544456385,0,329460,2,0],[-2646455.0766604925,-21222903.36929928,0,329520,2,0],[-2403293.811318072,-21299203.000905484,0,329580,0,0],[-2159759.3729454046,-21372432.108772904,0,329640,2,0],[-1915921.335175082,-21442554.47097791,0,329700,0,0],[-1671824.3572011704,-21509578.219647553,0,329760,1,0],[-1427627.5829508929,-21573501.81537229,0,329820,2,0],[-1183079.1403269733,-21634398.74224551,0,329880,1,0],[-938183.8650152485,-21692291.133725747,0,329940,1,0],[-693156.3645810441,-21747139.8804978,0,330000,2,0],[-447851.4573112317,-21798984.183693763,0,330060,1,0],[-202308.80016020348,-21847862.306931864,0,330120,1,0],[43248.35147334634,-21893730.40060455,0,330180,0,0],[288643.4675350059,-21936590.10869706,0,330240,0,0],[533610.4289862508,-21976367.683903854,0,330300,0,0],[778187.8814717092,-22013151.133237,0,330360,2,0],[1022638.1105297968,-22046983.84146241,0,330420,0,0],[1266964.3485724204,-22077872.618414514,0,330480,1,0],[1510941.0664735395,-22105799.7610948,0,330540,1,0],[1754705.668743281,-22130811.691430733,0,330600,1,0],[1998255.267354311,-22152918.927281164,0,330660,0,0],[2241347.4704681044,-22172110.032021023,0,330720,2,0],[2484166.597758362,-22188459.738090493,0,330780,1,0],[2726850.3695351942,-22201941.57690617,0,330840,2,0],[2969359.292414989,-22212569.614949435,0,330900,1,0],[3211658.569979493,-22220408.612689916,0,330960,0,0],[3453381.3846652824,-22225395.495914657,0,331020,1,0],[3694469.96750104,-22227581.752312392,0,331080,1,0],[3935109.396317645,-22226983.181042787,0,331140,0,0],[4175080.837671464,-22223620.337606404,0,331200,2,0],[4414524.929219863,-22217491.74837354,0,331260,2,0],[4653794.475347473,-22208607.619093865,0,331320,0,0],[4892487.616237731,-22197001.784498718,0,331380,1,0],[5130401.275890194,-22182683.587864447,0,331440,0,0],[5367507.536695803,-22165707.385283362,0,331500,1,0],[5603799.260724076,-22146040.73539447,0,331560,2,0],[5839594.986804148,-22123688.13840797,0,331620,2,0],[6075039.732231825,-22098651.65265711,0,331680,1,0],[6309950.254562921,-22070981.014989696,0,331740,2,0],[6544277.180413098,-22040651.545672778,0,331800,1,0],[6778015.819808342,-22007689.124599233,0,331860,0,0],[7010768.96120419,-21972188.250194084,0,331920,1,0],[7242537.920757211,-21934131.51691386,0,331980,0,0],[7473272.630359472,-21893558.916364674,0,332040,2,0],[7703164.578933583,-21850436.817684,0,332100,2,0],[7932505.9065857455,-21804732.398523774,0,332160,0,0],[8160946.510129274,-21756528.277400956,0,332220,0,0],[8388083.956904932,-21705914.603410583,0,332280,0,0],[8613920.190191245,-21652896.19762771,0,332340,2,0],[8838783.634542134,-21597435.455795,0,332400,0,0],[9062647.685343167,-21539510.043679796,0,332460,1,0],[9285320.783710942,-21479249.38637525,0,332520,0,0],[9506775.785207834,-21416610.683871683,0,332580,2,0],[9727188.28004586,-21351574.979683567,0,332640,1,0],[9946667.424648544,-21284109.868799504,0,332700,2,0],[10165237.400578996,-21214250.168608185,0,332760,1,0],[10382858.346355097,-21141987.805844735,0,332820,2,0],[10599503.726533122,-21067347.94086208,0,332880,2,0],[10815334.477273049,-20990293.025557946,0,332940,2,0],[11030316.843871327,-20910831.336451955,0,333000,0,0],[11244098.102953993,-20829074.63081028,0,333060,2,0],[11456666.472630097,-20745079.240745828,0,333120,0,0],[11667999.52408985,-20658861.968624584,0,333180,2,0],[11878075.889581032,-20570412.485851593,0,333240,1,0],[12087044.239771351,-20479673.22115362,0,333300,0,0],[12294566.164587433,-20386835.641924456,0,333360,2,0],[12500778.467038538,-20291830.050999187,0,333420,2,0],[12705985.88422772,-20194524.79494694,0,333480,1,0],[12910042.957179388,-20095015.428529866,0,333540,1,0],[13112698.303884791,-19993369.48713825,0,333600,1,0],[13314011.79874807,-19889648.95320743,0,333660,0,0],[13513740.643418364,-19783899.66023232,0,333720,0,0],[13711749.320093567,-19676273.840961833,0,333780,0,0],[13908025.950606098,-19566774.056503262,0,333840,2,0],[14102864.448541488,-19455248.567844365,0,333900,1,0],[14296384.925683914,-19341597.861011025,0,333960,0,0],[14488284.25688055,-19226102.44600797,0,334020,2,0],[14678703.696104625,-19108567.51045109,0,334080,1,0],[14867759.195730148,-18988998.375418425,0,334140,1,0],[15055301.38344987,-18867487.399326395,0,334200,2,0],[15241433.31047649,-18743946.91102802,0,334260,0,0],[15426045.587750517,-18618516.362184327,0,334320,0,0],[15608787.434257627,-18491389.500932872,0,334380,0,0],[15789642.91794235,-18362600.64957811,0,334440,1,0],[15968752.709837241,-18232065.99796261,0,334500,2,0],[16146404.342877552,-18099574.39924422,0,334560,0,0],[16322453.324032543,-17965262.732166857,0,334620,1,0],[16496677.49425252,-17829255.070516422,0,334680,0,0],[16669165.9353014,-17691591.031051137,0,334740,2,0],[16839950.95134165,-17552134.384000923,0,334800,2,0],[17009338.396648787,-17410722.805396143,0,334860,1,0],[17177177.251603473,-17267450.64424666,0,334920,2,0],[17343450.40798511,-17122343.330028012,0,334980,2,0],[17508261.569791842,-16975305.38718441,0,335040,0,0],[17671358.18099098,-16826604.13303834,0,335100,0,0],[17832429.177219816,-16676460.553223431,0,335160,1,0],[17991608.59239893,-16524809.083768275,0,335220,2,0],[18149148.410687864,-16371388.887589589,0,335280,1,0],[18305061.650645114,-16216252.135608708,0,335340,1,0],[18459134.42074466,-16059507.351446588,0,335400,1,0],[18611429.08296531,-15901220.3933283,0,335460,1,0],[18761880.971679416,-15741339.241620557,0,335520,1,0],[18910520.707846332,-15579958.92506939,0,335580,0,0],[19057170.16425849,-15417165.094363675,0,335640,1,0],[19201888.686824985,-15253010.184147933,0,335700,1,0],[19344706.5515805,-15087369.141070418,0,335760,1,0],[19485628.552406814,-14920250.709624369,0,335820,0,0],[19624570.754217982,-14751844.906126095,0,335880,0,0],[19761372.776680086,-14582283.007761646,0,335940,2,0],[19896261.12000369,-14411311.793483252,0,336000,1,0],[20029331.66951723,-14238791.685409565,0,336060,2,0],[20160590.591480657,-14064765.806407932,0,336120,0,0],[20289872.2944726,-13889358.874481449,0,336180,2,0],[20417212.1955705,-13712607.753828075,0,336240,0,0],[20542585.8148236,-13534555.909200879,0,336300,1,0],[20665892.87675614,-13355347.94329187,0,336360,2,0],[20787271.543755565,-13174700.09010476,0,336420,1,0],[20906780.47132795,-12992622.83945953,0,336480,2,0],[21024382.812343195,-12809156.524361903,0,336540,0,0],[21139923.32999383,-12624443.101169622,0,336600,1,0],[21253372.342494864,-12438699.426683057,0,336660,2,0],[21364873.4212301,-12251583.232781775,0,336720,1,0],[21474377.90006809,-12063132.22064679,0,336780,0,0],[21581737.423689585,-11873688.497619588,0,336840,1,0],[21686969.25984438,-11683267.553401725,0,336900,1,0],[21790093.85574951,-11491717.120201344,0,336960,0,0],[21891056.653794635,-11299235.885090556,0,337020,1,0],[21989812.235466067,-11105803.987869801,0,337080,1,0],[22086490.398519713,-10911328.383886218,0,337140,2,0],[22181121.643881135,-10715633.094534779,0,337200,1,0],[22273685.108865183,-10518743.403807078,0,337260,1,0],[22364097.771906003,-10320839.776922464,0,337320,1,0],[22452396.01076386,-10121971.339787565,0,337380,1,0],[22538513.658302955,-9922114.775421398,0,337440,2,0],[22622553.037924197,-9721129.351213565,0,337500,2,0],[22704535.19046092,-9518868.493061328,0,337560,0,0],[22784363.286822226,-9315724.412098575,0,337620,1,0],[22861909.79600871,-9111832.757336928,0,337680,2,0],[22937322.812701296,-8906914.472285712,0,337740,2,0],[23010648.420973897,-8700754.582797285,0,337800,1,0],[23081825.81698484,-8493624.528721923,0,337860,0,0],[23150710.865379177,-8285841.117520025,0,337920,1,0],[23217296.94576052,-8077433.262366714,0,337980,0,0],[23281602.203614004,-7868412.793547967,0,338040,0,0],[23343549.735847548,-7658962.3774486175,0,338100,1,0],[23403172.619458407,-7448969.667004211,0,338160,1,0],[23460562.459614743,-7238235.612175236,0,338220,2,0],[23515689.482852187,-7026628.188255254,0,338280,1,0],[23568582.51368616,-6814162.160609479,0,338340,1,0],[23619215.88386572,-6601036.043720132,0,338400,0,0],[23667476.31554455,-6387455.16443582,0,338460,2,0],[23713441.676585343,-6173240.811336162,0,338520,0,0],[23757109.296170756,-5958422.708514539,0,338580,2,0],[23798432.192441635,-5743019.583943233,0,338640,1,0],[23837493.611729637,-5526880.548241128,0,338700,0,0],[23874149.519384142,-5310378.676880894,0,338760,2,0],[23908504.230407164,-5093367.3969966965,0,338820,0,0],[23940466.899297953,-4875832.872502119,0,338880,2,0],[23970099.019165,-4657842.183515885,0,338940,1,0],[23997408.835965946,-4439203.599204561,0,339000,2,0],[24022350.242407598,-4219940.143429453,0,339060,2,0],[24044939.32215078,-3999911.396991558,0,339120,0,0],[24065164.18766526,-3779493.4812409286,0,339180,0,0],[24082961.499403164,-3559051.5822837977,0,339240,1,0],[24098376.1287567,-3338424.139153024,0,339300,1,0],[24111359.558330413,-3117486.702812835,0,339360,2,0],[24121962.08831851,-2896031.9315511966,0,339420,1,0],[24130140.358142126,-2674110.6923951367,0,339480,0,0],[24135904.111747086,-2452121.173344428,0,339540,1,0],[24139227.16634609,-2230065.9468171205,0,339600,0,0],[24140144.833680153,-2007954.0060761068,0,339660,2,0],[24138603.408202063,-1785640.904623713,0,339720,0,0],[24134622.854296956,-1563135.1523823426,0,339780,2,0],[24128190.9904796,-1340491.2343203526,0,339840,1,0],[24119325.304495767,-1117523.4295449373,0,339900,0,0],[24107983.23203537,-894623.6412674207,0,339960,2,0],[24094181.049093656,-671630.4964581287,0,340020,2,0],[24077888.83137002,-448189.4021132648,0,340080,0,0],[24059110.07261013,-224742.67298482364,0,340140,0,0],[24037910.73516578,-1610.540039785031,0,340200,1,0],[24014222.019051213,221345.35124809033,0,340260,1,0],[23988045.96647182,444285.4127867859,0,340320,0,0],[23959429.055362634,666987.0587467947,0,340380,1,0],[23928311.56950098,889441.813235838,0,340440,1,0],[23894690.016958,1111808.8004220556,0,340500,2,0],[23858542.874204233,1334245.8114828032,0,340560,0,0],[23819900.79206577,1556529.7772018206,0,340620,2,0],[23778727.49824013,1778649.8052279346,0,340680,2,0],[23734989.99487496,2000927.7680200224,0,340740,1,0],[23688675.401978116,2223184.2601795043,0,340800,2,0],[23639783.87936335,2445384.7770891692,0,340860,0,0],[23588410.385659043,2667313.5946830544,0,340920,2,0],[23534483.230620336,2888953.393023952,0,340980,1,0],[23477972.96256215,3110457.277196862,0,341040,1,0],[23418927.239129752,3331628.998978417,0,341100,0,0],[23357409.11997339,3552253.271060116,0,341160,1,0],[23293377.354661684,3772338.4876131197,0,341220,0,0],[23226861.62511396,3991832.03364252,0,341280,2,0],[23157795.781620417,4210879.275544685,0,341340,1,0],[23086149.760840837,4429655.086068489,0,341400,2,0],[23011878.79045749,4648090.753988379,0,341460,0,0],[22935038.198357247,4866016.15064168,0,341520,0,0],[22855808.100506864,5083050.954515013,0,341580,2,0],[22773974.47157787,5299546.454577351,0,341640,1,0],[22689541.307122823,5515585.5653695585,0,341700,1,0],[22602546.659579232,5731018.932191172,0,341760,1,0],[22513024.04737138,5945795.75351096,0,341820,2,0],[22420816.713187426,6160076.194621098,0,341880,0,0],[22326099.310728006,6373653.865759804,0,341940,1,0],[22228875.272530116,6586322.563765004,0,342000,2,0],[22129012.382354658,6798392.497466261,0,342060,0,0],[22026599.6588043,7009681.598105707,0,342120,0,0],[21921791.54283387,7219837.475737046,0,342180,1,0],[21814494.784178406,7428988.609724961,0,342240,1,0],[21704640.239666615,7637266.250060212,0,342300,1,0],[21592226.226075437,7844654.207849369,0,342360,2,0],[21477190.505757987,8051259.85002811,0,342420,1,0],[21359490.270707056,8257074.349942281,0,342480,2,0],[21239140.053751532,8462059.43889532,0,342540,0,0],[21116261.085647438,8665999.403920878,0,342600,0,0],[20991018.906896837,8868626.149519378,0,342660,1,0],[20863320.036027793,9070008.263106076,0,342720,0,0],[20733181.926800724,9270111.90109124,0,342780,1,0],[20600587.524154916,9468964.886767728,0,342840,2,0],[20465373.373757686,9666770.689747382,0,342900,1,0],[20327517.16582936,9863547.362047803,0,342960,1,0],[20187127.12798225,10059101.742703913,0,343020,1,0],[20044215.480031874,10253394.039894274,0,343080,1,0],[19898783.894986488,10446379.301437078,0,343140,1,0],[19750836.628699414,10638062.775520429,0,343200,2,0],[19600294.211680762,10828533.860068073,0,343260,1,0],[19447096.021068346,11017760.442820998,0,343320,0,0],[19291530.76775739,11205417.935255738,0,343380,0,0],[19133703.94430064,11391370.153748756,0,343440,1,0],[18973514.878829703,11575691.463978196,0,343500,1,0],[18810822.6866507,11758507.886017386,0,343560,1,0],[18645677.488364924,11939774.66213662,0,343620,2,0],[18477940.140435044,12119610.38589077,0,343680,2,0],[18307487.915844385,12298092.959445497,0,343740,1,0],[18134462.69513926,12475047.467641745,0,343800,1,0],[17959010.59221243,12650329.576145854,0,343860,0,0],[17781265.698869888,12823770.36453406,0,343920,1,0],[17601213.43635242,12995329.789814837,0,343980,2,0],[17418615.02403621,13165241.925189124,0,344040,1,0],[17233495.781594437,13333462.470238237,0,344100,2,0],[17045844.241100136,13499952.286214659,0,344160,2,0],[16855531.325674474,13664796.137729276,0,344220,1,0],[16662716.352991233,13827835.553016774,0,344280,1,0],[16467565.58396725,13988921.66445022,0,344340,2,0],[16269916.512396306,14148137.131338546,0,344400,1,0],[16069801.633317726,14305445.89194092,0,344460,0,0],[15867525.369037747,14460563.013937127,0,344520,1,0],[15663076.191701366,14613477.706155388,0,344580,0,0],[15456480.956604531,14764151.814647175,0,344640,1,0],[15247769.107445044,14912549.242739229,0,344700,0,0],[15036963.84482775,15058656.63558444,0,344760,0,0],[14824198.62456158,15202308.544447139,0,344820,0,0],[14609519.960537165,15343480.285929667,0,344880,0,0],[14392947.24951945,15482131.802016998,0,344940,2,0],[14174167.892483098,15618446.357110087,0,345000,0,0],[13953218.185426911,15752357.619279748,0,345060,1,0],[13730289.854502993,15883751.462460695,0,345120,2,0],[13505075.77798625,16012776.721310012,0,345180,2,0],[13277431.191194328,16139495.84898901,0,345240,2,0],[13047394.87050917,16263838.190276619,0,345300,1,0],[12815112.309669508,16385694.984452464,0,345360,1,0],[12580809.457403067,16504928.964247748,0,345420,1,0],[12344481.254653644,16621516.78665046,0,345480,1,0],[12106145.213734651,16735427.699408941,0,345540,0,0],[11866020.692070005,16846522.151973322,0,345600,1,0],[11624108.078038968,16954784.006094165,0,345660,2,0],[11380105.268485246,17060333.888546735,0,345720,1,0],[11134049.142571496,17163087.260684974,0,345780,2,0],[10885939.95356938,17263051.768466573,0,345840,0,0],[10636028.717396839,17360096.64699501,0,345900,0,0],[10384627.19413694,17454050.51330599,0,345960,1,0],[10131614.742709272,17544965.28773913,0,346020,0,0],[9877031.509835813,17632797.3409798,0,346080,2,0],[9620705.975310955,17717554.71320784,0,346140,2,0],[9362376.407444539,17799334.783518318,0,346200,2,0],[9102040.141081085,17878060.476062924,0,346260,0,0],[8840100.844110249,17953621.865142684,0,346320,2,0],[8576572.935398841,18025980.006947923,0,346380,1,0],[8311315.402425064,18095116.78395013,0,346440,2,0],[8044390.756470795,18161010.947711546,0,346500,0,0],[7775968.888167446,18223571.00653103,0,346560,2,0],[7506136.536601444,18282792.229486886,0,346620,1,0],[7234721.0691361455,18338625.919042278,0,346680,0,0],[6962125.785196546,18391008.73774796,0,346740,1,0],[6688389.201560185,18439890.270359144,0,346800,0,0],[6413576.522238176,18485220.636346534,0,346860,0,0],[6137878.063012598,18526965.124143615,0,346920,2,0],[5861004.011638368,18565119.095155988,0,346980,0,0],[5582976.655087934,18599683.765556432,0,347040,0,0],[5304230.912077964,18630548.306796737,0,347100,1,0],[5024601.256782033,18657710.173047263,0,347160,2,0],[4743797.904923538,18681186.62806648,0,347220,0,0],[4462048.916800193,18700918.746368665,0,347280,2,0],[4179392.4208200946,18716879.693498783,0,347340,1,0],[3895703.921443959,18729029.61427551,0,347400,0,0],[3611399.317054578,18737341.087670587,0,347460,1,0],[3326531.7640280104,18741790.392402563,0,347520,1,0],[3040981.058728967,18742322.35856971,0,347580,1,0],[2754768.3387330025,18738927.349991336,0,347640,0,0],[2468168.8544641635,18731583.86907379,0,347700,1,0],[2181236.261559691,18720273.291972432,0,347760,2,0],[1893631.5572933531,18704921.148349274,0,347820,2,0],[1605266.6970022935,18685512.22769687,0,347880,2,0],[1316192.4460926186,18662019.26007959,0,347940,0,0],[1026851.2315735784,18634429.755564317,0,348000,2,0],[737264.0580969551,18602734.609421387,0,348060,0,0],[447518.29302898806,18566899.06504388,0,348120,1,0],[157841.49647879042,18526925.34256493,0,348180,1,0],[-131871.63760611464,18482772.242956925,0,348240,1,0],[-421534.0391733883,18434405.46867701,0,348300,0,0],[-710935.3807964511,18381867.96218693,0,348360,0,0],[-999815.0609081192,18325167.22611176,0,348420,0,0],[-1288110.731215615,18264263.673332766,0,348480,2,0],[-1576118.8920575995,18199109.010351446,0,348540,1,0],[-1863916.176522623,18129608.722913235,0,348600,1,0],[-2151274.6623810614,18055826.328787535,0,348660,2,0],[-2438299.72817757,17977681.913136974,0,348720,1,0],[-2724905.1552335243,17895176.795923803,0,348780,2,0],[-3011022.8159631183,17808295.188196056,0,348840,2,0],[-3296766.943456394,17716952.165663432,0,348900,0,0],[-3581691.374830793,17621275.094546184,0,348960,1,0],[-3865550.407528135,17521300.01408412,0,349020,1,0],[-4148455.710637304,17416985.86399086,0,349080,2,0],[-4430503.542601181,17308236.492938124,0,349140,2,0],[-4711756.822480934,17195017.197682507,0,349200,0,0],[-4991825.533364778,17077433.92685856,0,349260,1,0],[-5270451.812572903,16955584.183393903,0,349320,1,0],[-5547740.412431069,16829366.34542113,0,349380,1,0],[-5823582.604872707,16698826.347114408,0,349440,1,0],[-6097919.93780188,16563941.717188913,0,349500,2,0],[-6370821.112015444,16424672.16107756,0,349560,0,0],[-6642053.657114953,16281084.937060235,0,349620,1,0],[-6911375.654364015,16133278.951949056,0,349680,2,0],[-7179023.530375003,15981104.426425606,0,349740,2,0],[-7445072.423746925,15824469.344159782,0,349800,0,0],[-7709118.197779258,15663621.458230339,0,349860,0,0],[-7970769.105215823,15498725.062782802,0,349920,0,0],[-8229964.047192247,15329828.668833196,0,349980,2,0],[-8486909.723530596,15156752.470361045,0,350040,0,0],[-8741551.499663247,14979519.278939756,0,350100,2,0],[-8993776.150287176,14798174.257204946,0,350160,0,0],[-9243515.480223678,14612721.967258038,0,350220,1,0],[-9490544.90831834,14423346.1383478,0,350280,0,0],[-9734779.505345602,14230065.391494894,0,350340,1,0],[-9976161.705751564,14032887.791964978,0,350400,2,0],[-10214874.298583614,13831651.172907531,0,350460,0,0],[-10450701.580777796,13626525.318846261,0,350520,2,0],[-10683569.26381403,13417530.848496612,0,350580,2,0],[-10913657.928531244,13204482.745079769,0,350640,2,0],[-11140908.82687675,12987410.10431252,0,350700,0,0],[-11364953.797506915,12766626.817439774,0,350760,0,0],[-11585485.554447588,12542427.71688705,0,350820,1,0],[-11802555.694825482,12314751.721153107,0,350880,2,0],[-12016316.348116878,12083375.857762722,0,350940,0,0],[-12226607.696918061,11848491.78525112,0,351000,2,0],[-12433358.089781139,11610158.661562063,0,351060,1,0],[-12636582.18834974,11368318.833717903,0,351120,2,0],[-12836234.543289062,11123006.101082174,0,351180,0,0],[-13032114.61895671,10874445.545389267,0,351240,1,0],[-13224082.264497349,10622836.537994072,0,351300,1,0],[-13412157.573196372,10368096.116167415,0,351360,0,0],[-13596159.92252892,10110447.907182563,0,351420,1,0],[-13776065.267544156,9849978.720207727,0,351480,0,0],[-13951796.596974557,9586729.136718038,0,351540,2,0],[-14123395.812286448,9320662.767712692,0,351600,1,0],[-14290911.776540758,9051678.707974805,0,351660,1,0],[-14454183.312432747,8780001.943306522,0,351720,2,0],[-14613273.97830101,8505564.07434372,0,351780,0,0],[-14768013.547912963,8228610.083651524,0,351840,1,0],[-14918300.990505451,7949364.151978135,0,351900,2,0],[-15064225.355307482,7667597.604169365,0,351960,2,0],[-15205835.53908484,7383244.574755738,0,352020,1,0],[-15343009.84503774,7096521.577754573,0,352080,0,0],[-15475554.455802992,6807873.798675915,0,352140,0,0],[-15603350.53038233,6517506.568998559,0,352200,1,0],[-15726441.956524434,6225386.576095576,0,352260,2,0],[-15844944.641523259,5931245.154931757,0,352320,2,0],[-15958880.898926785,5635025.068853562,0,352380,2,0],[-16068225.899061175,5336782.719142016,0,352440,1,0],[-16172878.62369706,5036805.498589829,0,352500,0,0],[-16272708.361651031,4735498.107648929,0,352560,1,0],[-16367669.217792606,4432985.270877061,0,352620,0,0],[-16457772.007738037,4129328.281408172,0,352680,0,0],[-16542926.075594513,3824807.971367281,0,352740,0,0],[-16623147.882189205,3519516.398373788,0,352800,2,0],[-16698503.854907071,3213195.2707622913,0,352860,2,0],[-16769070.134140361,2905577.8307659766,0,352920,0,0],[-16834770.73398882,2597122.2679452887,0,352980,1,0],[-16895531.92763124,2288088.7555404087,0,353040,0,0],[-16951364.795017052,1978570.0537097878,0,353100,2,0],[-17002315.146833774,1668470.5233017171,0,353160,1,0],[-17048392.40617167,1357724.995253466,0,353220,0,0],[-17089558.437456515,1046772.4254030995,0,353280,1,0],[-17125815.139107678,735676.1687607534,0,353340,0,0],[-17157178.90344729,424565.663365001,0,353400,1,0],[-17183647.22968434,113508.8800719169,0,353460,2,0],[-17205279.071779076,-197759.21693396414,0,353520,1,0],[-17222066.103088137,-509142.2203377518,0,353580,2,0],[-17234031.614448685,-820576.0667531878,0,353640,2,0],[-17241199.173642594,-1132141.2554415301,0,353700,1,0],[-17243565.365519833,-1443550.4204742222,0,353760,1,0],[-17241170.847038835,-1754579.5880353814,0,353820,2,0],[-17234015.17457975,-2065299.3358766453,0,353880,1,0],[-17222114.537743982,-2375628.9521596646,0,353940,0,0],[-17205524.29824273,-2685136.69434451,0,354000,2,0],[-17184267.621987168,-2993912.430422051,0,354060,0,0],[-17158350.08415487,-3301875.848305711,0,354120,1,0],[-17127845.532184612,-3608785.197607188,0,354180,1,0],[-17092745.644020014,-3914708.65746983,0,354240,2,0],[-17053087.522400614,-4219777.966590256,0,354300,1,0],[-17008890.058329068,-4523921.896671565,0,354360,0,0],[-16960243.40658469,-4826673.203953147,0,354420,2,0],[-16907150.44542695,-5128178.514509652,0,354480,1,0],[-16849631.6871861,-5428531.435615375,0,354540,0,0],[-16787786.319699455,-5727276.397136435,0,354600,0,0],[-16721704.445584621,-6024216.016363634,0,354660,2,0],[-16651344.607122444,-6319614.650287629,0,354720,0,0],[-16576767.956083827,-6613412.099574717,0,354780,2,0],[-16497984.870426673,-6905538.769421366,0,354840,1,0],[-16415031.69846838,-7196096.02425747,0,354900,1,0],[-16327978.92211025,-7484867.371199608,0,354960,0,0],[-16236949.961555969,-7771608.293512632,0,355020,2,0],[-16141914.202796532,-8056456.52936424,0,355080,2,0],[-16042821.541645372,-8339667.439502666,0,355140,0,0],[-15939825.333313601,-8620838.418241013,0,355200,1,0],[-15833073.251487955,-8899771.19891754,0,355260,2,0],[-15722424.350884499,-9176749.987914566,0,355320,0,0],[-15608071.07459594,-9451535.770451944,0,355380,1,0],[-15490087.614341537,-9723929.494142264,0,355440,1,0],[-15368474.580550667,-9994042.634500971,0,355500,1,0],[-15243276.083721934,-10261810.21157712,0,355560,1,0],[-15114560.687556244,-10527237.267732797,0,355620,2,0],[-14982288.612782426,-10790378.358833289,0,355680,1,0],[-14846525.044686567,-11051248.265843512,0,355740,1,0],[-14707390.508824797,-11309587.497085648,0,355800,1,0],[-14564954.586806221,-11565406.727245798,0,355860,1,0],[-14419279.226418149,-11818627.208759617,0,355920,0,0],[-14270494.535518339,-12069100.666001616,0,355980,0,0],[-14118759.701060465,-12316585.748765457,0,356040,0,0],[-13964143.26264014,-12561098.142122816,0,356100,1,0],[-13806596.177727688,-12802721.977622502,0,356160,2,0],[-13645980.105160778,-13041762.687134279,0,356220,1,0],[-13482339.403653681,-13278168.496787187,0,356280,0,0],[-13315959.72275854,-13511603.822025282,0,356340,2,0],[-13146779.46837179,-13742212.3523746,0,356400,0,0],[-12974862.667806007,-13969938.51335178,0,356460,1,0],[-12800356.77895101,-14194632.215454897,0,356520,2,0],[-12623108.032936556,-14416556.748510642,0,356580,1,0],[-12443188.414731931,-14635676.26480645,0,356640,2,0],[-12260614.092746388,-14851980.27446133,0,356700,1,0],[-12075463.342862707,-15065443.779680861,0,356760,1,0],[-11887916.07923514,-15275873.78253575,0,356820,2,0],[-11697883.039152328,-15483443.75009529,0,356880,0,0],[-11505565.979968505,-15687966.141555723,0,356940,2,0],[-11311006.628417639,-15889429.930424884,0,357000,1,0],[-11114118.175473403,-16087943.323183341,0,357060,1,0],[-10915114.456539424,-16283366.828541327,0,357120,0,0],[-10714154.957334386,-16475578.992408184,0,357180,1,0],[-10511303.929589894,-16664537.502174366,0,357240,0,0],[-10306615.123063006,-16850244.5579162,0,357300,2,0],[-10099985.544406323,-17032830.00853402,0,357360,0,0],[-9891519.947816264,-17212261.97047771,0,357420,0,0],[-9681505.783060523,-17388308.3544868,0,357480,2,0],[-9469711.609131133,-17561178.732845817,0,357540,2,0],[-9255935.382292444,-17731097.007578652,0,357600,2,0],[-9040215.191983316,-17898075.181862757,0,357660,2,0],[-8822597.63410579,-18062090.28447788,0,357720,0,0],[-8603435.91934352,-18222902.7126197,0,357780,0,0],[-8383053.627072338,-18380314.851007838,0,357840,0,0],[-8161492.633727382,-18534324.279237613,0,357900,2,0],[-7938526.540440052,-18685109.212547284,0,357960,2,0],[-7713910.157932699,-18832902.469089277,0,358020,0,0],[-7487974.496899872,-18977495.26588691,0,358080,0,0],[-7261067.900158764,-19118687.596563026,0,358140,0,0],[-7033263.965537407,-19256490.90037355,0,358200,2,0],[-6804290.386341482,-19391075.71501849,0,358260,2,0],[-6573858.383489438,-19522621.669342652,0,358320,0,0],[-6342376.349927795,-19650972.16115906,0,358380,0,0],[-6110156.400280424,-19775960.57889675,0,358440,2,0],[-5876958.181569741,-19897747.55784461,0,358500,1,0],[-5642644.880952285,-20016403.32856026,0,358560,1,0],[-5407428.055206323,-20131887.613935344,0,358620,1,0],[-5171379.328794779,-20244171.993214794,0,358680,2,0],[-4934330.146560129,-20353338.145458926,0,358740,2,0],[-4696191.5224040495,-20459495.291850254,0,358800,1,0],[-4457152.1923611695,-20562523.088617396,0,358860,0,0],[-4217594.676281143,-20662354.270646017,0,358920,0,0],[-3977739.195447322,-20758853.365048464,0,358980,1,0],[-3737426.764432736,-20852129.163559034,0,359040,2,0],[-3496396.272293697,-20942338.283531196,0,359100,1,0],[-3254665.340056433,-21029469.521945577,0,359160,2,0],[-3012287.298485384,-21113524.471842036,0,359220,1,0],[-2769288.431711711,-21194497.738182157,0,359280,1,0],[-2525882.124973413,-21272376.579005793,0,359340,0,0],[-2282266.6462633135,-21347095.622447357,0,359400,0,0],[-2038679.9111609985,-21418617.485900365,0,359460,0,0],[-1795154.7264520277,-21486943.39279286,0,359520,2,0],[-1551360.4732836839,-21552195.9755302,0,359580,0,0],[-1307351.2429848858,-21614393.409598008,0,359640,0,0],[-1063493.4888331476,-21673448.643719885,0,359700,2,0],[-819494.2723727417,-21729436.25237858,0,359760,1,0],[-575206.1930800687,-21782448.905722156,0,359820,2,0],[-330649.5100803481,-21832494.578511506,0,359880,2,0],[-85695.40957868187,-21879577.457614657,0,359940,2,0],[159614.35877287606,-21923739.866247136,0,360000,1,0],[405065.1319288569,-21964917.56074809,0,360060,1,0],[650477.5395201558,-22003146.784580484,0,360120,0,0],[895633.2205369171,-22038406.15192968,0,360180,2,0],[1140662.8991685777,-22070695.764190346,0,360240,0,0],[1385524.644752668,-22100062.90852008,0,360300,0,0],[1629860.099605765,-22126451.42989566,0,360360,2,0],[1873982.9217390195,-22149960.142967064,0,360420,0,0],[2117849.15081601,-22170544.790240668,0,360480,0,0],[2361101.6508328263,-22188235.84088419,0,360540,1,0],[2603854.014967014,-22203047.480415225,0,360600,2,0],[2846450.114635878,-22215034.51726819,0,360660,1,0],[3088873.4702155055,-22224174.83337831,0,360720,2,0],[3331082.873653606,-22230500.113109194,0,360780,1,0],[3573044.349323399,-22234015.213976137,0,360840,1,0],[3814554.2124739573,-22234738.436754193,0,360900,1,0],[4055599.873219,-22232679.190377753,0,360960,0,0],[4295940.343455171,-22227873.03417002,0,361020,1,0],[4535594.580972247,-22220312.15615896,0,361080,1,0],[4774669.21907131,-22210013.63590555,0,361140,2,0],[5013355.30752482,-22196993.681795277,0,361200,1,0],[5251618.963381069,-22181276.82814913,0,361260,0,0],[5489049.595230604,-22162863.90115465,0,361320,0,0],[5725447.099767005,-22141800.813908473,0,361380,1,0],[5961013.716116361,-22118126.680759847,0,361440,2,0],[6196031.361112235,-22091781.950697977,0,361500,0,0],[6430301.863578685,-22062814.005942624,0,361560,1,0],[6663646.4053156935,-22031243.191735137,0,361620,1,0],[6896200.064385956,-21997090.028743498,0,361680,2,0],[7128109.506696112,-21960327.2563856,0,361740,2,0],[7359583.541925301,-21920972.570625506,0,361800,0,0],[7590182.96780689,-21879048.588315204,0,361860,1,0],[7819712.190245761,-21834625.848298978,0,361920,0,0],[8048179.925893306,-21787756.615628745,0,361980,2,0],[8275715.785304712,-21738366.85728822,0,362040,2,0],[8502687.379664153,-21686417.571681492,0,362100,2,0],[8729022.933200205,-21631937.04146479,0,362160,1,0],[8954547.969835578,-21574961.20165855,0,362220,1,0],[9179071.273398401,-21515541.795501295,0,362280,1,0],[9402554.230232963,-21453752.1957287,0,362340,1,0],[9624989.487600043,-21389528.201989647,0,362400,1,0],[9846360.124562018,-21322935.416572183,0,362460,2,0],[10066819.2832898,-21253924.67108492,0,362520,1,0],[10286322.66685373,-21182547.334000956,0,362580,1,0],[10504703.01546504,-21108799.319441844,0,362640,1,0],[10721930.500502279,-21032756.50295039,0,362700,0,0],[10937820.438944673,-20954495.666606836,0,362760,0,0],[11152200.235915998,-20874065.639829885,0,362820,0,0],[11365016.038242986,-20791493.276065134,0,362880,2,0],[11576615.247539315,-20706709.190761097,0,362940,1,0],[11787121.819461545,-20619602.71698121,0,363000,1,0],[11996385.34535924,-20530318.939456638,0,363060,1,0],[12204367.888907334,-20438802.330778323,0,363120,1,0],[12411053.485255457,-20345153.558460265,0,363180,2,0],[12616555.395852782,-20249242.45370544,0,363240,0,0],[12820759.489208268,-20151216.380090594,0,363300,1,0],[13023445.177188795,-20051111.194647845,0,363360,2,0],[13224921.722290752,-19948846.46966929,0,363420,0,0],[13425001.889264679,-19844498.04450704,0,363480,0,0],[13623376.004128745,-19738222.201419502,0,363540,1,0],[13820163.968972284,-19630004.675870974,0,363600,0,0],[14015373.765887395,-19519823.38410634,0,363660,2,0],[14209144.272543676,-19407648.93010928,0,363720,1,0],[14401579.939978499,-19293345.81237973,0,363780,0,0],[14592388.548824629,-19177177.55465941,0,363840,1,0],[14781542.946051272,-19059128.807316393,0,363900,2,0],[14969337.045008067,-18939033.75436856,0,363960,1,0],[15155782.380373465,-18816923.01382657,0,364020,1,0],[15340651.224212952,-18692869.81290269,0,364080,2,0],[15524120.950384624,-18566831.196183138,0,364140,0,0],[15706041.811557166,-18438904.009831876,0,364200,1,0],[15886223.721525904,-18309248.982776776,0,364260,2,0],[16064926.822182335,-18177621.534602825,0,364320,2,0],[16242343.177192757,-18043954.497003477,0,364380,1,0],[16418249.34760242,-17908370.54000708,0,364440,1,0],[16592485.049335735,-17770988.326598708,0,364500,2,0],[16765244.685600528,-17631744.47913438,0,364560,0,0],[16936323.95993895,-17490710.66048258,0,364620,1,0],[17105580.023660373,-17348064.13198917,0,364680,0,0],[17272985.705379993,-17203819.99781596,0,364740,2,0],[17438699.239281185,-17057869.243626464,0,364800,1,0],[17602817.002788927,-16910112.40075296,0,364860,1,0],[17765196.20797788,-16760688.123357287,0,364920,1,0],[17925852.811889388,-16609616.414396686,0,364980,0,0],[18084592.944875084,-16457026.480114939,0,365040,2,0],[18241537.267291397,-16302805.01477302,0,365100,0,0],[18396709.105883863,-16147012.931943389,0,365160,0,0],[18549837.200118154,-15989908.543688929,0,365220,1,0],[18701036.656002074,-15831338.790957345,0,365280,2,0],[18850528.126377266,-15671110.708967457,0,365340,2,0],[18998414.14525725,-15509094.975840004,0,365400,1,0],[19144587.52040833,-15345428.578159612,0,365460,1,0],[19288891.21070479,-15180272.066492364,0,365520,0,0],[19431211.89820927,-15013767.583462201,0,365580,0,0],[19571422.765536375,-14846129.266330138,0,365640,2,0],[19709719.04410604,-14676986.094529122,0,365700,0,0],[19846120.595468313,-14506485.628597803,0,365760,2,0],[19980597.94855056,-14334546.246521031,0,365820,1,0],[20113269.359581497,-14161080.11979541,0,365880,2,0],[20244129.83735078,-13986118.251098711,0,365940,1,0],[20373110.339859664,-13809673.92356625,0,366000,1,0],[20500138.20345121,-13631886.690771539,0,366060,0,0],[20625088.70362249,-13452940.754159337,0,366120,0,0],[20747877.104234643,-13272991.844478074,0,366180,1,0],[20868545.221145015,-13091928.8851795,0,366240,0,0],[20987136.358545624,-12909751.689625127,0,366300,2,0],[21103681.809064355,-12726341.628012534,0,366360,1,0],[21218323.14320682,-12541530.623421613,0,366420,0,0],[21330837.986764196,-12355705.465531446,0,366480,1,0],[21441193.474443536,-12168854.344062932,0,366540,2,0],[21549614.71093089,-11980652.619872164,0,366600,2,0],[21656129.26341991,-11791011.158627078,0,366660,1,0],[21760679.766789887,-11600069.411740806,0,366720,0,0],[21863043.635566093,-11408188.243922543,0,366780,2,0],[21963336.359102823,-11215210.512918819,0,366840,2,0],[22061684.278119646,-11020844.44667746,0,366900,2,0],[22158051.21490757,-10825103.634839201,0,366960,0,0],[22252327.4700328,-10628324.23106919,0,367020,0,0],[22344323.14834976,-10430856.808071021,0,367080,0,0],[22434014.517886993,-10232693.207639813,0,367140,2,0],[22521589.242573295,-10033598.669061095,0,367200,2,0],[22607114.090641204,-9833175.820250813,0,367260,1,0],[22690574.365387958,-9631638.685135247,0,367320,0,0],[22771766.761633925,-9429357.719692294,0,367380,2,0],[22850794.719662618,-9226195.505895987,0,367440,0,0],[22927636.248996228,-9022119.975174453,0,367500,0,0],[23002112.007132385,-8817542.46596546,0,367560,0,0],[23074306.525416363,-8612444.43633491,0,367620,1,0],[23144204.108489957,-8406667.885673076,0,367680,1,0],[23211894.474058077,-8200118.369337817,0,367740,1,0],[23277321.367986232,-7992754.829165827,0,367800,2,0],[23340582.304555196,-7784459.292946655,0,367860,2,0],[23401679.763991516,-7575055.415896781,0,367920,1,0],[23460599.64094027,-7364777.211398791,0,367980,2,0],[23517286.507994067,-7153585.329155171,0,368040,1,0],[23571731.611934192,-6941533.89569471,0,368100,0,0],[23623872.19622811,-6728994.009313982,0,368160,0,0],[23673651.71018422,-6516156.625434518,0,368220,2,0],[23721129.04520945,-6302686.495306094,0,368280,2,0],[23766368.81369923,-6088249.818608757,0,368340,2,0],[23809378.651834793,-5872854.635480447,0,368400,0,0],[23850054.824168477,-5656910.496567507,0,368460,0,0],[23888349.173355028,-5440762.984238448,0,368520,2,0],[23924339.733034655,-5224082.000737823,0,368580,1,0],[23957993.11863956,-5006714.755801473,0,368640,2,0],[23989332.46227959,-4788672.170384272,0,368700,0,0],[24018333.722453356,-4570179.276689699,0,368760,0,0],[24044927.53412456,-4351575.953206162,0,368820,0,0],[24069109.792066723,-4132915.506417123,0,368880,1,0],[24090894.246536728,-3914006.2038862463,0,368940,1,0],[24110328.709399894,-3694737.504447014,0,369000,1,0],[24127350.86643435,-3475080.7486801515,0,369060,1,0],[24141978.42693819,-3255092.9493468264,0,369120,2,0],[24154248.72193642,-3034589.9263580884,0,369180,0,0],[24164086.62162878,-2813788.7433542125,0,369240,0,0],[24171531.404072855,-2593066.570066785,0,369300,2,0],[24176534.68030074,-2372105.8851571917,0,369360,1,0],[24179126.113508087,-2150696.379491909,0,369420,1,0],[24179317.80504619,-1929089.5906206053,0,369480,2,0],[24177044.58985555,-1707092.6352486382,0,369540,1,0],[24172368.758757636,-1484765.4022933957,0,369600,1,0],[24165219.488917224,-1262280.7316199737,0,369660,2,0],[24155613.741560653,-1039477.2195054241,0,369720,1,0],[24143579.06863222,-816412.1908707782,0,369780,1,0],[24129058.57840413,-593235.8660657962,0,369840,1,0],[24112076.699940983,-370028.840843263,0,369900,1,0],[24092653.408886697,-146750.16460982885,0,369960,0,0],[24070734.783896685,76328.55160271839,0,370020,0,0],[24046415.183914416,299056.62735599483,0,370080,2,0],[24019580.805514455,521763.29464983655,0,370140,1,0],[23990275.983981203,744585.2776613636,0,370200,0,0],[23958476.8806893,967153.5456111837,0,370260,1,0],[23924212.053164214,1189437.6879404054,0,370320,0,0],[23887481.857368153,1411430.5578722367,0,370380,2,0],[23848268.36266687,1633267.1151201231,0,370440,2,0],[23806449.06060143,1855288.9631898957,0,370500,0,0],[23762164.265934307,2077113.140893898,0,370560,2,0],[23715335.07581799,2298724.2132246145,0,370620,1,0],[23665952.328829315,2520278.817499248,0,370680,0,0],[23614092.166971564,2741367.9451390663,0,370740,1,0],[23559781.2612638,2961987.010409759,0,370800,1,0],[23502913.909368612,3182305.4523056108,0,370860,1,0],[23443521.48412251,3402268.7229794036,0,370920,2,0],[23381549.840687327,3622049.962815096,0,370980,1,0],[23316993.42768216,3841612.473239207,0,371040,1,0],[23249906.071580123,4060738.794351711,0,371100,2,0],[23180236.936632924,4279599.880974313,0,371160,2,0],[23107903.235854007,4498359.245128213,0,371220,0,0],[23033048.693903662,4716600.601447886,0,371280,0,0],[22955763.301471952,4933972.361193526,0,371340,0,0],[22876063.56060264,5150468.385181695,0,371400,0,0],[22793927.412507698,5366051.304264559,0,371460,2,0],[22709241.445616383,5581044.535196988,0,371520,0,0],[22622009.626890313,5795412.051174428,0,371580,2,0],[22532237.871579558,6009117.910359191,0,371640,2,0],[22439764.98726809,6222492.11978169,0,371700,1,0],[22344672.34836083,6435299.753636699,0,371760,0,0],[22247082.963468313,6647221.90166591,0,371820,0,0],[22147146.102460854,6858050.445482011,0,371880,2,0],[22044624.30020006,7068087.562396705,0,371940,1,0],[21939476.924428996,7277474.29886411,0,372000,2,0],[21831699.631963797,7486170.626322965,0,372060,0,0],[21721371.506379604,7693989.3526993785,0,372120,2,0],[21608513.021439563,7900924.507215077,0,372180,1,0],[21493001.117802933,8107085.687899586,0,372240,0,0],[21375051.210554026,8312118.930482336,0,372300,2,0],[21254532.52101829,8516156.408338247,0,372360,1,0],[21131399.279040717,8719334.204696318,0,372420,1,0],[21005716.94324147,8921463.058408484,0,372480,2,0],[20877421.67776549,9122694.748985134,0,372540,0,0],[20746581.34461504,9322794.090253057,0,372600,1,0],[20613319.518961333,9521597.945349088,0,372660,0,0],[20477610.543423183,9719102.091887183,0,372720,1,0],[20339493.726460736,9915258.991054157,0,372780,2,0],[20198773.822817143,10110331.297412978,0,372840,2,0],[20055285.585959535,10304442.17618338,0,372900,0,0],[19909318.041082647,10497258.731188284,0,372960,1,0],[19760942.704511713,10688596.645311823,0,373020,0,0],[19610191.336167514,10878452.67293183,0,373080,1,0],[19457039.90570311,11066796.214037547,0,373140,1,0],[19301409.914748844,11253712.152136756,0,373200,2,0],[19143177.388134383,11439314.524043713,0,373260,0,0],[18982471.035634004,11623447.703164138,0,373320,2,0],[18819289.14394281,11806060.174517762,0,373380,1,0],[18653524.761656094,11987267.592382489,0,373440,2,0],[18485174.1884637,12167018.218662951,0,373500,0,0],[18314395.577871677,12345172.120499633,0,373560,1,0],[18141290.352954015,12521535.398604596,0,373620,0,0],[17965875.868220795,12696095.099290162,0,373680,2,0],[17788051.62569863,12868943.034793565,0,373740,2,0],[17607547.01014678,13040314.67827172,0,373800,2,0],[17424391.986765597,13210145.156914527,0,373860,0,0],[17238844.978833765,13378158.885620816,0,373920,1,0],[17051046.702484854,13544211.431338519,0,373980,0,0],[16860998.289851762,13708254.138863055,0,374040,0,0],[16668885.410628734,13870152.339579199,0,374100,1,0],[16474548.657862872,14029975.074923191,0,374160,0,0],[16278039.373847349,14187707.849046014,0,374220,2,0],[16079192.347229049,14343400.707468256,0,374280,1,0],[15877896.668023001,14497155.84246911,0,374340,1,0],[15674324.91878107,14648824.147679217,0,374400,0,0],[15468603.367678033,14798258.211221324,0,374460,2,0],[15260637.62035033,14945510.618395112,0,374520,1,0],[15050261.320107192,15090674.857038233,0,374580,1,0],[14837655.606253536,15233621.061529767,0,374640,1,0],[14622841.063547697,15374271.11863656,0,374700,0,0],[14405999.703836555,15512526.926483935,0,374760,1,0],[14187093.223092942,15648340.97842006,0,374820,2,0],[13965894.805108733,15781861.602159938,0,374880,2,0],[13742244.860919822,15913143.779252997,0,374940,0,0],[13516468.294916974,16041964.990031334,0,375000,2,0],[13288577.896298327,16168296.876632966,0,375060,0,0],[13058637.639020372,16292099.601626314,0,375120,0,0],[12826947.343596762,16413169.25809606,0,375180,1,0],[12593365.036428533,16531548.247020356,0,375240,1,0],[12357777.951921731,16647279.934736513,0,375300,2,0],[12120050.008291312,16760402.424887147,0,375360,0,0],[11880338.641212644,16870828.74201588,0,375420,1,0],[11638859.192645311,16978411.675367963,0,375480,1,0],[11395477.451411469,17083195.97904249,0,375540,2,0],[11150020.119097285,17185221.594422996,0,375600,2,0],[10902379.158945058,17284525.446905658,0,375660,2,0],[10652569.878107043,17381050.1005807,0,375720,1,0],[10400787.662085552,17474694.112432014,0,375780,0,0],[10147408.592135392,17565293.915012732,0,375840,2,0],[9892268.627937485,17652880.939492118,0,375900,1,0],[9635261.30834361,17737460.86622995,0,375960,0,0],[9376735.50435666,17818894.48682851,0,376020,1,0],[9116728.538717462,17897125.832949005,0,376080,2,0],[8854932.735529808,17972272.053823788,0,376140,2,0],[8591211.480891658,18044281.918098744,0,376200,1,0],[8325785.684913862,18113103.382184792,0,376260,2,0],[8058657.525474887,18178685.57882848,0,376320,1,0],[7789895.900660439,18240997.234434407,0,376380,1,0],[7519697.71874711,18299939.000448845,0,376440,0,0],[7248303.277127017,18355469.788395375,0,376500,1,0],[6975708.376903977,18407540.606282547,0,376560,0,0],[6701980.1425654525,18456106.724796467,0,376620,0,0],[6427362.2305574585,18501114.76280783,0,376680,2,0],[6151494.446725265,18542592.536090188,0,376740,1,0],[5874245.228311528,18580517.64661048,0,376800,0,0],[5596065.7780299885,18614822.343600083,0,376860,0,0],[5317142.456511099,18645453.718261663,0,376920,1,0],[5037346.283273155,18672383.382368043,0,376980,0,0],[4756732.971246667,18695600.998458505,0,377040,2,0],[4475185.721998487,18715096.03112214,0,377100,2,0],[4192357.8513676953,18730824.638508353,0,377160,2,0],[3908321.0285663,18742772.02049446,0,377220,1,0],[3623308.359622184,18750891.153538242,0,377280,2,0],[3337361.541865321,18755169.17757095,0,377340,1,0],[3050556.14920524,18755539.001271646,0,377400,1,0],[2763108.6010314682,18752004.242675964,0,377460,0,0],[2475247.57810322,18744501.424500138,0,377520,0,0],[2187244.654724291,18733045.543178085,0,377580,0,0],[1899110.5341276024,18717580.23494496,0,377640,0,0],[1610947.5717310002,18698134.952650744,0,377700,2,0],[1322410.600616121,18674591.306170724,0,377760,0,0],[1033601.1725256215,18646986.094461206,0,377820,1,0],[744754.1111471558,18615291.024890758,0,377880,2,0],[455535.2630217948,18579450.28447846,0,377940,0,0],[166234.4537084049,18539455.41440205,0,378000,2,0],[-123119.07813442188,18495265.949285366,0,378060,0,0],[-412425.3056082326,18446911.67681788,0,378120,1,0],[-701469.9099360042,18394344.106178008,0,378180,1,0],[-990357.7605844853,18337560.20736802,0,378240,1,0],[-1279019.9390618927,18276528.176483106,0,378300,2,0],[-1567552.6230250115,18211188.020430643,0,378360,0,0],[-1855705.9230195438,18141578.90493935,0,378420,1,0],[-2143255.4017913826,18067718.345437534,0,378480,0,0],[-2430114.316815759,17989592.444919806,0,378540,2,0],[-2716415.975899619,17907153.297289543,0,378600,0,0],[-3002033.002871962,17820383.45651834,0,378660,0,0],[-3286574.8486759574,17729401.92148343,0,378720,2,0],[-3570337.7230308144,17634072.437183443,0,378780,1,0],[-3853373.3075035242,17534350.764775667,0,378840,0,0],[-4135279.9294727533,17430323.61033148,0,378900,2,0],[-4416171.625771631,17321957.262137383,0,378960,2,0],[-4696269.237146529,17209105.00161627,0,379020,1,0],[-4975358.402450915,17091840.149614614,0,379080,2,0],[-5253344.166438641,16970151.02031445,0,379140,2,0],[-5530318.051489752,16843957.823392555,0,379200,2,0],[-5806194.346808082,16713281.71492047,0,379260,2,0],[-6080882.602168616,16578130.671883743,0,379320,2,0],[-6354310.185447503,16438493.049122926,0,379380,0,0],[-6626074.369311557,16294542.815532833,0,379440,1,0],[-6895942.2693378,16146385.497756137,0,379500,1,0],[-7163967.679666822,15993947.584288366,0,379560,1,0],[-7430090.535850418,15837250.242677717,0,379620,0,0],[-7694057.984249478,15676402.430597762,0,379680,0,0],[-7955646.631191774,15511515.03219615,0,379740,1,0],[-8214935.121485341,15342529.078382052,0,379800,0,0],[-8471837.10892126,15169446.650939764,0,379860,1,0],[-8726278.950415056,14992340.722413346,0,379920,0,0],[-8978160.112233104,14811201.728698175,0,379980,2,0],[-9227568.176055508,14625975.146842344,0,380040,2,0],[-9474711.680169476,14436477.451455489,0,380100,0,0],[-9719205.884002676,14242962.502258977,0,380160,0,0],[-9960709.405539634,14045678.706276858,0,380220,0,0],[-10199112.891400984,13844669.276539998,0,380280,0,0],[-10434383.375940062,13640012.43539718,0,380340,2,0],[-10666686.962401962,13431463.447505012,0,380400,1,0],[-10896105.822392957,13218988.17610874,0,380460,2,0],[-11122542.64978727,13002603.868002063,0,380520,1,0],[-11345905.716016944,12782374.259056555,0,380580,2,0],[-11566144.856645288,12558353.593350774,0,380640,1,0],[-11783187.985111207,12330580.334760446,0,380700,2,0],[-11996931.941621283,12099088.16286143,0,380760,0,0],[-12207190.172922565,11864115.45968256,0,380820,0,0],[-12413668.302380197,11625954.247864617,0,380880,2,0],[-12616525.516389227,11384401.908333609,0,380940,1,0],[-12815814.63515131,11139372.05590888,0,381000,2,0],[-13011446.341406427,10890940.70212955,0,381060,0,0],[-13203270.601776918,10639327.189316807,0,381120,1,0],[-13391093.188407289,10384715.073702656,0,381180,0,0],[-13574865.180635814,10127173.5443133,0,381240,1,0],[-13754517.345899312,9866806.495707706,0,381300,0,0],[-13930001.22542088,9603655.620745394,0,381360,2,0],[-14101359.047239697,9337672.703716567,0,381420,2,0],[-14268735.126637988,9068608.219027614,0,381480,2,0],[-14432045.356553312,8796531.396948237,0,381540,2,0],[-14591272.872563247,8521537.607574798,0,381600,0,0],[-14746137.738897331,8244017.3369222265,0,381660,1,0],[-14896546.035809865,7964203.2312045,0,381720,2,0],[-15042585.027407892,7681846.66428997,0,381780,0,0],[-15184158.948928883,7397224.447096313,0,381840,1,0],[-15321129.28861898,7110538.204572659,0,381900,1,0],[-15453529.375769049,6821750.074769798,0,381960,2,0],[-15581406.73984292,6530752.117371579,0,382020,1,0],[-15704732.04570807,6237655.567833605,0,382080,1,0],[-15823373.660280734,5942701.742504603,0,382140,0,0],[-15937250.734971832,5646158.786959948,0,382200,1,0],[-16046329.097058529,5348100.227022747,0,382260,1,0],[-16150648.294469181,5048457.151343185,0,382320,0,0],[-16250127.376359988,4747495.116242159,0,382380,2,0],[-16344818.058147175,4445117.84762533,0,382440,1,0],[-16434717.552725615,4141262.080241588,0,382500,2,0],[-16519826.672586218,3836005.259303552,0,382560,1,0],[-16600119.13708169,3529455.653728793,0,382620,2,0],[-16675592.52992316,3221689.239050127,0,382680,1,0],[-16746219.440702112,2912797.32417924,0,382740,0,0],[-16811905.155629043,2603251.527826304,0,382800,1,0],[-16872663.83428338,2293099.2192094526,0,382860,0,0],[-16928490.88383529,1982470.8152037708,0,382920,0,0],[-16979347.852465395,1671632.2456948785,0,382980,1,0],[-17025266.79332085,1360474.7373037813,0,383040,0,0],[-17066259.990678683,1049111.0663845723,0,383100,1,0],[-17102329.687125534,737612.6135264302,0,383160,2,0],[-17133531.304452647,425729.9314899426,0,383220,1,0],[-17159859.667411886,113560.41216589267,0,383280,1,0],[-17181315.799376488,-198671.8849222363,0,383340,1,0],[-17197925.951650985,-510821.122737094,0,383400,0,0],[-17209668.593653318,-822656.6033130524,0,383460,1,0],[-17216575.44752509,-1134065.6416180423,0,383520,2,0],[-17218688.97581103,-1445370.47549203,0,383580,0,0],[-17216003.26185532,-1756244.363594331,0,383640,1,0],[-17208549.791538484,-2066471.8664224846,0,383700,0,0],[-17196376.77892189,-2375935.240504601,0,383760,1,0],[-17179477.117263556,-2684575.1365636666,0,383820,2,0],[-17157879.636162136,-2992657.4748217734,0,383880,0,0],[-17131632.661258742,-3299932.5431106873,0,383940,2,0],[-17100746.318309795,-3606307.5100457515,0,384000,2,0],[-17065234.725648366,-3912090.485588686,0,384060,1,0],[-17025122.683209945,-4216993.479836706,0,384120,2,0],[-16980466.078617997,-4520943.709402467,0,384180,1,0],[-16931297.17993308,-4823890.5916786315,0,384240,1,0],[-16877676.28073081,-5125562.102825694,0,384300,2,0],[-16819598.877551354,-5426076.161278083,0,384360,1,0],[-16757124.735376615,-5725349.816599941,0,384420,0,0],[-16690349.268761277,-6022974.160149312,0,384480,0,0],[-16619377.880764313,-6318685.981286315,0,384540,0,0],[-16544242.460459635,-6612445.482245168,0,384600,2,0],[-16464913.59992978,-6904529.156134001,0,384660,2,0],[-16381338.876971466,-7195238.048508304,0,384720,2,0],[-16293543.650888843,-7484450.586465687,0,384780,0,0],[-16201703.43742435,-7771827.369050888,0,384840,1,0],[-16105911.797458978,-8057106.771088683,0,384900,2,0],[-16006106.7511109,-8340578.083995149,0,384960,1,0],[-15902327.327110307,-8622171.268361447,0,385020,2,0],[-15794636.90883451,-8901859.257296376,0,385080,0,0],[-15683146.335293936,-9179388.302859934,0,385140,1,0],[-15567972.335307442,-9454550.858146967,0,385200,0,0],[-15449164.399460316,-9727317.795368116,0,385260,0,0],[-15326863.515862605,-9997458.649129812,0,385320,1,0],[-15201053.46569107,-10265091.23123522,0,385380,1,0],[-15071711.645790534,-10530353.65330877,0,385440,2,0],[-14938795.810623089,-10793326.926297978,0,385500,1,0],[-14802379.352400048,-11053996.247563172,0,385560,1,0],[-14662595.65510541,-11312146.513515979,0,385620,0,0],[-14519586.269882534,-11567569.753515577,0,385680,0,0],[-14373501.783054603,-11820109.944452805,0,385740,2,0],[-14224207.30354131,-12070001.092221403,0,385800,1,0],[-14071688.121076029,-12317390.333932258,0,385860,1,0],[-13916075.614078553,-12562066.389561648,0,385920,1,0],[-13757431.073520709,-12804007.096509915,0,385980,1,0],[-13595803.625639139,-13043191.979868446,0,386040,1,0],[-13431269.561467823,-13279560.735889725,0,386100,1,0],[-13263883.184488544,-13513114.088400774,0,386160,1,0],[-13093672.837803487,-13743816.09439994,0,386220,1,0],[-12920730.399292665,-13971612.792123277,0,386280,2,0],[-12744987.713331768,-14196669.376537781,0,386340,0,0],[-12566605.382102346,-14418769.816449516,0,386400,2,0],[-12385647.088001471,-14637945.639721448,0,386460,0,0],[-12202172.277150402,-14854106.782031076,0,386520,1,0],[-12016348.85957094,-15067148.377922606,0,386580,0,0],[-11828229.629584242,-15277040.321349105,0,386640,0,0],[-11638000.746802097,-15483610.681534177,0,386700,0,0],[-11445734.631429749,-15686864.024913954,0,386760,2,0],[-11251203.694507178,-15887055.833362218,0,386820,2,0],[-11054238.752481762,-16084392.129122866,0,386880,1,0],[-10855008.115455033,-16278769.75299862,0,386940,1,0],[-10653713.748482706,-16470033.6699146,0,387000,2,0],[-10450246.276996916,-16658272.626723759,0,387060,2,0],[-10244535.475031193,-16843623.25833856,0,387120,0,0],[-10036928.877487557,-17025807.099382237,0,387180,0,0],[-9827722.078198379,-17204597.791371614,0,387240,2,0],[-9616691.032167355,-17380222.50693695,0,387300,2,0],[-9403634.41600152,-17552882.37808446,0,387360,1,0],[-9188710.891186753,-17722458.15945049,0,387420,0,0],[-8972273.687775724,-17888741.046986815,0,387480,2,0],[-8754242.102221321,-18051827.830926526,0,387540,1,0],[-8534514.572797487,-18211789.233449392,0,387600,1,0],[-8313273.8415562725,-18368565.691031832,0,387660,0,0],[-8090715.833641631,-18521997.333548706,0,387720,0,0],[-7867074.876287821,-18672022.815875575,0,387780,0,0],[-7642367.127233968,-18818620.8165518,0,387840,2,0],[-7416327.062281401,-18962003.45215276,0,387900,1,0],[-7188896.908510756,-19102262.897271417,0,387960,2,0],[-6960097.948665989,-19239370.9690836,0,388020,1,0],[-6729962.439028637,-19373377.10792585,0,388080,1,0],[-6498714.661013238,-19504132.791533418,0,388140,2,0],[-6266254.470279964,-19631762.55957261,0,388200,1,0],[-6032589.358285699,-19756251.504348073,0,388260,0,0],[-5798106.098113914,-19877476.68056365,0,388320,1,0],[-5562839.5892045,-19995369.74538599,0,388380,2,0],[-5326537.4893086795,-20110140.07902248,0,388440,2,0],[-5089040.483671447,-20221861.713700466,0,388500,0,0],[-4850746.314358317,-20330412.486254565,0,388560,0,0],[-4612032.676697154,-20435585.99472036,0,388620,2,0],[-4372572.943982631,-20537586.555333126,0,388680,0,0],[-4132452.0578599046,-20636387.374503657,0,388740,0,0],[-3892029.8011818146,-20731880.589963228,0,388800,0,0],[-3651341.93509725,-20824087.743257876,0,388860,1,0],[-3410281.4211120172,-20913061.90029563,0,388920,0,0],[-3168863.5157964155,-20998819.547088597,0,388980,0,0],[-2927306.124941738,-21081308.322434034,0,389040,2,0],[-2685318.255407105,-21160665.90122947,0,389100,1,0],[-2442759.1860625776,-21236952.894612264,0,389160,2,0],[-2199676.5640006135,-21310170.98267243,0,389220,0,0],[-1956267.2960879838,-21380275.280310646,0,389280,1,0],[-1712750.239646067,-21447237.01790095,0,389340,2,0],[-1468790.7024349975,-21511143.52796243,0,389400,1,0],[-1224482.9018485886,-21572020.917289276,0,389460,2,0],[-979802.1818372537,-21629869.232492782,0,389520,2,0],[-734627.3578773641,-21684745.199278347,0,389580,0,0],[-489364.8947537948,-21736585.316975757,0,389640,1,0],[-244216.32230718015,-21785343.26910301,0,389700,2,0],[1164.9519001954338,-21831092.875143547,0,389760,2,0],[246886.96778814317,-21873929.070213664,0,389820,0,0],[492580.7717517971,-21913759.826833177,0,389880,1,0],[738022.247762599,-21950570.111482315,0,389940,1,0],[983365.5546801885,-21984406.671321478,0,390000,2,0],[1228764.7283701673,-22015296.005452998,0,390060,0,0],[1473982.2021951845,-22043242.00482811,0,390120,2,0],[1719015.8557805717,-22068277.028105296,0,390180,1,0],[1964002.6236083445,-22090394.701703414,0,390240,1,0],[2208720.0046233395,-22109603.50508529,0,390300,1,0],[2453153.300319295,-22125923.62376665,0,390360,1,0],[2697279.7500179405,-22139364.88220681,0,390420,2,0],[2941217.20181913,-22149948.724118818,0,390480,0,0],[3184791.013521881,-22157679.730909854,0,390540,2,0],[3427961.756284044,-22162579.685617574,0,390600,0,0],[3670667.227403479,-22164674.371247746,0,390660,0,0],[3912570.1394603425,-22163959.520157848,0,390720,2,0],[4153987.1121673924,-22160425.848183285,0,390780,0,0],[4394869.6065966645,-22154145.754818667,0,390840,2,0],[4635217.774206044,-22145113.456919476,0,390900,0,0],[4874969.028414532,-22133310.08330892,0,390960,1,0],[5113973.444878243,-22118800.00569268,0,391020,1,0],[5352331.669719674,-22101596.844187863,0,391080,1,0],[5590028.224613882,-22081677.867732167,0,391140,0,0],[5826865.4750130195,-22059103.777880233,0,391200,2,0],[6063004.583425795,-22033833.632719744,0,391260,0,0],[6298429.808167091,-22005957.042097718,0,391320,1,0],[6532905.478704287,-21975448.269685697,0,391380,2,0],[6766788.332029257,-21942293.461579774,0,391440,0,0],[6999864.685619097,-21906546.596924506,0,391500,1,0],[7231961.006854392,-21868234.58407978,0,391560,2,0],[7463368.783854715,-21827336.990893904,0,391620,1,0],[7694065.186756066,-21783840.20234312,0,391680,2,0],[7924060.2612107415,-21737789.327756457,0,391740,2,0],[8153488.942362436,-21689142.450304314,0,391800,2,0],[8382323.783591836,-21637904.53722441,0,391860,2,0],[8610569.183565069,-21584120.303916924,0,391920,0,0],[8837793.580881681,-21527859.333041515,0,391980,0,0],[9063695.764480762,-21469235.296157956,0,392040,0,0],[9288198.431082297,-21408275.783245675,0,392100,2,0],[9511656.498937054,-21344896.128037754,0,392160,0,0],[9734055.18524596,-21279104.55000827,0,392220,0,0],[9954991.808629667,-21211051.402098726,0,392280,1,0],[10174674.409884607,-21140671.16245952,0,392340,1,0],[10393217.629909331,-21067959.942484103,0,392400,1,0],[10610605.774235664,-20992903.220584597,0,392460,1,0],[10826839.270075098,-20915540.227699935,0,392520,2,0],[11042038.048840625,-20835807.143046204,0,392580,0,0],[11256045.20950043,-20753795.240385458,0,392640,1,0],[11468628.666281538,-20669577.86468814,0,392700,1,0],[11680001.356158461,-20583141.999280218,0,392760,0,0],[11889908.446588691,-20494527.766973216,0,392820,2,0],[12098555.036122631,-20403692.64193822,0,392880,0,0],[12305905.163726723,-20310682.876709744,0,392940,1,0],[12511740.647733804,-20215573.783895176,0,393000,2,0],[12716436.737621523,-20118220.485817276,0,393060,0,0],[12919767.194166614,-20018729.08337409,0,393120,0,0],[13121411.379096165,-19917283.04559098,0,393180,0,0],[13321326.906328732,-19813878.050345704,0,393240,1,0],[13519696.879451338,-19708466.954471134,0,393300,1,0],[13716646.326264737,-19600993.36669597,0,393360,1,0],[13912162.60732776,-19491453.69392578,0,393420,1,0],[14106206.666674122,-19379895.244470634,0,393480,2,0],[14298961.545990381,-19266211.179215793,0,393540,2,0],[14490516.452405732,-19150336.088582903,0,393600,1,0],[14680734.269342307,-19032415.464430463,0,393660,0,0],[14869288.150394442,-18912589.445891656,0,393720,1,0],[15056134.408513678,-18790935.741066758,0,393780,1,0],[15241447.597919157,-18667339.104794446,0,393840,1,0],[15425211.106312888,-18541823.97292565,0,393900,2,0],[15607525.885047287,-18414301.897658657,0,393960,2,0],[15788557.881021908,-18284712.90829883,0,394020,2,0],[15968262.166411705,-18153053.8738195,0,394080,0,0],[16146359.013695074,-18019527.749535013,0,394140,2,0],[16322801.4237701,-17884197.750645358,0,394200,1,0],[16497757.768465059,-17746936.51666039,0,394260,1,0],[16671030.683105193,-17607895.39137594,0,394320,1,0],[16842640.854795612,-17467071.82362302,0,394380,0,0],[17012408.889136642,-17324638.9293788,0,394440,1,0],[17180336.362967867,-17180537.663117595,0,394500,0,0],[17346399.006097667,-17034856.82264815,0,394560,2,0],[17510757.853771925,-16887490.356907744,0,394620,1,0],[17673481.91646535,-16738311.663579231,0,394680,2,0],[17834580.90057704,-16587337.95145012,0,394740,1,0],[17994044.54306774,-16434596.415312791,0,394800,1,0],[18151724.73670022,-16280223.704258779,0,394860,1,0],[18307602.464113444,-16124246.76475557,0,394920,2,0],[18461826.44165506,-15966539.177066173,0,394980,0,0],[18614199.32281483,-15807260.438643957,0,395040,0,0],[18764469.532690715,-15646685.780744541,0,395100,0,0],[18912701.64919652,-15484844.863163246,0,395160,1,0],[19058920.045371793,-15321608.678293943,0,395220,1,0],[19203265.9735183,-15156844.34631949,0,395280,2,0],[19345869.68510226,-14990508.674827706,0,395340,2,0],[19486803.13974802,-14822379.21207323,0,395400,1,0],[19625942.56429844,-14652680.279991653,0,395460,1,0],[19763156.70535426,-14481561.570912888,0,395520,0,0],[19898352.192604348,-14309174.89519689,0,395580,1,0],[20031470.589031003,-14135511.690508587,0,395640,2,0],[20162770.566419516,-13960342.71250669,0,395700,0,0],[20292101.94411074,-13783837.648071587,0,395760,1,0],[20419356.73925907,-13606104.686832946,0,395820,1,0],[20544620.570196737,-13427060.101915622,0,395880,0,0],[20667796.67907708,-13246853.142946366,0,395940,2,0],[20788959.81981196,-13065392.085987609,0,396000,0,0],[20908117.092447307,-12882624.929170081,0,396060,1,0],[21025152.640362762,-12698805.946033182,0,396120,2,0],[21140253.294389386,-12513563.779594885,0,396180,1,0],[21253372.12878777,-12326961.51678474,0,396240,2,0],[21364549.6891839,-12139029.674181689,0,396300,2,0],[21473834.216861717,-11949601.235823134,0,396360,1,0],[21581158.398920964,-11758867.388191551,0,396420,0,0],[21686274.073733985,-11567146.246631911,0,396480,1,0],[21789218.082938306,-11374462.141117262,0,396540,1,0],[21890075.079303052,-11180698.839864574,0,396600,2,0],[21988864.43787592,-10985676.01885085,0,396660,1,0],[22085642.63685536,-10789455.6378313,0,396720,0,0],[22180194.360286057,-10592319.559327193,0,396780,2,0],[22272606.263964314,-10394177.046179911,0,396840,1,0],[22362930.313376162,-10194867.50883214,0,396900,1,0],[22451103.068357207,-9994583.380163126,0,396960,2,0],[22537167.15162987,-9793159.244483382,0,397020,0,0],[22621064.51764983,-9590788.945920037,0,397080,0,0],[22702629.84103573,-9387806.733335596,0,397140,1,0],[22781920.521863993,-9184109.240979603,0,397200,1,0],[22859042.285152048,-8979503.484610638,0,397260,0,0],[22933852.368210554,-8774203.875543317,0,397320,2,0],[23006458.162610155,-8568069.558374383,0,397380,1,0],[23076878.49456098,-8360904.0308684725,0,397440,0,0],[23144996.86108663,-8153115.083519931,0,397500,1,0],[23210813.80737876,-7944705.229048618,0,397560,2,0],[23274447.325793076,-7735332.385968897,0,397620,0,0],[23335830.803967122,-7525236.492720978,0,397680,1,0],[23394851.524744123,-7314567.001165058,0,397740,1,0],[23451604.473314196,-7103177.928287541,0,397800,2,0],[23506144.42943934,-6890938.88614918,0,397860,2,0],[23558431.892532535,-6677662.279024534,0,397920,1,0],[23608502.515001252,-6463571.001218666,0,397980,0,0],[23656188.378726255,-6249026.881148039,0,398040,1,0],[23701527.832669288,-6034021.101444194,0,398100,0,0],[23744534.697959326,-5818637.462766765,0,398160,1,0],[23785143.012491632,-5602838.78128377,0,398220,0,0],[23823398.48301194,-5386665.900124887,0,398280,0,0],[23859231.76750406,-5170308.7101042615,0,398340,2,0],[23892725.341483254,-4953439.459664646,0,398400,1,0],[23923862.88138109,-4735911.6484322585,0,398460,2,0],[23952672.56703981,-4517737.471710465,0,398520,1,0],[23979123.24885644,-4298941.465897023,0,398580,2,0],[24003231.53740086,-4079532.8685546224,0,398640,1,0],[24024957.016222704,-3859536.189252867,0,398700,0,0],[24044281.803158298,-3639348.795113933,0,398760,1,0],[24061210.529962245,-3418976.0116953244,0,398820,2,0],[24075717.1426392,-3198076.673728808,0,398880,1,0],[24087824.95764156,-2976661.0014352184,0,398940,2,0],[24097540.535811458,-2754785.754387939,0,399000,0,0],[24104823.465092704,-2532623.170058049,0,399060,2,0],[24109688.06969787,-2310206.1084400243,0,399120,1,0],[24112097.618794408,-2087391.514621582,0,399180,0,0],[24112093.25634452,-1864529.7014945948,0,399240,1,0],[24109620.8068478,-1641671.019424945,0,399300,0,0],[24104694.137579996,-1418822.4281709983,0,399360,2,0],[24097328.770833056,-1195822.1904384429,0,399420,0,0],[24087508.61308752,-972700.0884162685,0,399480,1,0],[24075212.387831725,-749679.465287498,0,399540,2,0],[24060429.521097675,-526381.8112311533,0,399600,0,0],[24043205.667833943,-303032.55882930075,0,399660,2,0],[24023448.11811144,-79638.02410284003,0,399720,0,0],[24001230.617719203,143745.09334343413,0,399780,0,0],[23976574.655271057,366750.3031393679,0,399840,0,0],[23949453.1336382,589371.2706885126,0,399900,0,0],[23919880.44363625,811577.8879529678,0,399960,2,0],[23887800.466635026,1033696.3439605668,0,400020,2,0],[23853131.841498498,1256048.4744680694,0,400080,2,0],[23815932.014846925,1478650.0623518582,0,400140,0,0],[23776206.889871538,1701085.300700301,0,400200,1,0],[23733985.480030537,1923156.3699310105,0,400260,2,0],[23689220.01710853,2145208.6164819086,0,400320,1,0],[23641878.44656736,2367204.8363944,0,400380,1,0],[23592012.506109808,2588924.7646483006,0,400440,2,0],[23539585.59972608,2810569.364504194,0,400500,1,0],[23484567.675050635,3032075.789009564,0,400560,1,0],[23427005.52118492,3253272.584730718,0,400620,2,0],[23366881.084160473,3474265.8492227783,0,400680,0,0],[23304202.618869007,3694901.927842949,0,400740,0,0],[23239072.652456343,3914757.5561755504,0,400800,2,0],[23171404.011480443,4134215.5232392172,0,400860,1,0],[23101115.903862953,4353392.88661297,0,400920,2,0],[23028224.933556132,4572231.230331271,0,400980,0,0],[22952795.494089797,4790588.894061786,0,401040,2,0],[22874808.305284556,5008401.528062575,0,401100,0,0],[22794251.128622532,5225655.193968985,0,401160,1,0],[22711207.845676184,5442140.056149027,0,401220,1,0],[22625592.48312195,5658041.241362793,0,401280,0,0],[22537498.632504668,5873103.847395625,0,401340,0,0],[22446981.590805534,6087188.283191093,0,401400,1,0],[22353970.961219605,6300409.212392133,0,401460,0,0],[22258486.66660691,6512735.394902719,0,401520,1,0],[22160505.870475907,6724147.8287260095,0,401580,2,0],[22059877.93683288,6934973.153681833,0,401640,2,0],[21956548.85867156,7145300.652073666,0,401700,1,0],[21850580.38435302,7354937.679059007,0,401760,0,0],[21742124.19590368,7563578.471731898,0,401820,2,0],[21631136.895339146,7771316.063395751,0,401880,2,0],[21517389.049065884,7978466.105896873,0,401940,0,0],[21401107.46059996,8184654.0306242835,0,402000,1,0],[21282342.872910324,8389711.436791927,0,402060,2,0],[21160940.3731588,8593928.834709592,0,402120,1,0],[21036899.301772945,8797262.847286945,0,402180,1,0],[20910322.533146698,8999515.538870944,0,402240,0,0],[20781309.95322263,9200539.514757382,0,402300,2,0],[20649722.532400094,9400430.906146344,0,402360,2,0],[20515414.85858434,9599476.537397727,0,402420,1,0],[20378468.513949323,9797467.008288402,0,402480,0,0],[20239110.631745808,9994114.891972346,0,402540,0,0],[20097433.57213861,10189223.651184205,0,402600,2,0],[19953232.334784295,10383025.527641086,0,402660,0,0],[19806499.650119595,10575545.273550887,0,402720,2,0],[19657277.480730537,10766708.452738797,0,402780,1,0],[19505430.740131784,10956648.375302503,0,402840,1,0],[19351087.33396822,11145182.300880795,0,402900,0,0],[19194358.76890471,11332147.838115787,0,402960,2,0],[19035140.039755695,11517641.258575816,0,403020,0,0],[18873444.093572684,11701620.526124127,0,403080,2,0],[18709279.196479566,11884093.861193722,0,403140,1,0],[18542520.67581376,12065111.077878045,0,403200,2,0],[18373184.938652933,12244661.533523543,0,403260,0,0],[18201412.284408525,12422592.113017973,0,403320,1,0],[18027310.52831853,12598713.952534737,0,403380,1,0],[17850782.062593937,12773150.189607155,0,403440,1,0],[17671837.493718036,12945850.34303599,0,403500,1,0],[17490462.078615602,13116778.666218203,0,403560,0,0],[17306826.29134003,13285784.641003858,0,403620,1,0],[17120931.32949414,13452845.584121257,0,403680,1,0],[16932676.308872152,13618020.245329723,0,403740,1,0],[16742020.544141978,13781298.311666874,0,403800,1,0],[16549041.846878935,13942630.1281935,0,403860,1,0],[16353698.369042799,14102003.407366242,0,403920,1,0],[16156008.044064542,14259341.86579651,0,403980,0,0],[15956167.268084064,14414530.042809406,0,404040,2,0],[15754031.00263028,14567661.73566535,0,404100,1,0],[15549446.258804265,14718763.96892878,0,404160,0,0],[15342749.578183325,14867616.601858247,0,404220,2,0],[15133776.29640099,15014263.583591344,0,404280,1,0],[14922430.723204646,15158809.612380292,0,404340,2,0],[14708687.732318288,15301184.867109913,0,404400,2,0],[14492439.38835717,15441477.852631783,0,404460,0,0],[14274028.925138135,15579419.14404208,0,404520,0,0],[14053733.679072682,15714806.806881597,0,404580,1,0],[13831450.526544066,15847704.430407068,0,404640,1,0],[13607022.27564385,15978148.61896411,0,404700,0,0],[13380631.82125898,16106015.620723953,0,404760,1,0],[13152334.104550015,16231291.560782032,0,404820,0,0],[12922109.877900789,16353913.312210724,0,404880,1,0],[12689987.405688548,16473869.17325477,0,404940,0,0],[12456022.040860785,16591112.03828044,0,405000,0,0],[12220353.478238933,16705541.452293698,0,405060,1,0],[11982880.2850879,16817177.998084493,0,405120,2,0],[11743300.87319951,16926148.590200573,0,405180,2,0],[11501462.15144998,17032492.26601108,0,405240,2,0],[11257370.796986096,17136152.73591198,0,405300,2,0],[11011095.181110524,17237120.330940336,0,405360,2,0],[10762626.429583708,17335315.432813335,0,405420,0,0],[10512348.507912299,17430582.04682283,0,405480,1,0],[10260435.72427979,17522829.235525567,0,405540,1,0],[10006785.173001051,17612056.460065193,0,405600,0,0],[9751565.852290366,17698204.082872402,0,405660,1,0],[9494825.763471683,17781210.746699475,0,405720,2,0],[9236243.083964402,17861159.711414143,0,405780,1,0],[8975874.271360783,17937993.490958754,0,405840,1,0],[8713894.385483121,18011653.352821805,0,405900,2,0],[8450183.75909214,18082135.678276464,0,405960,2,0],[8184586.341544856,18149428.26291113,0,406020,1,0],[7917344.455463267,18213477.85980706,0,406080,0,0],[7648822.860368914,18274137.6856336,0,406140,1,0],[7379081.862323984,18331396.974865265,0,406200,1,0],[7107945.322545768,18385252.092512973,0,406260,0,0],[6835674.192827555,18435615.372224227,0,406320,1,0],[6562280.573429612,18482479.22963799,0,406380,0,0],[6287815.968931682,18525796.476985764,0,406440,1,0],[6012318.531127485,18565522.20824969,0,406500,2,0],[5735484.749877494,18601707.94296446,0,406560,2,0],[5457178.275137646,18634304.767503742,0,406620,1,0],[5177621.222883857,18663282.13242012,0,406680,1,0],[4897034.6584863365,18688551.731891286,0,406740,1,0],[4615489.199375942,18710124.16876187,0,406800,1,0],[4333005.135253665,18727928.737708215,0,406860,1,0],[4049665.148338064,18741953.141280208,0,406920,0,0],[3765660.9138414576,18752157.744486164,0,406980,2,0],[3480891.889814982,18758523.12737258,0,407040,2,0],[3195051.9678398278,18761021.104754563,0,407100,0,0],[2908546.1021973086,18759604.63260531,0,407160,2,0],[2621415.7933382676,18754254.0557484,0,407220,1,0],[2333547.384853026,18744931.90902398,0,407280,0,0],[2045385.1528427764,18731627.783662055,0,407340,0,0],[1757141.307128121,18714332.11962547,0,407400,0,0],[1468869.0057201881,18693010.3978058,0,407460,2,0],[1180266.6300272048,18667617.896611616,0,407520,1,0],[891231.9251999301,18638118.216596603,0,407580,2,0],[601830.2962041469,18604490.540166397,0,407640,1,0],[312104.8213155494,18566692.83869247,0,407700,1,0],[22327.533371687692,18524738.33748333,0,407760,1,0],[-267472.75681940024,18478599.975252554,0,407820,2,0],[-557377.4087991794,18428219.119239185,0,407880,1,0],[-847341.492716147,18373599.146462247,0,407940,2,0],[-1137295.0600038432,18314709.739484016,0,408000,2,0],[-1427311.2915849434,18251488.37441474,0,408060,0,0],[-1717001.8911047492,18184003.730757315,0,408120,1,0],[-2006122.0840330494,18112277.732128795,0,408180,1,0],[-2294765.1287910724,18036259.903124906,0,408240,1,0],[-2582861.625895846,17955917.052035827,0,408300,0,0],[-2870161.3500849013,17871320.647851262,0,408360,0,0],[-3156402.4891567593,17782515.833228678,0,408420,2,0],[-3441906.6153357704,17689372.26940347,0,408480,0,0],[-3726551.0421377616,17591881.510936044,0,408540,1,0],[-4010104.5497956234,17490125.931943823,0,408600,0,0],[-4292491.808641691,17384068.051676564,0,408660,1,0],[-4573640.7798101045,17273747.91072011,0,408720,0,0],[-4853468.710391379,17159149.946338136,0,408780,2,0],[-5132081.37287107,17040185.27631839,0,408840,1,0],[-5409541.947860722,16916837.56682034,0,408900,0,0],[-5685460.919599793,16789224.56436543,0,408960,2,0],[-5959900.636983972,16657279.5243966,0,409020,0,0],[-6232798.0707009,16521023.204541106,0,409080,2,0],[-6504086.849213887,16380455.915799916,0,409140,2,0],[-6773977.6149436375,16235428.568216573,0,409200,2,0],[-7042400.26786672,16085954.45451798,0,409260,0,0],[-7308960.879679277,15932209.167419923,0,409320,0,0],[-7573262.50756863,15774411.392425787,0,409380,1,0],[-7835383.467723294,15612481.933835084,0,409440,2,0],[-8095545.746508826,15446251.06825199,0,409500,2,0],[-8353802.599048515,15275638.431340469,0,409560,0,0],[-8609808.277096957,15100887.021269958,0,409620,0,0],[-8863155.574950177,14922205.036348779,0,409680,1,0],[-9113940.281566598,14739533.645928359,0,409740,2,0],[-9362340.393320523,14552687.625402592,0,409800,0,0],[-9608149.35340557,14361817.530824065,0,409860,0,0],[-9851010.865080124,14167180.238503573,0,409920,1,0],[-10090976.468036873,13968688.37491842,0,409980,1,0],[-10328110.4238167,13766297.685985785,0,410040,2,0],[-10562481.461148856,13559882.815335874,0,410100,2,0],[-10794131.952842876,13349410.676450329,0,410160,0,0],[-11022719.532121336,13135163.01587325,0,410220,1,0],[-11248030.862767078,12917302.986470474,0,410280,2,0],[-11470281.558367398,12695612.161104174,0,410340,1,0],[-11689352.950348103,12470154.131719522,0,410400,2,0],[-11905197.028779455,12241006.989404062,0,410460,2,0],[-12117852.485465458,12008044.836571664,0,410520,0,0],[-12327008.872865574,11771618.988857184,0,410580,0,0],[-12532355.822566515,11532060.339464732,0,410640,0,0],[-12733820.018984696,11289429.538516544,0,410700,1,0],[-12931476.985385692,11043638.800684147,0,410760,2,0],[-13125472.291390046,10794491.016237691,0,410820,2,0],[-13315845.355199,10541898.182190869,0,410880,0,0],[-13502308.712178687,10286211.674190206,0,410940,2,0],[-13684823.000086134,10027519.863783022,0,411000,1,0],[-13863409.341622245,9765731.55214516,0,411060,1,0],[-14037926.583325122,9501063.066402847,0,411120,0,0],[-14208194.909559222,9233758.810946856,0,411180,2,0],[-14374288.95763951,8963719.209538355,0,411240,2,0],[-14536321.793081997,8690727.737451019,0,411300,1,0],[-14694146.195810385,8415017.02623558,0,411360,1,0],[-14847636.054553794,8136818.340702755,0,411420,0,0],[-14996644.430493396,7856365.447612415,0,411480,1,0],[-15141140.536976997,7573768.078403218,0,411540,0,0],[-15281067.137289587,7289084.680228432,0,411600,0,0],[-15416327.873299953,7002571.2740518395,0,411660,0,0],[-15546879.039649988,6714296.741908054,0,411720,2,0],[-15672829.998517727,6424056.161652682,0,411780,2,0],[-15794304.292793978,6131583.946084392,0,411840,1,0],[-15911181.162245652,5837130.785654752,0,411900,0,0],[-16023324.48767149,5541123.035810466,0,411960,1,0],[-16130665.192867031,5243654.7549664555,0,412020,1,0],[-16233261.012846192,4944650.893654349,0,412080,1,0],[-16331087.65787371,4644201.47392356,0,412140,1,0],[-16424134.910120616,4342377.583068436,0,412200,1,0],[-16512388.4983319,4039274.4459944516,0,412260,2,0],[-16595843.102872275,3734836.120783595,0,412320,0,0],[-16674478.53316966,3429302.220645122,0,412380,1,0],[-16748208.075219736,3122948.218233873,0,412440,2,0],[-16817128.316049792,2815506.8391862717,0,412500,2,0],[-16881251.733050544,2506899.8498791433,0,412560,1,0],[-16940533.940675985,2197390.06568015,0,412620,2,0],[-16994978.58828196,1887065.9508139475,0,412680,0,0],[-17044538.409109686,1576227.9993290042,0,412740,0,0],[-17089166.212611284,1265273.554622095,0,412800,0,0],[-17128893.049437463,954321.219101867,0,412860,2,0],[-17163731.13048663,643094.498617399,0,412920,0,0],[-17193708.561151136,331685.2690326235,0,412980,2,0],[-17218848.916146852,20176.022528934933,0,413040,1,0],[-17239151.77443926,-291516.99451045046,0,413100,0,0],[-17254628.31437121,-602943.6283620185,0,413160,2,0],[-17265281.777611908,-914198.49859858,0,413220,1,0],[-17271146.805726334,-1225377.9319744115,0,413280,0,0],[-17272242.242405426,-1536036.4376444905,0,413340,0,0],[-17268587.26020525,-1845928.0311267064,0,413400,1,0],[-17260194.77461034,-2155116.952408588,0,413460,0,0],[-17247120.244943034,-2463552.292220873,0,413520,1,0],[-17229356.124625567,-2771125.025690681,0,413580,2,0],[-17206944.283949398,-3078150.7398624048,0,413640,2,0],[-17179864.31791747,-3384707.9953796165,0,413700,1,0],[-17148191.691659637,-3690510.147410641,0,413760,1,0],[-17111940.201101292,-3995359.642454498,0,413820,2,0],[-17071155.602017615,-4299326.458712527,0,413880,1,0],[-17025857.884607263,-4602330.489510162,0,413940,0,0],[-16976132.87758901,-4903967.813140605,0,414000,0,0],[-16922043.646201037,-5203944.608773817,0,414060,2,0],[-16863591.775244847,-5502615.325815301,0,414120,2,0],[-16800722.887014963,-5800198.59087749,0,414180,1,0],[-16733521.707204642,-6096488.270449617,0,414240,0,0],[-16662114.967366632,-6391046.00793407,0,414300,1,0],[-16586547.87321165,-6683813.805487324,0,414360,0,0],[-16506862.221593758,-6974721.881023687,0,414420,0,0],[-16423171.538753992,-7263563.441607549,0,414480,1,0],[-16335441.41135055,-7550430.3832818745,0,414540,0,0],[-16243752.044641864,-7835242.207230486,0,414600,1,0],[-16148133.262878884,-8117997.794372693,0,414660,2,0],[-16048551.605590181,-8398950.335786348,0,414720,1,0],[-15945024.507345404,-8678032.279843243,0,414780,2,0],[-15837603.214057837,-8955184.033994643,0,414840,0,0],[-15726411.623415893,-9230237.048668753,0,414900,0,0],[-15611648.468760531,-9502737.478326926,0,414960,2,0],[-15493205.726239432,-9773038.348917978,0,415020,2,0],[-15370992.899510624,-10041369.270100866,0,415080,1,0],[-15245145.837750506,-10307544.7370261,0,415140,0,0],[-15115869.643643197,-10571173.643637406,0,415200,1,0],[-14983208.68209061,-10832212.824871857,0,415260,1,0],[-14847162.131379863,-11090814.459840657,0,415320,0,0],[-14707848.15590127,-11346751.554817606,0,415380,1,0],[-14565317.39525796,-11600002.187028255,0,415440,2,0],[-14419476.646496618,-11850809.582026128,0,415500,0,0],[-14270428.40400403,-12099013.836455656,0,415560,2,0],[-14118272.869254261,-12344558.995764576,0,415620,0,0],[-13963033.347796476,-12587433.289996687,0,415680,2,0],[-13804787.917507188,-12827570.618992308,0,415740,2,0],[-13643380.791016124,-13065275.595752114,0,415800,1,0],[-13478974.616655331,-13300341.536396466,0,415860,2,0],[-13311593.464963911,-13532731.552584862,0,415920,1,0],[-13141338.345512733,-13762455.667716067,0,415980,2,0],[-12968229.676788308,-13989428.836084727,0,416040,2,0],[-12792210.958722562,-14213810.634804113,0,416100,0,0],[-12613581.931470385,-14435266.442792073,0,416160,1,0],[-12432483.876096584,-14653641.624741055,0,416220,1,0],[-12248875.23299056,-14869050.12053807,0,416280,1,0],[-12062818.346804755,-15081500.2540821,0,416340,2,0],[-11874219.717716899,-15291057.570209034,0,416400,0,0],[-11683295.043443546,-15497587.325579537,0,416460,1,0],[-11490192.276864456,-15700952.19132734,0,416520,1,0],[-11294847.993096583,-15901266.790423755,0,416580,1,0],[-11097315.89408963,-16098502.925427228,0,416640,1,0],[-10897654.829970473,-16292630.637865234,0,416700,1,0],[-10695918.662047422,-16483689.028956432,0,416760,2,0],[-10492027.882084621,-16671717.64722084,0,416820,1,0],[-10286033.982988764,-16856749.67352232,0,416880,0,0],[-10078257.69582068,-17038531.393507462,0,416940,1,0],[-9868758.835577125,-17217028.19052214,0,417000,2,0],[-9657312.743488234,-17392494.883904155,0,417060,0,0],[-9444097.648546804,-17564767.950618226,0,417120,1,0],[-9229322.389025712,-17733778.42791319,0,417180,1,0],[-9012873.543678474,-17899594.318459436,0,417240,0,0],[-8794969.571542112,-18062102.134992167,0,417300,1,0],[-8575663.846727647,-18221299.3267057,0,417360,2,0],[-8354691.893855411,-18377434.215960726,0,417420,2,0],[-8131968.483141729,-18530547.312258758,0,417480,1,0],[-7907698.489555074,-18680562.9190067,0,417540,2,0],[-7681905.104461901,-18827453.333681032,0,417600,0,0],[-7454824.764589349,-18971123.989601865,0,417660,1,0],[-7226608.748661111,-19111513.373074435,0,417720,0,0],[-6997332.730925319,-19248557.31431035,0,417780,2,0],[-6766896.55827534,-19382409.391294945,0,417840,1,0],[-6535185.049634859,-19513139.899678815,0,417900,0,0],[-6302558.16248921,-19640552.818575624,0,417960,2,0],[-6068893.322149651,-19764769.51030959,0,418020,0,0],[-5834244.387450281,-19885769.273617692,0,418080,0,0],[-5598968.394163319,-20003401.188512817,0,418140,1,0],[-5362973.300711782,-20117757.05088747,0,418200,0,0],[-5126280.223207228,-20228834.189481936,0,418260,1,0],[-4888941.382099803,-20336646.92802122,0,418320,0,0],[-4650993.847680575,-20441192.021768566,0,418380,2,0],[-4412319.501815592,-20542551.396300606,0,418440,1,0],[-4172805.3903690567,-20640785.16017962,0,418500,1,0],[-3932635.019595415,-20735874.373215154,0,418560,1,0],[-3691892.3042576676,-20827793.184875213,0,418620,1,0],[-3450567.480344878,-20916556.008998588,0,418680,1,0],[-3208728.4214775027,-21002144.305173393,0,418740,2,0],[-2966235.2333901664,-21084691.09053817,0,418800,0,0],[-2723303.872546487,-21164062.14742838,0,418860,2,0],[-2479977.9923561374,-21240328.135603335,0,418920,2,0],[-2235924.2138549066,-21313592.606458046,0,418980,1,0],[-1991398.331833785,-21383790.191344425,0,419040,2,0],[-1746381.6705666278,-21450940.736071654,0,419100,1,0],[-1500964.1946645675,-21515022.345238905,0,419160,0,0],[-1255490.0340556344,-21576006.601199586,0,419220,2,0],[-1009862.5380793666,-21633940.06937016,0,419280,0,0],[-764056.7207804096,-21688784.370372247,0,419340,1,0],[-518343.8328973233,-21740564.143513035,0,419400,0,0],[-272743.3342773629,-21789284.199025813,0,419460,2,0],[-27089.663443136502,-21834960.876189608,0,419520,0,0],[218571.2243775863,-21877636.252117272,0,419580,2,0],[464197.14518684807,-21917325.4721866,0,419640,0,0],[709763.7199853978,-21954013.143766724,0,419700,0,0],[954872.9928155101,-21987682.85684427,0,419760,2,0],[1199853.4136506848,-22018395.868187156,0,419820,0,0],[1444682.449484306,-22046164.223500084,0,419880,1,0],[1689119.0587087218,-22070972.74650914,0,419940,1,0],[1933340.6996716757,-22092861.90475016,0,420000,0,0],[2177146.625334688,-22111832.16115998,0,420060,1,0],[2420471.529883436,-22127896.29320545,0,420120,2,0],[2663654.662697987,-22141090.537649468,0,420180,2,0],[2906884.8538976284,-22151428.89045933,0,420240,1,0],[3149899.6057241224,-22158933.04022112,0,420300,1,0],[3392502.748228374,-22163621.27986231,0,420360,1,0],[3634690.6032691128,-22165468.58100497,0,420420,2,0],[3876587.431341071,-22164507.510896984,0,420480,1,0],[4118180.7299920395,-22160753.463214196,0,420540,2,0],[4359433.390211874,-22154219.270537194,0,420600,2,0],[4600513.192593926,-22144911.027436256,0,420660,1,0],[4841179.194159391,-22132844.02281979,0,420720,0,0],[5081097.275152927,-22118055.998845164,0,420780,1,0],[5320180.82274589,-22100570.754369654,0,420840,0,0],[5558466.652051065,-22080403.512668453,0,420900,0,0],[5795704.256739557,-22057585.307687696,0,420960,2,0],[6032227.79263246,-22032107.6540079,0,421020,1,0],[6268221.605987979,-22003934.574095044,0,421080,0,0],[6503269.812831831,-21973147.548588615,0,421140,2,0],[6737574.007082693,-21939768.989715956,0,421200,2,0],[6971399.360316182,-21903699.454906147,0,421260,2,0],[7204775.173230346,-21864990.022883765,0,421320,0,0],[7437302.060605023,-21823718.114353556,0,421380,0,0],[7668601.931174944,-21779968.487299234,0,421440,0,0],[7898664.208615777,-21733753.43135778,0,421500,2,0],[8127782.688200208,-21684992.259777088,0,421560,1,0],[8356168.689087301,-21633689.48441216,0,421620,0,0],[8583396.742017964,-21579934.42211256,0,421680,2,0],[8809648.728268782,-21523726.99486507,0,421740,0,0],[9034904.061626578,-21465044.728515957,0,421800,2,0],[9259114.864446629,-21403936.212226886,0,421860,1,0],[9482461.996174712,-21340367.482871737,0,421920,1,0],[9704741.244998215,-21274378.74773499,0,421980,0,0],[9925746.438351324,-21206050.729071327,0,422040,0,0],[10145321.855936693,-21135473.512798354,0,422100,2,0],[10363768.986629052,-21062540.253132515,0,422160,1,0],[10581203.836165484,-20987200.317810725,0,422220,1,0],[10797499.490224581,-20909542.245096635,0,422280,2,0],[11012764.708912484,-20829527.91940654,0,422340,2,0],[11227165.077064922,-20747102.70289124,0,422400,2,0],[11440665.959396672,-20662264.621925343,0,422460,0,0],[11652923.802790552,-20575188.290812135,0,422520,0,0],[11863576.899587395,-20486031.27568952,0,422580,2,0],[12072959.36793942,-20394631.04618637,0,422640,1,0],[12281199.092225075,-20300996.16921042,0,422700,1,0],[12488128.857606623,-20205132.95440171,0,422760,0,0],[12693535.964520566,-20107222.493682273,0,422820,1,0],[12897440.554421406,-20007225.991837643,0,422880,0,0],[13099819.406954266,-19905170.613490105,0,422940,2,0],[13300779.551974507,-19801015.717442837,0,423000,2,0],[13500694.625183934,-19694610.38395941,0,423060,1,0],[13699322.758933846,-19586032.029810496,0,423120,1,0],[13896504.306041805,-19475407.69772444,0,423180,1,0],[14092245.315876327,-19362707.36894734,0,423240,0,0],[14286342.773943895,-19248122.333213516,0,423300,2,0],[14478965.533836646,-19131492.336191643,0,423360,1,0],[14670219.544786396,-19012808.6796452,0,423420,0,0],[14859829.55303783,-18892237.42669089,0,423480,1,0],[15047722.211058041,-18769819.820349596,0,423540,1,0],[15234089.973279763,-18645458.179094214,0,423600,0,0],[15418719.357881518,-18519288.481891107,0,423660,1,0],[15601638.019659003,-18391314.52093128,0,423720,2,0],[15783105.09946682,-18261374.05234838,0,423780,1,0],[15963088.315747071,-18129434.344098713,0,423840,2,0],[16141612.770146428,-17995538.44413505,0,423900,0,0],[16318493.692916885,-17859847.97928998,0,423960,1,0],[16493570.113468679,-17722447.64797853,0,424020,1,0],[16666981.523226742,-17583250.81028105,0,424080,0,0],[16838584.229741905,-17442397.988881126,0,424140,0,0],[17008207.929722507,-17300000.47634933,0,424200,1,0],[17175979.280825023,-17155993.52779293,0,424260,2,0],[17342148.897749778,-17010152.08230701,0,424320,2,0],[17506871.68314235,-16862367.185185276,0,424380,1,0],[17669988.935278196,-16712762.657927128,0,424440,0,0],[17831198.804834593,-16561625.525356606,0,424500,0,0],[17990344.57780361,-16409087.929606391,0,424560,2,0],[18147754.391452465,-16254933.455662483,0,424620,1,0],[18303461.54302356,-16098997.803140724,0,424680,0,0],[18457231.07930444,-15941638.293255856,0,424740,2,0],[18609178.615324683,-15782669.382504204,0,424800,2,0],[18759523.201047257,-15621901.808637777,0,424860,1,0],[18908159.622794725,-15459440.665329013,0,424920,0,0],[19054788.367188983,-15295619.289007323,0,424980,2,0],[19199564.372932397,-15130287.59393523,0,425040,0,0],[19342442.568129282,-14963443.080522861,0,425100,1,0],[19483326.586865846,-14795299.524526147,0,425160,2,0],[19622392.50974081,-14625535.816195313,0,425220,0,0],[19759556.839402046,-14454371.277037652,0,425280,1,0],[19894674.251364045,-14281915.64203909,0,425340,1,0],[20027825.404141903,-14108083.689109258,0,425400,2,0],[20159154.16127868,-13932713.114385046,0,425460,0,0],[20288511.1381007,-13755974.0886224,0,425520,2,0],[20415893.042025138,-13577926.045466086,0,425580,0,0],[20541269.094981324,-13398530.863340618,0,425640,1,0],[20664583.50563449,-13217987.725704506,0,425700,1,0],[20785838.874308407,-13036159.112157328,0,425760,2,0],[20905205.167118646,-12852899.847886981,0,425820,2,0],[21022741.406045355,-12668130.014849301,0,425880,1,0],[21138305.859058097,-12481944.506355863,0,425940,1,0],[21251838.96262843,-12294539.697797144,0,426000,0,0],[21363222.947567485,-12106136.22762123,0,426060,0,0],[21472349.246786132,-11916849.431797752,0,426120,0,0],[21579226.24918189,-11726713.07579254,0,426180,0,0],[21683812.707826354,-11535769.422611905,0,426240,2,0],[21786330.504930563,-11343695.230950555,0,426300,1,0],[21886799.62448002,-11150367.978925077,0,426360,1,0],[21985154.54619522,-10955979.474897254,0,426420,2,0],[22081460.86888622,-10760348.700546304,0,426480,2,0],[22175790.291114546,-10563350.45208577,0,426540,0,0],[22267987.18825664,-10365350.380198173,0,426600,2,0],[22357990.177043542,-10166297.478874685,0,426660,0,0],[22445852.6517012,-9966304.222594982,0,426720,0,0],[22531410.032775026,-9765675.946369868,0,426780,2,0],[22614773.946490753,-9564091.641240474,0,426840,1,0],[22695987.529862463,-9361415.315548759,0,426900,1,0],[22775040.75433313,-9157833.478748087,0,426960,2,0],[22851916.269549843,-8953183.50850088,0,427020,1,0],[22926663.069001984,-8747491.45223016,0,427080,1,0],[22999156.183221288,-8540976.816621099,0,427140,0,0],[23069383.975320034,-8333769.722729629,0,427200,1,0],[23137282.426303018,-8125957.893484979,0,427260,2,0],[23203004.924035747,-7917155.989876947,0,427320,0,0],[23266451.265218824,-7707595.585119913,0,427380,2,0],[23327648.05651524,-7497264.37854424,0,427440,1,0],[23386625.414698537,-7286073.4275432,0,427500,0,0],[23443236.9445577,-7074290.075176276,0,427560,2,0],[23497595.667697802,-6861852.15706886,0,427620,0,0],[23549621.020965066,-6648739.086641679,0,427680,0,0],[23599286.084934063,-6435330.787790398,0,427740,2,0],[23646646.602492336,-6221266.544212943,0,427800,1,0],[23691683.175238885,-6006445.185299452,0,427860,2,0],[23734449.44542973,-5790836.29546337,0,427920,0,0],[23774869.938409224,-5574653.36325631,0,427980,1,0],[23812944.910537455,-5358101.66245034,0,428040,1,0],[23848639.097450487,-5141028.165743378,0,428100,1,0],[23881969.738033697,-4923443.104003421,0,428160,0,0],[23912929.284329977,-4705573.697742485,0,428220,2,0],[23941522.803582005,-4487202.898267889,0,428280,1,0],[23967746.422003888,-4268211.511428847,0,428340,2,0],[23991631.042049468,-4048636.8196069538,0,428400,2,0],[24013125.266364664,-3828278.6457857285,0,428460,1,0],[24032275.394146122,-3607373.5469507836,0,428520,0,0],[24049000.31206651,-3386283.644414592,0,428580,0,0],[24063267.356857955,-3165206.1719330773,0,428640,0,0],[24075116.404763427,-2944199.7126692333,0,428700,0,0],[24084523.811286945,-2723241.965829402,0,428760,2,0],[24091518.98461438,-2502000.085522647,0,428820,2,0],[24096064.268270183,-2280136.7023473736,0,428880,1,0],[24098176.819223367,-2057880.0733277623,0,428940,2,0],[24097869.9641847,-1835214.8327486373,0,429000,1,0],[24095089.28881989,-1612192.3152312187,0,429060,1,0],[24089882.01942735,-1389017.1342345737,0,429120,1,0],[24082185.679601,-1165692.1844874248,0,429180,0,0],[24072030.184541956,-942443.6519560382,0,429240,0,0],[24059442.836502023,-719447.3227501393,0,429300,0,0],[24044380.979610078,-496731.38225995813,0,429360,1,0],[24026881.008742746,-274134.5656339043,0,429420,0,0],[24006879.398743287,-51710.901788399875,0,429480,2,0],[23984399.98501142,170747.8271161451,0,429540,0,0],[23959413.15239926,393161.3408961302,0,429600,2,0],[23931952.453045744,615545.8943821713,0,429660,2,0],[23901929.51775349,838225.5237590572,0,429720,1,0],[23869371.42577511,1060975.369247513,0,429780,2,0],[23834293.217494916,1283810.4582392024,0,429840,1,0],[23796647.56652362,1506694.3613846735,0,429900,2,0],[23756458.310657397,1729594.4484784373,0,429960,0,0],[23713756.41642617,1952288.3377155287,0,430020,2,0],[23668510.385053203,2174788.0288195056,0,430080,0,0],[23620745.733915206,2397062.3549774424,0,430140,2,0],[23570451.06839312,2619076.8881074465,0,430200,1,0],[23517572.82005412,2840982.404289398,0,430260,1,0],[23462181.593362402,3062586.011802397,0,430320,1,0],[23404222.81441785,3283847.354783981,0,430380,1,0],[23343719.514649775,3504757.4191094036,0,430440,0,0],[23280746.764939252,3725104.362600493,0,430500,1,0],[23215249.269607715,3944869.1682804655,0,430560,1,0],[23147199.89774824,4164203.1078499183,0,430620,0,0],[23076653.77388914,4382915.682917202,0,430680,2,0],[23003554.3060657,4601151.877889892,0,430740,2,0],[22927775.41015425,4819185.138761483,0,430800,0,0],[22849443.83260153,5036716.802901759,0,430860,2,0],[22768560.04023405,5253662.954899969,0,430920,0,0],[22685119.039883137,5470010.457999307,0,430980,0,0],[22599218.70849905,5685411.114779109,0,431040,1,0],[22510858.81528138,5900022.2437515585,0,431100,2,0],[22419831.873698387,6114113.277452486,0,431160,0,0],[22326275.673524003,6327490.207689837,0,431220,1,0],[22230204.16011625,6539999.6290043825,0,431280,2,0],[22131511.64962818,6751910.4353488535,0,431340,0,0],[22030237.944991834,6963026.0941854175,0,431400,1,0],[21926488.862707116,7173172.049061695,0,431460,0,0],[21820252.776584722,7382329.790690759,0,431520,2,0],[21711478.440179095,7590614.298216646,0,431580,1,0],[21600027.460862767,7798182.724734117,0,431640,2,0],[21485933.30756854,8004951.077277301,0,431700,0,0],[21369304.041518968,8210798.785754411,0,431760,1,0],[21250198.171896532,8415487.438101172,0,431820,1,0],[21128538.64101665,8619165.669707825,0,431880,2,0],[21004238.996014405,8821978.332182655,0,431940,1,0],[20877291.257585675,9023852.459268123,0,432000,1,0],[20747780.32034697,9224631.793108223,0,432060,0,0],[20615860.945379317,9424118.451598704,0,432120,0,0],[20481558.47857759,9622159.377418136,0,432180,1,0],[20344846.74640106,9818850.410018822,0,432240,1,0],[20205606.02596482,10014315.50013846,0,432300,1,0],[20063834.848724253,10208534.578587221,0,432360,2,0],[19919421.45078369,10401630.817304222,0,432420,1,0],[19772377.688080594,10593536.521353828,0,432480,1,0],[19622836.040361643,10784095.04458929,0,432540,2,0],[19470675.276228935,10973424.273365213,0,432600,1,0],[19315884.44127717,11161490.578106022,0,432660,1,0],[19158610.943320196,11348097.970777681,0,432720,0,0],[18998953.279124428,11533101.834604032,0,432780,2,0],[18836824.808636867,11716581.19171036,0,432840,1,0],[18672083.471585527,11898683.902336216,0,432900,0,0],[18505008.75656056,12079065.347896278,0,432960,2,0],[18335470.13573032,12257824.824657336,0,433020,1,0],[18163341.654687606,12435091.247850897,0,433080,0,0],[17988903.29123259,12610548.49391875,0,433140,1,0],[17812167.55922783,12784179.311829504,0,433200,2,0],[17632872.160827126,12956202.300091304,0,433260,2,0],[17450909.78087706,13126693.59325111,0,433320,1,0],[17266395.574774116,13295490.042097975,0,433380,0,0],[17079633.256251004,13462323.926670274,0,433440,0,0],[16890752.80757593,13627053.921909962,0,433500,2,0],[16699486.793333292,13789850.353510335,0,433560,2,0],[16505594.230991015,13950958.0545814,0,433620,0,0],[16309370.35948841,14110054.611745145,0,433680,1,0],[16110931.349110706,14267032.34058232,0,433740,2,0],[15910054.777785374,14422067.376543142,0,433800,0,0],[15706844.963461516,14575014.02489329,0,433860,1,0],[15501526.319000563,14725720.917252617,0,433920,2,0],[15293746.482506944,14874378.277567377,0,433980,2,0],[15083426.784104878,15021045.67215851,0,434040,1,0],[14870726.180874394,15165566.5294342,0,434100,0,0],[14655933.120468268,15307740.604754297,0,434160,2,0],[14438927.42006391,15447585.974985065,0,434220,0,0],[14219759.078638386,15585085.850930678,0,434280,1,0],[13998563.881409055,15720124.028549293,0,434340,0,0],[13775348.91019868,15852637.095577197,0,434400,1,0],[13550170.636193965,15982619.570237722,0,434460,2,0],[13322705.767533844,16110192.395252835,0,434520,1,0],[13092984.509889403,16235307.455652855,0,434580,0,0],[12861380.567187997,16357776.745238423,0,434640,1,0],[12627878.98276922,16477574.132638564,0,434700,1,0],[12392340.490264038,16594703.05289326,0,434760,1,0],[12154803.17577283,16709163.487643586,0,434820,2,0],[11915156.95119954,16820990.71155517,0,434880,1,0],[11673350.214447046,16930124.620875027,0,434940,2,0],[11429466.877480747,17036548.1494328,0,435000,0,0],[11183710.2238125,17140136.990005538,0,435060,2,0],[10936044.341165617,17240845.686155755,0,435120,2,0],[10686202.107008984,17338796.63722353,0,435180,0,0],[10434570.943239704,17433804.709127545,0,435240,1,0],[10181310.23496705,17525761.588930424,0,435300,1,0],[9926305.73489732,17614684.193114854,0,435360,1,0],[9669570.189005189,17700563.002093654,0,435420,1,0],[9411141.649554288,17783347.20419292,0,435480,1,0],[9151061.5756192,17862997.165932946,0,435540,0,0],[8889519.304456716,17939412.11633536,0,435600,0,0],[8626729.715766327,18012539.217160214,0,435660,1,0],[8362573.495207676,18082370.045394,0,435720,1,0],[8096894.248299511,18148920.148600113,0,435780,2,0],[7829565.614691395,18212190.511306234,0,435840,1,0],[7560610.886981428,18272135.866714116,0,435900,0,0],[7290446.0637511825,18328678.940514952,0,435960,1,0],[7019080.202778592,18381732.795514688,0,436020,1,0],[6746379.618755491,18431344.859748177,0,436080,1,0],[6472429.184948115,18477452.881253116,0,436140,1,0],[6197212.5506309,18520010.71380772,0,436200,2,0],[5920639.024259124,18559053.46131023,0,436260,2,0],[5642555.622359571,18594519.655717697,0,436320,0,0],[5363378.449916543,18626357.980216637,0,436380,1,0],[5083313.5090903165,18654517.408223525,0,436440,0,0],[4802409.352796611,18678951.84984877,0,436500,2,0],[4520564.88161932,18699639.52818029,0,436560,1,0],[4237623.055484003,18716569.09792439,0,436620,1,0],[3953820.9266041606,18729716.49027246,0,436680,1,0],[3669205.871132912,18739015.73958133,0,436740,0,0],[3384013.466507564,18744449.80947117,0,436800,1,0],[3098304.290223676,18746006.44800478,0,436860,1,0],[2811934.814874833,18743623.977253795,0,436920,1,0],[2524985.706428935,18737291.992525358,0,436980,1,0],[2237501.4724281724,18726984.622728456,0,437040,1,0],[1949520.757834663,18712685.936637856,0,437100,2,0],[1660954.9433736056,18694329.583991956,0,437160,1,0],[1371844.6557382427,18671903.09949147,0,437220,2,0],[1082258.793527867,18645375.059147567,0,437280,1,0],[792262.4380662368,18614728.056496568,0,437340,2,0],[501898.03463352786,18579931.04545603,0,437400,0,0],[211419.39757840737,18540975.58001052,0,437460,1,0],[-78907.07221446134,18497881.44813802,0,437520,2,0],[-369404.3093519714,18450568.394618113,0,437580,0,0],[-659826.3860602971,18399042.277589034,0,437640,0,0],[-949723.5872087912,18343341.66246444,0,437700,0,0],[-1239073.8411500973,18283471.503346484,0,437760,1,0],[-1527940.0222305271,18219377.063013855,0,437820,1,0],[-1816457.8473630608,18151003.68097027,0,437880,0,0],[-2104360.94737026,18078368.93347781,0,437940,0,0],[-2391413.9371800604,18001540.524160173,0,438000,1,0],[-2677728.3896150407,17920441.001284342,0,438060,2,0],[-2963568.6429178133,17834968.105171185,0,438120,1,0],[-3248866.9479301157,17745113.14050874,0,438180,2,0],[-3533533.1797892014,17650855.226999026,0,438240,0,0],[-3817326.7828575447,17552261.684196696,0,438300,1,0],[-4100012.3962444817,17449389.661101602,0,438360,1,0],[-4381670.234446381,17342155.98118914,0,438420,1,0],[-4662239.433616212,17230587.844623122,0,438480,2,0],[-4941794.783147717,17114593.534244362,0,438540,1,0],[-5220256.907229028,16994200.341047462,0,438600,1,0],[-5497397.690996387,16869447.01360531,0,438660,1,0],[-5773109.986328548,16740376.698825939,0,438720,0,0],[-6047176.838039846,16607046.805502696,0,438780,0,0],[-6319347.493022889,16469574.857695362,0,438840,1,0],[-6589710.851170347,16327862.582551181,0,438900,1,0],[-6858332.696677312,16181872.552264908,0,438960,2,0],[-7125310.132770415,16031503.775946168,0,439020,2,0],[-7390699.112991084,15876699.274823774,0,439080,2,0],[-7654430.618248549,15717470.955680404,0,439140,0,0],[-7916104.008673467,15554033.42369655,0,439200,1,0],[-8175480.6540392125,15386478.184963105,0,439260,1,0],[-8432648.484594038,15214759.345560167,0,439320,2,0],[-8687661.307280451,15038789.231343795,0,439380,0,0],[-8940279.777563598,14858704.938188048,0,439440,2,0],[-9190469.33920164,14674519.328516044,0,439500,0,0],[-9438093.52390589,14486282.39921725,0,439560,1,0],[-9682974.138666298,14294137.12255911,0,439620,2,0],[-9925280.279783417,14097898.063657371,0,439680,0,0],[-10164806.990819521,13897707.653164353,0,439740,1,0],[-10401353.55464163,13693713.409213485,0,439800,2,0],[-10635085.527945755,13485761.678020408,0,439860,1,0],[-10865945.422281548,13273852.484114526,0,439920,1,0],[-11093723.123145828,13058166.911262253,0,439980,2,0],[-11318456.119123481,12838644.988781085,0,440040,2,0],[-11540207.101457339,12615189.278607318,0,440100,1,0],[-11758769.199073613,12387970.627694037,0,440160,1,0],[-11973959.806832924,12157200.28711371,0,440220,1,0],[-12185678.0591054,11922917.949050702,0,440280,0,0],[-12393743.001047065,11685312.480232906,0,440340,1,0],[-12598096.794387134,11444457.304780446,0,440400,0,0],[-12798672.12663963,11200411.920949815,0,440460,2,0],[-12995508.119860835,10953090.65064529,0,440520,1,0],[-13188668.240578685,10702423.498480124,0,440580,1,0],[-13377955.92020182,10448634.824046846,0,440640,2,0],[-13563434.032558301,10191628.98829649,0,440700,0,0],[-13744921.696216712,9931627.137075568,0,440760,1,0],[-13922262.073720654,9668856.710672835,0,440820,1,0],[-14095502.790865408,9403235.94361521,0,440880,0,0],[-14264485.140729092,9134990.622517174,0,440940,1,0],[-14429159.793220453,8864203.022940274,0,441000,0,0],[-14589483.635539336,8590958.217551181,0,441060,1,0],[-14745398.63432381,8315308.235519265,0,441120,0,0],[-14896873.637288583,8037373.4737402145,0,441180,0,0],[-15043761.936691731,7757385.055380637,0,441240,1,0],[-15186132.783812704,7475247.000821117,0,441300,1,0],[-15323989.198808176,7190897.050003981,0,441360,1,0],[-15457318.457160728,6904418.817156851,0,441420,1,0],[-15586089.799285792,6615902.961854841,0,441480,1,0],[-15710237.776170004,6325432.079596607,0,441540,2,0],[-15829822.454001738,6032920.522934494,0,441600,1,0],[-15944793.632327728,5738469.876653045,0,441660,1,0],[-16055064.487422967,5442323.462523047,0,441720,2,0],[-16160684.16937284,5144401.880197708,0,441780,1,0],[-16261593.191363597,4844800.180083375,0,441840,2,0],[-16357782.370274844,4543594.122135673,0,441900,1,0],[-16449240.671074128,4240900.473879375,0,441960,2,0],[-16535928.31058289,3936782.8679496804,0,442020,0,0],[-16617776.040424816,3631514.2017499814,0,442080,0,0],[-16694689.244210193,3325538.781216709,0,442140,0,0],[-16766678.98342958,3018950.3968416206,0,442200,1,0],[-16833749.090236284,2711659.403988719,0,442260,0,0],[-16895905.01698933,2403763.4686384685,0,442320,0,0],[-16953118.810054198,2095514.8878004586,0,442380,2,0],[-17005455.742537737,1786673.7389759386,0,442440,2,0],[-17052967.97877398,1476946.2266280698,0,442500,2,0],[-17095654.67249529,1166457.4398640841,0,442560,0,0],[-17133464.526010025,855628.671816788,0,442620,1,0],[-17166378.66797,544746.5426545991,0,442680,0,0],[-17194423.362506658,233887.6874695057,0,442740,1,0],[-17217592.091556314,-76869.11597441998,0,442800,0,0],[-17235915.745804373,-387420.4459772988,0,442860,1,0],[-17249396.00145111,-697682.3312422127,0,442920,2,0],[-17258087.028900612,-1007939.1358171747,0,442980,2,0],[-17261976.493897773,-1318273.2288799614,0,443040,2,0],[-17261100.43794462,-1628605.8739069223,0,443100,1,0],[-17255462.296606,-1938648.612915458,0,443160,1,0],[-17245108.607315544,-2248173.478339059,0,443220,0,0],[-17230040.09268914,-2556898.9290714944,0,443280,2,0],[-17210309.530278448,-2864951.590856302,0,443340,1,0],[-17185902.507323984,-3172388.4761068737,0,443400,2,0],[-17156867.2638049,-3479167.3896606965,0,443460,2,0],[-17123208.15236538,-3785355.1557643986,0,443520,0,0],[-17084998.090203147,-4090545.6664067446,0,443580,0,0],[-17042305.952516023,-4394297.2620264795,0,443640,0,0],[-16995182.440508727,-4696521.6626192415,0,443700,0,0],[-16943676.302959125,-4997174.930807708,0,443760,2,0],[-16887747.274084643,-5296534.970557268,0,443820,1,0],[-16827421.354790743,-5594692.133734694,0,443880,2,0],[-16762723.077735601,-5891593.560940185,0,443940,2,0],[-16693647.38921109,-6187332.983936531,0,444000,0,0],[-16620339.777169129,-6481504.167909516,0,444060,2,0],[-16542830.194885012,-6774027.790711355,0,444120,1,0],[-16461112.914704116,-7065029.092300635,0,444180,0,0],[-16375347.777314948,-7354098.242003018,0,444240,0,0],[-16285616.573523095,-7640977.98830389,0,444300,2,0],[-16191870.249351962,-7925985.125147628,0,444360,1,0],[-16094115.041839678,-8209238.977813851,0,444420,2,0],[-15992362.531392457,-8490646.254995264,0,444480,0,0],[-15886758.898465475,-8770011.633043135,0,444540,0,0],[-15777460.900674496,-9046935.931363532,0,444600,2,0],[-15664404.17545532,-9321692.585539214,0,444660,2,0],[-15547494.412496826,-9594580.822582778,0,444720,0,0],[-15426936.819409786,-9865206.032840913,0,444780,2,0],[-15302755.033272909,-10133519.92117191,0,444840,1,0],[-15174961.693946293,-10399665.46661921,0,444900,1,0],[-15043655.56994099,-10663394.105111679,0,444960,2,0],[-14908849.285166787,-10924852.849429812,0,445020,1,0],[-14770541.257659629,-11183986.31521246,0,445080,0,0],[-14629003.036088863,-11440447.708468182,0,445140,1,0],[-14484278.071262455,-11694170.151387163,0,445200,1,0],[-14336326.290376527,-11945295.207969079,0,445260,1,0],[-14185206.463699076,-12193789.52653203,0,445320,0,0],[-14031077.746168757,-12439462.727601048,0,445380,0,0],[-13874079.500894204,-12682117.783140346,0,445440,1,0],[-13714192.357606536,-12921869.760639552,0,445500,2,0],[-13551255.081875037,-13159027.038287556,0,445560,0,0],[-13385441.887081819,-13393352.53787027,0,445620,2,0],[-13216785.181302132,-13624876.717494763,0,445680,1,0],[-13045256.023643719,-13853665.520157408,0,445740,2,0],[-12870902.39036117,-14079730.767824441,0,445800,2,0],[-12693663.20507152,-14303157.015866315,0,445860,2,0],[-12513589.83567069,-14523941.087421322,0,445920,1,0],[-12330864.369076237,-14741879.396762451,0,445980,0,0],[-12145764.308857556,-14956729.035442792,0,446040,0,0],[-11958461.308602232,-15168293.2406324,0,446100,0,0],[-11769013.259248193,-15376572.288982647,0,446160,1,0],[-11577362.363414863,-15581665.32616049,0,446220,2,0],[-11383311.17147008,-15783852.123645334,0,446280,1,0],[-11186919.15170175,-15983094.703557063,0,446340,1,0],[-10988379.17177682,-16179240.114451239,0,446400,0,0],[-10787855.209030658,-16372154.26795092,0,446460,2,0],[-10585265.963826494,-16561959.193262782,0,446520,1,0],[-10380557.510238726,-16748747.663126571,0,446580,0,0],[-10174026.326424008,-16932286.947920427,0,446640,1,0],[-9965746.985582413,-17112540.33724337,0,446700,0,0],[-9755753.360483184,-17289531.598469615,0,446760,1,0],[-9544117.59375558,-17463217.86373971,0,446820,2,0],[-9330593.390874514,-17633855.033012003,0,446880,1,0],[-9115245.498117985,-17801405.52755804,0,446940,0,0],[-8898398.712189352,-17965665.05913229,0,447000,1,0],[-8680127.841886118,-18126619.16512501,0,447060,1,0],[-8460303.52191065,-18284360.376566548,0,447120,1,0],[-8239011.75745385,-18438902.734913576,0,447180,0,0],[-8016433.597404842,-18590102.575731363,0,447240,1,0],[-7792613.926267407,-18738016.991431803,0,447300,2,0],[-7567282.385801498,-18882805.306058474,0,447360,1,0],[-7340544.250184524,-19024469.903042886,0,447420,2,0],[-7112384.79033148,-19163009.409983087,0,447480,0,0],[-6883046.514362932,-19298318.49385082,0,447540,1,0],[-6652716.226187908,-19430333.19696271,0,447600,1,0],[-6421258.491506626,-19559120.548123702,0,447660,1,0],[-6188776.48591589,-19684695.181753904,0,447720,0,0],[-5955432.982744933,-19806965.158752117,0,447780,2,0],[-5721118.468663341,-19926033.58062328,0,447840,1,0],[-5485710.450728481,-20041957.376271408,0,447900,1,0],[-5249442.673480942,-20154689.251700394,0,447960,0,0],[-5012503.960996494,-20264154.620871376,0,448020,2,0],[-4774765.673032104,-20370405.138023347,0,448080,2,0],[-4535956.055811344,-20473598.86898762,0,448140,2,0],[-4296105.790834112,-20573767.23258471,0,448200,0,0],[-4055590.8642220106,-20670745.71900655,0,448260,2,0],[-3814451.4665118656,-20764552.564545047,0,448320,0,0],[-3572736.929814483,-20855192.055916175,0,448380,1,0],[-3330642.028980952,-20942619.48754245,0,448440,0,0],[-3088216.4879712784,-21026831.68322205,0,448500,1,0],[-2845517.258550685,-21107839.0642574,0,448560,2,0],[-2602199.70033517,-21185749.897836123,0,448620,1,0],[-2358339.54400246,-21260609.368546475,0,448680,2,0],[-2113957.8836735315,-21332397.147067785,0,448740,1,0],[-1869082.6875840104,-21401139.64849673,0,448800,2,0],[-1623781.348490518,-21466821.787314024,0,448860,1,0],[-1378075.7049129459,-21529465.37432981,0,448920,2,0],[-1131994.7372873859,-21589066.86785215,0,448980,0,0],[-885748.6852769225,-21645613.38902366,0,449040,1,0],[-639540.4147471318,-21699066.68913349,0,449100,0,0],[-393439.50604652264,-21749436.139294066,0,449160,0,0],[-147624.3400064237,-21796697.046874274,0,449220,1,0],[98029.33456576981,-21840910.640289184,0,449280,0,0],[343473.8794837961,-21882085.101306476,0,449340,1,0],[588729.9231497729,-21920236.8094591,0,449400,2,0],[834056.5465575263,-21955421.199701484,0,449460,1,0],[1079456.509441413,-21987666.830744438,0,449520,0,0],[1324532.1634540951,-22016934.66701466,0,449580,0,0],[1569084.12505415,-22043226.80175514,0,449640,2,0],[1813421.4380853677,-22066571.37332724,0,449700,2,0],[2057882.5698123418,-22087029.198822018,0,449760,1,0],[2302230.554945761,-22104625.905325785,0,449820,2,0],[2546484.841230726,-22119325.063198388,0,449880,0,0],[2790384.332315717,-22131128.475355335,0,449940,0,0],[3033573.015020639,-22140092.638651412,0,450000,2,0],[3276390.607473121,-22146194.57016267,0,450060,0,0],[3518745.777943354,-22149437.460704986,0,450120,1,0],[3760520.3783653583,-22149910.42639343,0,450180,2,0],[4001979.7557885507,-22147550.091760475,0,450240,1,0],[4243115.558623476,-22142398.856818046,0,450300,1,0],[4483708.286439664,-22134478.814218346,0,450360,2,0],[4723946.811324057,-22123797.69422196,0,450420,1,0],[4963749.364435525,-22110363.024371356,0,450480,1,0],[5202963.914137789,-22094194.37960784,0,450540,1,0],[5441531.499243572,-22075321.817563474,0,450600,2,0],[5679628.019953586,-22053757.321688436,0,450660,1,0],[5917183.8489546925,-22029478.92839733,0,450720,0,0],[6153873.5326681165,-22002556.579849977,0,450780,0,0],[6389445.358395207,-21973015.046767376,0,450840,0,0],[6623899.1757464195,-21940922.27540855,0,450900,0,0],[6857209.253008492,-21906252.443015914,0,450960,2,0],[7089705.729577066,-21868970.642042004,0,451020,2,0],[7321725.004254046,-21829043.324851483,0,451080,2,0],[7553237.025771359,-21786481.60846462,0,451140,0,0],[7783851.23299992,-21741407.1228208,0,451200,1,0],[8013399.772816855,-21693799.80113464,0,451260,2,0],[8242191.607746939,-21643664.265235614,0,451320,1,0],[8470199.19682903,-21590974.597571775,0,451380,1,0],[8697238.572021183,-21535789.45177902,0,451440,0,0],[8923100.677791981,-21478195.69407769,0,451500,0,0],[9147620.228584955,-21418260.857225306,0,451560,2,0],[9371063.186381552,-21355870.211407933,0,451620,1,0],[9593638.384054165,-21291003.597186107,0,451680,1,0],[9815147.76595256,-21223771.16284044,0,451740,1,0],[10035535.258122372,-21154126.042922024,0,451800,1,0],[10254808.67505902,-21082123.83063922,0,451860,0,0],[10472763.703691589,-21007844.815915402,0,451920,1,0],[10689374.758747896,-20931273.553879026,0,451980,0,0],[10904660.387349857,-20852472.570115823,0,452040,1,0],[11118574.862545194,-20771431.84179351,0,452100,2,0],[11331416.563459478,-20688031.798416283,0,452160,2,0],[11543382.01150965,-20602257.2218315,0,452220,1,0],[11754233.141945977,-20514142.695791375,0,452280,1,0],[11963827.656215712,-20423834.95426301,0,452340,0,0],[12171932.425493715,-20331376.63393596,0,452400,0,0],[12378415.673713204,-20236847.768791594,0,452460,2,0],[12583573.85317318,-20140170.286847483,0,452520,1,0],[12787542.93548769,-20041255.494195614,0,452580,2,0],[12990289.827597022,-19940122.453626323,0,452640,2,0],[13191985.173379434,-19836692.55066789,0,452700,0,0],[13392299.289831275,-19731169.945888054,0,452760,0,0],[13590858.347621493,-19623705.196653698,0,452820,2,0],[13787982.328975946,-19514190.514154,0,452880,1,0],[13983837.468850823,-19402543.19734461,0,452940,1,0],[14178200.225636242,-19288832.916958164,0,453000,1,0],[14371076.00603117,-19173125.408313204,0,453060,0,0],[14562319.894914743,-19055521.473782465,0,453120,1,0],[14751875.745553069,-18935998.864790667,0,453180,0,0],[14939764.868023844,-18814642.178331893,0,453240,2,0],[15126117.611472629,-18691313.826624822,0,453300,0,0],[15310876.229533873,-18566077.000057496,0,453360,2,0],[15494075.689598912,-18438905.511080265,0,453420,1,0],[15675843.78233536,-18309740.34038763,0,453480,2,0],[15856139.17311371,-18178618.733785644,0,453540,0,0],[16034827.351648776,-18045614.907754235,0,453600,2,0],[16211837.371392714,-17910765.427431095,0,453660,0,0],[16387253.93947904,-17774106.039133314,0,453720,2,0],[16560976.099297436,-17635644.641480956,0,453780,0,0],[16733022.370688803,-17495375.909024294,0,453840,0,0],[16903100.409296606,-17353595.63995152,0,453900,2,0],[17071461.905022074,-17210056.706970707,0,453960,0,0],[17238113.246205274,-17064774.691225823,0,454020,2,0],[17403034.03329126,-16917768.435893297,0,454080,1,0],[17566351.489289023,-16768971.472836386,0,454140,1,0],[17727889.683668215,-16618455.837083668,0,454200,1,0],[17887670.534861453,-16466318.498401992,0,454260,2,0],[18045773.47570322,-16312374.17737276,0,454320,1,0],[18202240.225738764,-16156704.32160622,0,454380,2,0],[18356979.493284456,-15999293.470128516,0,454440,0,0],[18509921.21490731,-15840287.990733016,0,454500,1,0],[18660900.90964447,-15679840.989010356,0,454560,1,0],[18810016.567092255,-15517849.870730203,0,454620,1,0],[18957303.80832551,-15354321.207695648,0,454680,2,0],[19102789.59738626,-15189127.317335075,0,454740,1,0],[19246557.944146425,-15022307.657255,0,454800,0,0],[19388272.54944979,-14854132.57120662,0,454860,0,0],[19527870.64162236,-14684808.53386514,0,454920,2,0],[19665540.426058304,-14513996.710214648,0,454980,1,0],[19801387.83578899,-14341626.501356963,0,455040,0,0],[19935154.282186005,-14168001.036550568,0,455100,2,0],[20067004.76195953,-13992973.250053978,0,455160,1,0],[20197002.29739168,-13816446.319869839,0,455220,0,0],[20324866.738252312,-13638704.668445908,0,455280,0,0],[20450575.94515531,-13459919.715155499,0,455340,1,0],[20574160.97920505,-13279972.120702302,0,455400,1,0],[20695765.21527836,-13098725.228575861,0,455460,1,0],[20815306.123167012,-12916190.90928734,0,455520,1,0],[20932840.239470337,-12732382.845100181,0,455580,1,0],[21048338.553134248,-12547373.925772768,0,455640,1,0],[21161752.296419546,-12361111.640523678,0,455700,2,0],[21273237.052491687,-12173494.053440347,0,455760,1,0],[21382712.95910537,-11984535.745427031,0,455820,1,0],[21490120.778081607,-11794409.312890502,0,455880,1,0],[21595425.27735763,-11603125.225968972,0,455940,2,0],[21698716.53806498,-11410571.7417921,0,456000,2,0],[21800087.127108224,-11216580.14031215,0,456060,0,0],[21899274.619795986,-11021489.592545671,0,456120,1,0],[21996299.606092088,-10825508.409741808,0,456180,0,0],[22091078.834280603,-10628627.45372777,0,456240,1,0],[22183632.78935276,-10430860.770919703,0,456300,1,0],[22274038.09450691,-10232088.387654716,0,456360,2,0],[22362352.595899783,-10032152.278210763,0,456420,1,0],[22448539.52941435,-9831067.534532746,0,456480,0,0],[22532472.349821568,-9629187.344123805,0,456540,2,0],[22614215.666548017,-9426381.960652923,0,456600,1,0],[22693803.443139743,-9222485.746641446,0,456660,1,0],[22771183.42423906,-9017668.985906076,0,456720,2,0],[22846402.635232788,-8811822.931658315,0,456780,0,0],[22919389.82832131,-8605107.346241023,0,456840,1,0],[22990092.056589667,-8397744.820996342,0,456900,1,0],[23058521.676537365,-8189534.586538303,0,456960,0,0],[23124655.198151965,-7980709.1791154565,0,457020,1,0],[23188443.76983033,-7771254.325443736,0,457080,2,0],[23250028.680925917,-7560863.671526544,0,457140,1,0],[23309363.778870903,-7349577.369646773,0,457200,2,0],[23366480.64231834,-7137387.076774671,0,457260,1,0],[23421325.94905714,-6924305.8534358675,0,457320,0,0],[23473826.0468062,-6710726.610643129,0,457380,1,0],[23523960.128828406,-6496671.839004888,0,457440,1,0],[23571800.94594733,-6281966.084623016,0,457500,0,0],[23617244.689203326,-6066838.133927997,0,457560,1,0],[23660317.94326788,-5851250.0234748935,0,457620,0,0],[23701032.092361905,-5635284.998667146,0,457680,1,0],[23739336.229020126,-5418936.531201737,0,457740,2,0],[23775319.817466255,-5201855.326188506,0,457800,1,0],[23808960.92125808,-4984069.111410476,0,457860,2,0],[23840267.260753695,-4765634.536083527,0,457920,1,0],[23869203.869369045,-4546527.333240109,0,457980,2,0],[23895793.347287353,-4326807.506498683,0,458040,1,0],[23919986.70859217,-4106447.7173597794,0,458100,0,0],[23941788.161502343,-3885873.733338421,0,458160,0,0],[23961133.996831473,-3665277.9620807166,0,458220,1,0],[23978042.462360032,-3444470.976686717,0,458280,1,0],[23992529.381999053,-3223315.4094024943,0,458340,0,0],[24004589.32426717,-3002036.684319249,0,458400,0,0],[24014200.34191259,-2780807.5768157775,0,458460,2,0],[24021381.13804455,-2559271.559996937,0,458520,0,0],[24026106.88108091,-2337505.432686935,0,458580,1,0],[24028367.890689205,-2115661.2094716006,0,458640,2,0],[24028174.885188986,-1893408.0382647538,0,458700,2,0],[24025527.781403735,-1670633.1584943964,0,458760,0,0],[24020403.07230476,-1447657.0618893884,0,458820,2,0],[24012830.215803836,-1224561.591303949,0,458880,2,0],[24002740.855529338,-1000965.8357176726,0,458940,0,0],[23990172.192943525,-777265.5400285799,0,459000,2,0],[23975097.61750906,-553467.5556420137,0,459060,1,0],[23957524.580864936,-329460.694218461,0,459120,1,0],[23937477.20236054,-105397.39611644312,0,459180,1,0],[23914898.739978,118666.7032257952,0,459240,2,0],[23889809.012207597,342890.0933590229,0,459300,0,0],[23862191.559982345,567072.3848290085,0,459360,0,0],[23832101.398377128,790848.5781939722,0,459420,1,0],[23799511.5020189,1014377.6269523018,0,459480,2,0],[23764379.861385904,1237958.9013372627,0,459540,0,0],[23726720.6589776,1461416.8583287317,0,459600,2,0],[23686522.616700124,1684717.5690430745,0,459660,1,0],[23643745.828359995,1908014.6066633647,0,459720,0,0],[23598484.370062713,2130925.04801358,0,459780,1,0],[23550694.862649232,2353412.5930617573,0,459840,1,0],[23500348.475526348,2575678.709851249,0,459900,2,0],[23447435.315898616,2797830.624823667,0,459960,2,0],[23391854.80537388,3020010.756420533,0,460020,0,0],[23333716.5816482,3241863.7812267654,0,460080,2,0],[23273036.01122739,3463381.2707971754,0,460140,0,0],[23209797.346901566,3684502.258481096,0,460200,1,0],[23144021.499559343,3905053.31428835,0,460260,0,0],[23075729.209216848,4124979.3081676224,0,460320,1,0],[23004920.651676323,4344294.012238886,0,460380,2,0],[22931505.33621274,4563277.907422509,0,460440,1,0],[22855437.661083028,4781933.40935716,0,460500,2,0],[22776749.917390563,5000228.684131867,0,460560,1,0],[22695415.34273321,5218095.998280017,0,460620,0,0],[22611569.950725883,5435219.708224124,0,460680,2,0],[22525117.74392099,5651730.568452748,0,460740,0,0],[22436102.123241767,5867578.394361017,0,460800,2,0],[22344508.762238413,6082769.884982585,0,460860,1,0],[22250256.61168502,6297413.231083565,0,460920,1,0],[22153450.698312785,6511329.82005904,0,460980,0,0],[22054120.24221269,6724298.527736201,0,461040,1,0],[21952268.270413928,6936353.877219804,0,461100,0,0],[21847935.613527868,7147400.69669496,0,461160,2,0],[21740998.472449753,7357623.598439065,0,461220,0,0],[21631493.7476842,7566972.773362071,0,461280,1,0],[21519499.327630296,7775239.522600304,0,461340,2,0],[21404825.2277411,7982754.181453315,0,461400,0,0],[21287595.317254882,8189300.181529597,0,461460,2,0],[21167777.276094105,8394873.3959101,0,461520,0,0],[21045396.07262613,8599416.131144771,0,461580,2,0],[20920432.808355987,8802903.30761543,0,461640,2,0],[20792714.081580903,9005611.507029263,0,461700,2,0],[20662230.90542044,9207514.438695086,0,461760,0,0],[20529213.55461864,9408272.592482777,0,461820,1,0],[20393721.095851876,9607718.909849953,0,461880,1,0],[20255668.26135769,9805971.472657332,0,461940,0,0],[20115189.459870137,10002824.802560512,0,462000,2,0],[19972132.19581919,10198409.887240369,0,462060,0,0],[19826558.54617242,10392712.047068829,0,462120,2,0],[19678442.355539486,10585669.529544657,0,462180,2,0],[19527589.137915332,10777562.425512789,0,462240,1,0],[19374081.531977743,10968205.684580501,0,462300,1,0],[19218057.215108078,11157397.034974834,0,462360,1,0],[19059511.803412493,11345160.700752158,0,462420,1,0],[18898476.38937703,11531415.415638797,0,462480,0,0],[18735028.652418714,11716002.121859783,0,462540,0,0],[18569372.48409919,11898768.340529114,0,462600,1,0],[18401326.58628476,12079809.627699941,0,462660,0,0],[18230943.054337606,12259111.674857052,0,462720,1,0],[18058216.390112557,12436592.794022566,0,462780,0,0],[17883147.714692496,12612283.07947606,0,462840,2,0],[17705633.703188732,12786242.76206509,0,462900,1,0],[17525567.60575648,12958553.396524258,0,462960,2,0],[17342908.88456949,13129206.980229238,0,463020,1,0],[17157716.83250068,13298134.776286047,0,463080,2,0],[16969986.124092486,13465325.925856149,0,463140,1,0],[16779736.198240772,13630734.334272316,0,463200,2,0],[16586934.819074478,13794327.080055447,0,463260,2,0],[16391517.863178082,13956183.68734884,0,463320,1,0],[16193565.071821032,14116132.587082006,0,463380,0,0],[15993460.794028508,14273934.664463572,0,463440,0,0],[15791289.505164912,14429435.504325794,0,463500,1,0],[15586944.097648485,14582704.8607331,0,463560,2,0],[15380147.685556207,14733946.121370532,0,463620,1,0],[15170940.040488254,14883098.456530387,0,463680,0,0],[14959592.553111475,15029913.337462362,0,463740,0,0],[14746295.117230035,15174272.50429245,0,463800,0,0],[14531075.804732526,15316113.54639241,0,463860,1,0],[14313786.31058195,15455547.846741455,0,463920,0,0],[14094446.768165356,15592496.067755427,0,463980,1,0],[13873078.454653947,15726944.222522022,0,464040,0,0],[13649727.196084986,15858863.551059214,0,464100,1,0],[13424374.040045477,15988197.198040592,0,464160,2,0],[13196736.61384762,16115109.32146328,0,464220,2,0],[12966695.973583428,16239628.470405703,0,464280,0,0],[12734608.695134342,16361548.351243438,0,464340,1,0],[12500608.250243252,16480752.061047323,0,464400,2,0],[12264405.923951065,16597355.972539656,0,464460,2,0],[12025887.388279404,16711418.689294748,0,464520,1,0],[11785238.402274946,16822824.127716955,0,464580,1,0],[11542648.68276906,16931421.21977385,0,464640,1,0],[11298100.99760881,17037196.929651998,0,464700,1,0],[11051685.209699119,17140110.778404366,0,464760,0,0],[10803543.299725765,17240062.98478656,0,464820,1,0],[10553765.334427034,17337019.182369955,0,464880,0,0],[10302304.412529606,17430922.990901425,0,464940,1,0],[10049257.268293114,17521742.512806125,0,465000,2,0],[9794259.995319165,17609590.726139996,0,465060,1,0],[9537409.395980056,17694398.21258733,0,465120,0,0],[9279022.692492444,17776035.717206694,0,465180,1,0],[9019178.643467488,17854446.610342804,0,465240,0,0],[8757879.187425962,17929604.927933924,0,465300,0,0],[8495349.55859526,18001439.133960262,0,465360,1,0],[8231425.43116782,18069940.857247863,0,465420,2,0],[7965828.470168747,18135165.171627115,0,465480,1,0],[7698591.980110854,18197097.425673176,0,465540,1,0],[7429922.191410546,18255645.931002464,0,465600,2,0],[7159683.57014638,18310805.183821324,0,465660,2,0],[6887734.4568446865,18362563.842181597,0,465720,1,0],[6614312.489552244,18410879.649615232,0,465780,1,0],[6339601.939132229,18455671.379174843,0,465840,2,0],[6063492.75638206,18496913.090085957,0,465900,1,0],[5786048.95977566,18534592.14667458,0,465960,0,0],[5507624.343068133,18568600.859904688,0,466020,1,0],[5228320.131699339,18598936.10347957,0,466080,0,0],[4948122.234388136,18625545.356073193,0,466140,1,0],[4667124.983977168,18648396.652797993,0,466200,2,0],[4385018.591492206,18667501.55015659,0,466260,1,0],[4101819.8376722396,18682829.962610118,0,466320,1,0],[3817780.258504281,18694311.334280208,0,466380,0,0],[3533147.6063559377,18701929.129009347,0,466440,1,0],[3247945.031606398,18705649.31654547,0,466500,2,0],[2961899.331094539,18705456.809987817,0,466560,1,0],[2675035.5392235564,18701301.491097547,0,466620,1,0],[2387606.57431987,18693166.28483463,0,466680,0,0],[2099846.2729949136,18681044.32422678,0,466740,0,0],[1811979.7135995463,18664889.72159794,0,466800,2,0],[1523727.8828538896,18644688.77600692,0,466860,2,0],[1234775.7064924473,18620345.94970022,0,466920,1,0],[945380.8201260561,18591909.190067954,0,466980,2,0],[655587.2258900771,18559283.19630958,0,467040,1,0],[365483.8983130855,18522496.852967426,0,467100,1,0],[75281.92621249383,18481529.271804575,0,467160,0,0],[-214732.31704517727,18436391.795542277,0,467220,1,0],[-504551.1866924656,18387057.47366756,0,467280,1,0],[-794239.3173093558,18333487.27571487,0,467340,1,0],[-1083748.2173327003,18275657.76047967,0,467400,1,0],[-1372991.9727062092,18213558.77183126,0,467460,0,0],[-1661745.0974302671,18147199.335783128,0,467520,2,0],[-1950103.0049458854,18076539.202066086,0,467580,0,0],[-2237996.5966887865,18001569.58322884,0,467640,1,0],[-2525167.0336118303,17922325.27787404,0,467700,2,0],[-2811912.0546032907,17838679.36429889,0,467760,2,0],[-3098323.310647778,17750594.03546928,0,467820,1,0],[-3384131.8398515135,17658090.751316473,0,467880,2,0],[-3669286.069944643,17561181.016959466,0,467940,2,0],[-3953868.7105846,17459778.366177153,0,468000,0,0],[-4237450.458604444,17354016.076817,0,468060,1,0],[-4519800.211284037,17243958.443716615,0,468120,0,0],[-4800843.87967497,17129580.10027825,0,468180,2,0],[-5080659.270780849,17010851.333030716,0,468240,0,0],[-5359174.163812803,16887768.336459883,0,468300,0,0],[-5635972.359747436,16760453.042057471,0,468360,2,0],[-5911325.246084093,16628804.917573703,0,468420,1,0],[-6185281.120004456,16492727.21431592,0,468480,0,0],[-6457459.287437544,16352398.690408845,0,468540,0,0],[-6727609.071127314,16207922.380793933,0,468600,2,0],[-6995976.561214868,16059145.9617001,0,468660,1,0],[-7262619.482927498,15906003.990521591,0,468720,0,0],[-7527174.057845736,15748663.541105863,0,468780,2,0],[-7789688.888374954,15587091.617201433,0,468840,2,0],[-8050404.827331433,15421090.616598576,0,468900,1,0],[-8309070.90096916,15250782.800758949,0,468960,1,0],[-8565460.59699283,15076313.997221168,0,469020,1,0],[-8819492.08806491,14897680.595840244,0,469080,0,0],[-9070937.881535733,14715055.164587632,0,469140,1,0],[-9319716.532888476,14528419.60623755,0,469200,1,0],[-9565912.099985903,14337741.52371974,0,469260,2,0],[-9809555.444323946,14142925.64597328,0,469320,2,0],[-10050716.751421396,13943924.59388086,0,469380,2,0],[-10289318.104787193,13740732.174882947,0,469440,1,0],[-10525134.551741699,13533528.839870537,0,469500,1,0],[-10757952.328457803,13322476.953426974,0,469560,0,0],[-10987567.774081256,13107751.397127334,0,469620,0,0],[-11213766.42278253,12889503.13350509,0,469680,2,0],[-11436735.447018169,12667543.480589867,0,469740,0,0],[-11656400.408900436,12441932.430503123,0,469800,1,0],[-11872582.975828975,12212849.28932114,0,469860,2,0],[-12085423.041575713,11980073.337963168,0,469920,1,0],[-12294876.406221207,11743680.593910879,0,469980,2,0],[-12500847.104648203,11503738.489097571,0,470040,1,0],[-12703290.445985518,11260275.691327585,0,470100,2,0],[-12902103.69819419,11013378.752742715,0,470160,1,0],[-13097253.717631606,10763094.34076754,0,470220,0,0],[-13288427.757346962,10509800.85122676,0,470280,0,0],[-13475467.053957323,10253694.807371648,0,470340,0,0],[-13658311.713328421,9994832.27585119,0,470400,0,0],[-13836908.61146907,9733323.460803576,0,470460,0,0],[-14011200.59828529,9469230.338036325,0,470520,2,0],[-14181338.410935631,9202312.997155024,0,470580,0,0],[-14347268.810039926,8932670.55812635,0,470640,2,0],[-14508934.738837225,8660357.626600554,0,470700,2,0],[-14666457.809980057,8385184.397053309,0,470760,2,0],[-14819808.99282731,8107179.921843323,0,470820,2,0],[-14968906.141968936,7826444.583636474,0,470880,2,0],[-15113717.674686959,7543074.584708668,0,470940,0,0],[-15254035.090855436,7257453.14875641,0,471000,0,0],[-15389640.461449675,6970001.194359341,0,471060,2,0],[-15520683.424915466,6680471.435526115,0,471120,0,0],[-15647089.350878624,6388956.290809251,0,471180,0,0],[-15768731.96769994,6095869.330594061,0,471240,0,0],[-15885527.129315883,5801311.02582927,0,471300,2,0],[-15997630.133358631,5505028.781414284,0,471360,2,0],[-16105120.154750055,5206767.827766819,0,471420,1,0],[-16207887.929555444,4906812.917321392,0,471480,2,0],[-16305927.690578725,4605232.269794333,0,471540,0,0],[-16399164.106833039,4302280.870296053,0,471600,0,0],[-16487463.355016598,3998423.5434224997,0,471660,1,0],[-16570870.06384833,3693559.5751287513,0,471720,1,0],[-16649415.490361733,3387617.7364875344,0,471780,1,0],[-16723088.875391304,3080677.852857544,0,471840,1,0],[-16791886.626565833,2772833.864328679,0,471900,1,0],[-16855809.305251725,2464184.608647473,0,471960,1,0],[-16914822.683208324,2154831.5206306763,0,472020,1,0],[-16968942.379273064,1844846.6914530029,0,472080,0,0],[-17018140.66201692,1534506.451103768,0,472140,1,0],[-17062410.815623883,1223909.6396389224,0,472200,2,0],[-17101824.227086894,912764.4531564146,0,472260,0,0],[-17136333.587853104,601382.9349690408,0,472320,2,0],[-17165986.491557486,289817.16003265034,0,472380,2,0],[-17190784.439348392,-22204.737372382555,0,472440,0,0],[-17210741.487463944,-334201.75077837915,0,472500,0,0],[-17225830.98300991,-645729.6745146326,0,472560,0,0],[-17236088.51384009,-956732.0538194571,0,472620,1,0],[-17241521.445564643,-1267295.7665747325,0,472680,2,0],[-17242179.472039137,-1577690.454151214,0,472740,0,0],[-17238064.541456867,-1887621.6827353144,0,472800,1,0],[-17229203.516162783,-2196880.8847444523,0,472860,1,0],[-17215638.149875205,-2505537.7823558277,0,472920,2,0],[-17197359.50339745,-2813685.563411729,0,472980,2,0],[-17174398.970358707,-3121430.919015737,0,473040,0,0],[-17146808.043446735,-3428326.907595737,0,473100,0,0],[-17114650.028513152,-3733949.423464744,0,473160,2,0],[-17077916.86969812,-4038578.465214847,0,473220,2,0],[-17036606.863369312,-4342479.350213754,0,473280,1,0],[-16990776.73130005,-4645434.027089452,0,473340,0,0],[-16940509.12329625,-4946968.088560714,0,473400,0,0],[-16885877.6359368,-5246857.166185655,0,473460,1,0],[-16826902.07926974,-5545228.86630069,0,473520,0,0],[-16763627.147438005,-5841970.139570308,0,473580,2,0],[-16696033.9566216,-6137220.647124678,0,473640,2,0],[-16624107.502166882,-6431278.770273337,0,473700,1,0],[-16547936.26311342,-6723851.131775784,0,473760,0,0],[-16467636.872413166,-7014576.436794191,0,473820,2,0],[-16383221.060008157,-7303538.192841224,0,473880,2,0],[-16294619.588718722,-7591034.398762052,0,473940,2,0],[-16201890.647835892,-7876995.465863007,0,474000,2,0],[-16105079.14762433,-8161381.831584276,0,474060,0,0],[-16004331.359001918,-8443754.371468151,0,474120,2,0],[-15899714.238344485,-8724093.836001938,0,474180,0,0],[-15791267.538330909,-9002323.39164206,0,474240,0,0],[-15679189.352393702,-9278064.325161528,0,474300,1,0],[-15563448.717290005,-9551450.564110989,0,474360,1,0],[-15444045.3159551,-9822592.251202703,0,474420,1,0],[-15321024.410072628,-10091426.330600707,0,474480,1,0],[-15194451.037794348,-10357910.339421488,0,474540,0,0],[-15064436.082836345,-10621844.078259308,0,474600,2,0],[-14930975.1566029,-10883346.570483891,0,474660,1,0],[-14794045.480231997,-11142540.92037716,0,474720,2,0],[-14653681.377534838,-11399364.02258009,0,474780,1,0],[-14509939.069892133,-11653801.384519197,0,474840,0,0],[-14363053.764847938,-11905471.66888,0,474900,0,0],[-14213188.617468739,-12154219.42791818,0,474960,2,0],[-14060204.577453284,-12400295.600725602,0,475020,1,0],[-13904063.88061837,-12643806.464504903,0,475080,2,0],[-13744802.202768335,-12884755.879488321,0,475140,1,0],[-13582499.578501046,-13123079.83673955,0,475200,0,0],[-13417410.00894809,-13358461.69680701,0,475260,0,0],[-13249690.086832436,-13590730.792318083,0,475320,1,0],[-13079309.588763725,-13819995.003058113,0,475380,2,0],[-12906067.741735833,-14046532.864919081,0,475440,2,0],[-12729950.736882085,-14270439.425921526,0,475500,0,0],[-12551226.111397611,-14491437.236723393,0,475560,1,0],[-12370066.32695923,-14709328.542972108,0,475620,0,0],[-12186516.699185545,-14924108.354742311,0,475680,1,0],[-12000628.972614788,-15135759.88469475,0,475740,1,0],[-11812360.707723409,-15344407.566092711,0,475800,2,0],[-11621635.926783182,-15550142.228059782,0,475860,0,0],[-11428632.00050598,-15752836.843704041,0,475920,1,0],[-11233528.126589423,-15952338.934808409,0,475980,1,0],[-11036262.015705492,-16148745.633388545,0,476040,1,0],[-10836853.892146142,-16342063.658930657,0,476100,1,0],[-10635419.993503373,-16532272.963057265,0,476160,2,0],[-10431816.900472812,-16719486.395585759,0,476220,2,0],[-10225996.266476631,-16903812.75002855,0,476280,1,0],[-10018129.40568214,-17085094.794200726,0,476340,0,0],[-9808570.456288604,-17263100.760758646,0,476400,2,0],[-9597202.483644506,-17437954.326776337,0,476460,1,0],[-9383957.509915208,-17609743.35489154,0,476520,1,0],[-9168999.715617422,-17778356.608725924,0,476580,2,0],[-8952264.623661371,-17943896.24264585,0,476640,1,0],[-8733783.251857113,-18106345.44913502,0,476700,0,0],[-8513923.264062628,-18265496.88672569,0,476760,1,0],[-8292712.9784986125,-18421322.671569955,0,476820,0,0],[-8070205.049284249,-18573848.516250007,0,476880,0,0],[-7846596.82314356,-18722963.83933764,0,476940,1,0],[-7621797.7034949735,-18868781.470526725,0,477000,0,0],[-7395857.553792147,-19011259.32112911,0,477060,2,0],[-7168660.393139906,-19150558.1773822,0,477120,1,0],[-6940101.97744576,-19286709.531597517,0,477180,2,0],[-6710231.082078095,-19419760.655291956,0,477240,0,0],[-6479254.484556805,-19549578.44689909,0,477300,0,0],[-6247534.0249736635,-19676035.438455164,0,477360,2,0],[-6014787.502928811,-19799269.455456447,0,477420,0,0],[-5781070.844799251,-19919294.169965204,0,477480,1,0],[-5546571.652054735,-20036026.633922674,0,477540,2,0],[-5311031.78537516,-20149664.077519648,0,477600,1,0],[-5074489.983247315,-20260157.244164966,0,477660,1,0],[-4837144.063688706,-20367479.860966854,0,477720,1,0],[-4599061.636268834,-20471605.752637513,0,477780,2,0],[-4360077.864584034,-20572619.665793367,0,477840,2,0],[-4120087.7266854933,-20670603.612153683,0,477900,0,0],[-3879476.7175825234,-20765424.24891088,0,477960,1,0],[-3638432.587470399,-20856998.17149494,0,478020,2,0],[-3396696.014742359,-20945505.041898094,0,478080,0,0],[-3154427.9042706885,-21030852.83343146,0,478140,0,0],[-2912032.020689324,-21112939.49277974,0,478200,0,0],[-2669546.0870387647,-21191792.25307855,0,478260,1,0],[-2426833.7362934174,-21267474.482945528,0,478320,2,0],[-2183594.4986973642,-21340092.000534266,0,478380,1,0],[-1939874.1839181466,-21409660.71485191,0,478440,1,0],[-1695867.4685228274,-21476138.77998255,0,478500,2,0],[-1451452.2979322406,-21539567.86424548,0,478560,0,0],[-1206826.8501402566,-21599950.516687177,0,478620,1,0],[-962184.9656435727,-21657220.3057866,0,478680,2,0],[-717252.0679492798,-21711456.04754309,0,478740,2,0],[-471862.99676109134,-21762763.67807957,0,478800,0,0],[-226400.40021551974,-21811027.16706623,0,478860,0,0],[18716.68799391343,-21856199.677682884,0,478920,0,0],[263500.8122789685,-21898315.696528513,0,478980,0,0],[507881.54309616407,-21937367.132540956,0,479040,2,0],[752187.1153878629,-21973453.520197734,0,479100,2,0],[996774.0804554407,-22006610.79859134,0,479160,2,0],[1241575.2570470558,-22036881.335149523,0,479220,2,0],[1486557.3481274396,-22064243.763997875,0,479280,2,0],[1731696.2814068096,-22088696.2441378,0,479340,0,0],[1976622.2637645935,-22110269.82316046,0,479400,1,0],[2221108.9075124348,-22128908.02549649,0,479460,1,0],[2465295.2949816464,-22144661.26883003,0,479520,2,0],[2709344.150539294,-22157549.091646817,0,479580,2,0],[2953393.7191071855,-22167582.672381725,0,479640,0,0],[3197073.072286166,-22174798.61656279,0,479700,0,0],[3439996.5604932583,-22179159.13820319,0,479760,0,0],[3682098.8055231497,-22180714.126527846,0,479820,0,0],[3923402.524191347,-22179463.6942383,0,479880,2,0],[4164191.7294257004,-22175434.193488095,0,479940,2,0],[4404833.831162778,-22168609.1013986,0,480000,1,0],[4645122.094478932,-22159049.809596676,0,480060,0,0],[4884635.1191972,-22146730.521697033,0,480120,2,0],[5123553.22902859,-22131705.132119242,0,480180,0,0],[5361832.687662416,-22113953.219118826,0,480240,0,0],[5599097.21247308,-22093544.773729265,0,480300,2,0],[5835696.437081612,-22070455.901486583,0,480360,0,0],[6071601.187716583,-22044732.147106145,0,480420,1,0],[6306576.217893405,-22016353.02875116,0,480480,1,0],[6540823.269514842,-21985347.469805706,0,480540,2,0],[6774453.8401429,-21951712.651117135,0,480600,0,0],[7007283.583847227,-21915471.699296,0,480660,1,0],[7239121.95517183,-21876676.730284207,0,480720,1,0],[7470103.619481655,-21835333.776861034,0,480780,0,0],[7700014.941621843,-21791453.828041248,0,480840,2,0],[7929067.78680635,-21745041.995215945,0,480900,1,0],[8157360.4538824195,-21696079.613768347,0,480960,0,0],[8384542.7194550615,-21644659.497351233,0,481020,2,0],[8610766.64920304,-21590762.292832732,0,481080,0,0],[8836000.9458846,-21534401.99421627,0,481140,0,0],[9059858.85170102,-21475669.77521138,0,481200,1,0],[9282543.876307147,-21414535.248533703,0,481260,2,0],[9504356.914812058,-21350965.94705702,0,481320,1,0],[9725262.836832562,-21284917.54380138,0,481380,2,0],[9945259.746065069,-21216454.777266275,0,481440,1,0],[10164316.914116548,-21145548.262673277,0,481500,2,0],[10382407.344933486,-21072271.01116306,0,481560,1,0],[10599517.786198504,-20996568.799664415,0,481620,1,0],[10815464.971810352,-20918562.094783645,0,481680,2,0],[11030414.48870093,-20838195.270356312,0,481740,2,0],[11244472.447751293,-20755428.344431974,0,481800,1,0],[11457471.502821695,-20670322.22932661,0,481860,1,0],[11669205.408110222,-20582961.462866273,0,481920,1,0],[11879720.750425434,-20493391.411353637,0,481980,2,0],[12089076.45966278,-20401512.15451442,0,482040,0,0],[12297160.963687329,-20307472.68014437,0,482100,1,0],[12503731.362667812,-20211299.432824824,0,482160,0,0],[12708829.179824276,-20113043.09880488,0,482220,2,0],[12912560.453908037,-20012660.142172154,0,482280,1,0],[13115083.087585637,-19910062.18602485,0,482340,2,0],[13316380.526867187,-19805282.72955858,0,482400,0,0],[13516265.894322567,-19698397.78716003,0,482460,1,0],[13714582.863970978,-19589535.584598843,0,482520,0,0],[13911303.820566077,-19478713.870814394,0,482580,1,0],[14106381.271454187,-19365924.71951175,0,482640,2,0],[14300176.118653867,-19251027.865235064,0,482700,1,0],[14492643.977689566,-19134052.495175906,0,482760,0,0],[14683427.278095633,-19015179.381941453,0,482820,0,0],[14872393.760803424,-18894522.140582595,0,482880,0,0],[15059521.567724202,-18772109.927045938,0,482940,2,0],[15245110.873166159,-18647754.32632185,0,483000,1,0],[15429263.548992902,-18521402.416829288,0,483060,1,0],[15611857.788113832,-18393143.70515941,0,483120,2,0],[15793017.071387362,-18262909.50289895,0,483180,0,0],[15972535.54910715,-18130803.07916488,0,483240,1,0],[16150276.522602236,-17996975.193993475,0,483300,1,0],[16326411.25603446,-17861299.89404127,0,483360,2,0],[16501013.736650858,-17723727.01271561,0,483420,1,0],[16674080.649490867,-17584224.855991572,0,483480,0,0],[16845336.71845298,-17443074.45432882,0,483540,2,0],[17014907.381606128,-17300169.870142065,0,483600,1,0],[17182908.50187403,-17155432.39790201,0,483660,0,0],[17349030.63674802,-17009074.395143647,0,483720,0,0],[17513178.350708835,-16861253.397608247,0,483780,1,0],[17675405.613893356,-16711857.876868289,0,483840,1,0],[17835910.39630337,-16560819.438454675,0,483900,2,0],[17994734.261548176,-16407983.915856505,0,483960,2,0],[18152058.077378638,-16253291.646240795,0,484020,0,0],[18307557.374210507,-16096985.4685835,0,484080,0,0],[18461002.5532629,-15939319.93241445,0,484140,1,0],[18612504.124958824,-15780241.19208955,0,484200,2,0],[18762280.791726097,-15619430.394179154,0,484260,2,0],[18910451.861832935,-15456835.488142477,0,484320,1,0],[19056871.637123007,-15292591.391404713,0,484380,1,0],[19201443.1630695,-15126849.112594906,0,484440,0,0],[19343998.858993668,-14959731.396506641,0,484500,1,0],[19484515.114636403,-14791287.589877943,0,484560,0,0],[19623033.704691723,-14621557.385751365,0,484620,1,0],[19759509.311327916,-14450515.221874421,0,484680,2,0],[19894179.72829464,-14277913.225045744,0,484740,1,0],[20026996.406237785,-14103784.152593264,0,484800,0,0],[20157744.436331738,-13928432.543381473,0,484860,2,0],[20286552.824703623,-13751714.608903076,0,484920,1,0],[20413462.69494647,-13573484.923941707,0,484980,0,0],[20538299.898468412,-13394106.487716265,0,485040,0,0],[20660910.095331445,-13213716.905197758,0,485100,1,0],[20781449.03630423,-13032191.608836152,0,485160,2,0],[20900031.817320224,-12849257.534103962,0,485220,1,0],[21016693.488600988,-12664916.076517507,0,485280,2,0],[21131406.110545266,-12479179.543626215,0,485340,1,0],[21244159.568445504,-12292081.031305967,0,485400,0,0],[21354765.854375962,-12103939.624778382,0,485460,1,0],[21463216.318920713,-11914812.310183942,0,485520,1,0],[21569552.840615515,-11724502.027845602,0,485580,0,0],[21673729.530239917,-11533213.300211212,0,485640,2,0],[21775828.422793485,-11340801.755621813,0,485700,0,0],[21875778.618490275,-11147315.272985073,0,485760,2,0],[21973613.864326503,-10952725.466916246,0,485820,1,0],[22069431.635795545,-10756917.050975777,0,485880,1,0],[22163077.882411227,-10560068.054658344,0,485940,1,0],[22254588.955316983,-10362200.616524825,0,486000,0,0],[22343845.47960098,-10163479.421962336,0,486060,1,0],[22430892.8547099,-9963958.59684466,0,486120,2,0],[22515798.33980343,-9763270.105603408,0,486180,0,0],[22598559.984086376,-9561657.198574284,0,486240,2,0],[22679093.728481833,-9359117.824256012,0,486300,2,0],[22757589.222118407,-9155310.509041036,0,486360,2,0],[22833973.246697273,-8950289.124129515,0,486420,1,0],[22908188.25118441,-8744248.04529109,0,486480,1,0],[22980173.248189043,-8537326.573810115,0,486540,1,0],[23049952.78117805,-8329591.131490466,0,486600,1,0],[23117457.43611509,-8121046.708163013,0,486660,1,0],[23182733.759232134,-7911715.23112333,0,486720,0,0],[23245653.172264967,-7701763.998558265,0,486780,1,0],[23306292.71190808,-7491249.223581556,0,486840,2,0],[23364690.22930688,-7279803.72102269,0,486900,0,0],[23420776.087170754,-7067665.703891727,0,486960,2,0],[23474590.33761462,-6854827.7440864155,0,487020,1,0],[23526130.441498164,-6641141.527561896,0,487080,0,0],[23575322.907366116,-6426998.417431278,0,487140,1,0],[23622182.315998774,-6212380.051468877,0,487200,0,0],[23666650.48776617,-5997328.2252960075,0,487260,2,0],[23708768.553906195,-5781682.153257627,0,487320,1,0],[23748621.368498318,-5565291.588470316,0,487380,1,0],[23786098.951959793,-5348338.034174227,0,487440,1,0],[23821240.371855102,-5130883.970250544,0,487500,1,0],[23853997.366142254,-4912902.27298973,0,487560,1,0],[23884388.090561908,-4694425.509691989,0,487620,1,0],[23912426.335296553,-4475512.092851577,0,487680,1,0],[23938054.93546077,-4256132.872178022,0,487740,1,0],[23961289.640225314,-4036320.953850304,0,487800,1,0],[23982161.850756545,-3816112.8132515373,0,487860,1,0],[24000599.57370933,-3595527.0616012425,0,487920,2,0],[24016635.540381197,-3374379.0622559153,0,487980,0,0],[24030299.7638085,-3152925.1437659715,0,488040,1,0],[24041495.44310074,-2931304.1775654964,0,488100,0,0],[24050267.105610438,-2709577.1087350403,0,488160,1,0],[24056585.32643574,-2487770.8062706543,0,488220,2,0],[24060475.0111635,-2265505.303811975,0,488280,2,0],[24061937.86023188,-2042667.1808903003,0,488340,2,0],[24060934.245605633,-1819261.516509667,0,488400,1,0],[24057464.474149223,-1595466.2707948617,0,488460,1,0],[24051530.28544957,-1371531.097181184,0,488520,0,0],[24043153.29084396,-1147632.674422599,0,488580,1,0],[24032291.769600604,-923799.3690646249,0,488640,0,0],[24018983.651862018,-700039.2581452185,0,488700,1,0],[24003180.391764287,-476405.6722359667,0,488760,1,0],[23984889.93928665,-252714.1586018187,0,488820,1,0],[23964130.493049767,-28972.64633793539,0,488880,0,0],[23940855.375056446,194571.62047607327,0,488940,0,0],[23915134.955917265,417720.27670602384,0,489000,2,0],[23886899.944331855,640848.1309973369,0,489060,0,0],[23856170.85341178,863899.1154022008,0,489120,1,0],[23822927.423748583,1086697.16657969,0,489180,2,0],[23787151.06928259,1309542.5288162853,0,489240,1,0],[23748803.26413397,1532447.06153061,0,489300,2,0],[23707916.080072623,1755354.3130143213,0,489360,2,0],[23664421.12929314,1978415.7353115592,0,489420,1,0],[23618345.88731179,2201455.1539374785,0,489480,0,0],[23569772.2467021,2424064.644989309,0,489540,2,0],[23518669.64834284,2646422.714289926,0,489600,2,0],[23464916.320620656,2868862.4836373683,0,489660,0,0],[23408639.108349603,3090958.043308862,0,489720,1,0],[23349838.669793125,3312557.776598199,0,489780,0,0],[23288552.016603258,3533632.746796027,0,489840,1,0],[23224741.082644425,3754120.5570210908,0,489900,1,0],[23158363.063155305,3974218.2836255915,0,489960,2,0],[23089382.42844186,4194050.6250351374,0,490020,0,0],[23017828.383370254,4413395.757629524,0,490080,1,0],[22943793.01813068,4632093.868751637,0,490140,1,0],[22867162.636172827,4850277.222994749,0,490200,2,0],[22787899.7614173,5068068.358468006,0,490260,1,0],[22706013.917275745,5285455.678781604,0,490320,2,0],[22621489.389782764,5502445.218247727,0,490380,0,0],[22534389.073974695,5718773.697169766,0,490440,1,0],[22444816.14538885,5934289.148430612,0,490500,0,0],[22352709.765823644,6148961.5801563235,0,490560,1,0],[22258100.645589173,6362763.593747679,0,490620,1,0],[22160915.892432865,6575830.295989936,0,490680,1,0],[22061152.811341673,6788145.123105624,0,490740,2,0],[21958752.01743313,6999820.588809548,0,490800,2,0],[21853600.893160842,7210995.951367708,0,490860,2,0],[21745740.804812796,7421642.6182488315,0,490920,2,0],[21635125.46541057,7631727.169826977,0,490980,0,0],[21521955.078839727,7840910.74401216,0,491040,0,0],[21406362.897191077,8048839.215649022,0,491100,0,0],[21288396.787055504,8255491.071498462,0,491160,0,0],[21168031.02499068,8460819.556675564,0,491220,0,0],[21045304.863055784,8664826.777796667,0,491280,2,0],[20920012.637752466,8867781.685729576,0,491340,2,0],[20791938.250358306,9069968.780047296,0,491400,1,0],[20661247.067089494,9271164.621416215,0,491460,0,0],[20528089.749628406,9471097.470537711,0,491520,2,0],[20392389.16432563,9669836.265305577,0,491580,2,0],[20253942.72151654,9867663.495915202,0,491640,0,0],[20112937.943052154,10064248.760649256,0,491700,2,0],[19969394.408399895,10259579.050910305,0,491760,0,0],[19823327.3293555,10453592.309423376,0,491820,2,0],[19674734.069211893,10646290.3121296,0,491880,2,0],[19523405.914594058,10837893.35183314,0,491940,0,0],[19369547.776727125,11028083.637425875,0,492000,1,0],[19213296.08675152,11216733.79175783,0,492060,0,0],[19054665.881001916,11403781.812018879,0,492120,1,0],[18893660.394208502,11589183.811585136,0,492180,1,0],[18730155.488882363,11773072.788019665,0,492240,0,0],[18564288.424230207,11955250.244343083,0,492300,0,0],[18396178.07949585,12135588.988122482,0,492360,2,0],[18225609.341738556,12314290.222930701,0,492420,1,0],[18052456.473683905,12491456.258434756,0,492480,2,0],[17876738.517100956,12667068.248716405,0,492540,1,0],[17698457.943765424,12841073.03898978,0,492600,0,0],[17517873.99596918,13013195.991758527,0,492660,1,0],[17334986.276527587,13183386.535816416,0,492720,2,0],[17149574.294707935,13351878.632669972,0,492780,1,0],[16961606.60259639,13518622.17622059,0,492840,1,0],[16771284.61929332,13683462.46731679,0,492900,1,0],[16578566.160273157,13846366.26796837,0,492960,2,0],[16383369.139157813,14007422.274730856,0,493020,0,0],[16185824.801396668,14166454.803686993,0,493080,1,0],[15986080.09976256,14323332.81432014,0,493140,0,0],[15784152.463886129,14478037.833074244,0,493200,0,0],[15580210.401210116,14630403.790144095,0,493260,1,0],[15374132.859951165,14780516.942580663,0,493320,0,0],[15165925.846918544,14928322.124496168,0,493380,2,0],[14955449.35076026,15073910.653743701,0,493440,2,0],[14742427.510294434,15217445.79719125,0,493500,1,0],[14527045.095153846,15358798.66004279,0,493560,2,0],[14309288.37040027,15497908.82906588,0,493620,0,0],[14089363.026508447,15634643.115242552,0,493680,0,0],[13867596.77777109,15768789.710140875,0,493740,1,0],[13643783.094798129,15900391.040592765,0,493800,2,0],[13417718.660845205,16029619.749370443,0,493860,2,0],[13189217.489635894,16156489.218510395,0,493920,0,0],[12958641.854564138,16280797.621686526,0,493980,0,0],[12726331.752045657,16402356.491968334,0,494040,1,0],[12492124.96815102,16521218.572155688,0,494100,1,0],[12255901.638225717,16637379.200804442,0,494160,2,0],[12017517.092437973,16750931.465176515,0,494220,2,0],[11776845.611691987,16861889.792780012,0,494280,1,0],[11534076.328937082,16970137.340065323,0,494340,0,0],[11289530.126197174,17075496.612603508,0,494400,2,0],[11043121.88518868,17178007.152686894,0,494460,1,0],[10794685.266860431,17277683.05599542,0,494520,0,0],[10544564.043528315,17374360.615319267,0,494580,1,0],[10292827.878081227,17468005.403500944,0,494640,2,0],[10039147.863353252,17558713.986720093,0,494700,0,0],[9783728.896744292,17646366.35460956,0,494760,2,0],[9526584.874197183,17730950.721402418,0,494820,0,0],[9267783.148016915,17812385.733146276,0,494880,1,0],[9007498.46957611,17890632.56044449,0,494940,2,0],[8745435.872050952,17965727.695750218,0,495000,1,0],[8481623.185562441,18037648.30654993,0,495060,0,0],[8216458.355768054,18106246.419650514,0,495120,1,0],[7949964.972498438,18171501.522309214,0,495180,2,0],[7681813.914655926,18233452.477557473,0,495240,0,0],[7412274.537828601,18292025.337754082,0,495300,0,0],[7141684.653810042,18347108.167634066,0,495360,2,0],[6869740.782959952,18398753.586904652,0,495420,1,0],[6596335.887159713,18446942.66820981,0,495480,2,0],[6321492.514791049,18491618.826443605,0,495540,2,0],[6045064.773984584,18532816.390825227,0,495600,0,0],[5767493.580402668,18570429.602385342,0,495660,1,0],[5488957.180678435,18604375.93587443,0,495720,1,0],[5209345.5428718375,18634681.523386743,0,495780,1,0],[4928697.355367918,18661279.959826887,0,495840,0,0],[4647255.922028635,18684152.327516176,0,495900,1,0],[4365043.692326383,18703241.279281065,0,495960,0,0],[4082141.114573812,18718540.34540247,0,496020,2,0],[3798387.4113046126,18730017.150347833,0,496080,2,0],[3513510.5323435515,18737645.99084468,0,496140,1,0],[3227731.524133446,18741419.770059686,0,496200,2,0],[2941084.193639895,18741273.738803227,0,496260,1,0],[2653634.995332332,18737182.57482932,0,496320,0,0],[2365823.3640200854,18729144.30805514,0,496380,1,0],[2077671.2431622162,18717101.164931957,0,496440,0,0],[1789254.4943668758,18701049.17015037,0,496500,1,0],[1500631.5729059468,18680958.015978843,0,496560,2,0],[1211502.406247748,18656775.553751025,0,496620,0,0],[922105.4082768747,18628518.978062727,0,496680,1,0],[632685.7391652651,18596146.58767454,0,496740,1,0],[343138.73755548993,18559634.21712882,0,496800,1,0],[53507.9205194836,18518958.33704056,0,496860,2,0],[-236327.07069139893,18474057.416839406,0,496920,1,0],[-526279.6475063548,18424939.416269287,0,496980,1,0],[-816119.4642783975,18371597.35414671,0,497040,1,0],[-1105744.627018143,18314023.83894253,0,497100,0,0],[-1394962.3567563307,18252214.503098033,0,497160,1,0],[-1683656.6291107563,18186189.29565805,0,497220,1,0],[-1971977.1702911267,18115878.175983116,0,497280,0,0],[-2259630.379991051,18041323.77967686,0,497340,2,0],[-2546760.189298689,17962452.904245894,0,497400,1,0],[-2833456.127645481,17879200.89053028,0,497460,0,0],[-3119285.6225426937,17791694.891083874,0,497520,2,0],[-3404354.694189813,17699844.59854249,0,497580,1,0],[-3688772.436020118,17603610.686191086,0,497640,1,0],[-3972258.888822443,17503042.311860103,0,497700,1,0],[-4254779.558170546,17398106.92207755,0,497760,2,0],[-4536390.840048888,17288782.37044917,0,497820,2,0],[-4817217.4432716835,17174975.238413572,0,497880,2,0],[-5097137.658103247,17056693.048242368,0,497940,2,0],[-5376108.918895563,16933907.078975767,0,498000,0,0],[-5653691.978873963,16806809.26669258,0,498060,0,0],[-5929480.117917218,16675541.665133493,0,498120,2,0],[-6203765.700712972,16539951.094427934,0,498180,0,0],[-6476410.807930484,16400053.51983965,0,498240,2,0],[-6747374.703778141,16255863.751995906,0,498300,2,0],[-7016867.8834616365,16107233.160319142,0,498360,0,0],[-7284515.075300688,15954339.765943252,0,498420,2,0],[-7550228.601611023,15797180.651605735,0,498480,0,0],[-7813906.517238563,15635820.806487564,0,498540,2,0],[-8075500.462822501,15470259.83121284,0,498600,0,0],[-8334896.438369709,15300511.353763193,0,498660,1,0],[-8591899.610683821,15126728.792280326,0,498720,1,0],[-8846548.826741299,14948806.70983794,0,498780,0,0],[-9098637.950144345,14766894.819597164,0,498840,0,0],[-9347922.817503804,14581147.81541323,0,498900,0,0],[-9594352.594488606,14391588.68698667,0,498960,0,0],[-9837835.737247145,14198252.721236644,0,499020,1,0],[-10078438.991644954,14001088.014114836,0,499080,0,0],[-10316075.541715078,13800123.013338951,0,499140,0,0],[-10550555.852240916,13595509.71489099,0,499200,2,0],[-10782054.356903045,13387075.371957062,0,499260,2,0],[-11010791.50427983,13174614.291939706,0,499320,0,0],[-11236398.445142629,12958423.711490626,0,499380,2,0],[-11458809.931237718,12738530.91621524,0,499440,2,0],[-11678212.632492969,12514763.276840253,0,499500,1,0],[-11894386.984377224,12287290.48426261,0,499560,2,0],[-12107284.624665648,12056143.916526875,0,499620,0,0],[-12316682.209214728,11821549.60646257,0,499680,2,0],[-12522543.257392297,11583533.700734997,0,499740,0,0],[-12724777.816887181,11342167.8080767,0,499800,1,0],[-12923208.303150993,11097665.613446282,0,499860,2,0],[-13118001.48983574,10849799.583696978,0,499920,1,0],[-13309099.890844056,10598621.432532532,0,499980,1,0],[-13496314.094355797,10344363.826721996,0,500040,1,0],[-13679581.49524307,10087098.338979153,0,500100,0,0],[-13858760.122598514,9827025.828567522,0,500160,0,0],[-14033666.415564526,9564375.095507732,0,500220,2,0],[-14204481.800489895,9298911.481410306,0,500280,2,0],[-14371303.292637046,9030431.245605363,0,500340,2,0],[-14534108.78370751,8758979.62408716,0,500400,2,0],[-14692824.54958802,8484649.530486973,0,500460,1,0],[-14847314.932687629,8207676.84468264,0,500520,1,0],[-14997436.466359276,7928292.284880273,0,500580,0,0],[-15143073.50158957,7646739.815498695,0,500640,2,0],[-15284255.449603388,7362931.028420557,0,500700,0,0],[-15420946.923037466,7076954.093694692,0,500760,1,0],[-15553036.12818842,6789084.003645506,0,500820,0,0],[-15680486.403255526,6499359.883008672,0,500880,1,0],[-15803252.214503717,6207910.3836736865,0,500940,2,0],[-15921465.835174672,5914463.12225756,0,501000,0,0],[-16035009.727740597,5619288.670347836,0,501060,0,0],[-16143727.17013786,5322814.456241138,0,501120,0,0],[-16247621.879304178,5025118.920814432,0,501180,1,0],[-16346713.760197394,4726131.058547679,0,501240,1,0],[-16441054.893290201,4425768.290412886,0,501300,2,0],[-16530653.422460143,4123936.132978741,0,501360,1,0],[-16615523.863601789,3820736.7299640514,0,501420,1,0],[-16695570.670263004,3516434.1245989203,0,501480,1,0],[-16770794.972018521,3211111.4678524253,0,501540,1,0],[-16841181.259375248,2904872.5038491986,0,501600,0,0],[-16906696.13413175,2597972.5173383215,0,501660,2,0],[-16967358.497642364,2290314.768609748,0,501720,0,0],[-17023173.225747257,1982015.0718912587,0,501780,1,0],[-17074099.863812115,1673324.1573669368,0,501840,1,0],[-17120173.012997165,1364164.4136100463,0,501900,2,0],[-17161426.94529937,1054427.2804770465,0,501960,1,0],[-17197869.66871943,744214.4240989427,0,502020,1,0],[-17229459.06709155,433802.3076172679,0,502080,0,0],[-17256202.82703573,123447.14501101106,0,502140,2,0],[-17278129.1658792,-186949.4940336704,0,502200,0,0],[-17295252.391977824,-497298.7666177303,0,502260,1,0],[-17307585.253442112,-807320.6791590848,0,502320,1,0],[-17315128.217498865,-1117121.164085483,0,502380,1,0],[-17317930.303529005,-1426619.1559650481,0,502440,0,0],[-17315983.562526092,-1735551.342824116,0,502500,2,0],[-17309320.011765033,-2044005.6502568931,0,502560,0,0],[-17297978.801511526,-2351889.218198094,0,502620,1,0],[-17281963.17140451,-2658982.5484133116,0,502680,2,0],[-17261309.60412496,-2965537.974087481,0,502740,0,0],[-17236039.33321461,-3271287.9629816087,0,502800,1,0],[-17206214.6130208,-3575999.514077671,0,502860,2,0],[-17171818.284330346,-3879958.5449657757,0,502920,0,0],[-17132892.07806593,-4182877.0708805807,0,502980,1,0],[-17089524.538678024,-4484527.611631437,0,503040,2,0],[-17041676.82648726,-4785176.688656905,0,503100,0,0],[-16989425.7941022,-5084605.755597047,0,503160,1,0],[-16932834.780017566,-5382552.907950086,0,503220,1,0],[-16871914.284936033,-5679103.694096322,0,503280,2,0],[-16806654.467006154,-5974414.801809715,0,503340,2,0],[-16737071.4682172,-6268539.764178678,0,503400,2,0],[-16663188.795148218,-6561453.745875155,0,503460,0,0],[-16585152.909239918,-6852713.046731922,0,503520,1,0],[-16503040.146981865,-7142121.291273241,0,503580,2,0],[-16416804.709045121,-7429924.350087539,0,503640,0,0],[-16326558.914650105,-7715899.883581633,0,503700,0,0],[-16232436.260614363,-7999658.59535308,0,503760,2,0],[-16134376.055938192,-8281483.946960002,0,503820,2,0],[-16032319.802507786,-8561658.070916245,0,503880,2,0],[-15926299.827379834,-8840131.79973778,0,503940,0,0],[-15816500.052486788,-9116478.595899561,0,504000,0,0],[-15703121.948243361,-9390362.832843633,0,504060,1,0],[-15586110.077333681,-9661875.480667217,0,504120,1,0],[-15465488.779771848,-9931157.127671745,0,504180,1,0],[-15341278.557871565,-10198117.500032552,0,504240,2,0],[-15213486.746536668,-10462907.171313226,0,504300,2,0],[-15082043.056743767,-10725630.29925871,0,504360,2,0],[-14947041.36324977,-10986258.652083531,0,504420,0,0],[-14808680.466904543,-11244420.534063688,0,504480,0,0],[-14667186.0404262,-11499744.228514602,0,504540,2,0],[-14522431.009456769,-11752515.77655685,0,504600,0,0],[-14374494.804005446,-12002715.1660912,0,504660,0,0],[-14223587.537198147,-12249976.217358079,0,504720,2,0],[-14069600.805369956,-12494587.630402626,0,504780,1,0],[-13912489.199669542,-12736644.640730308,0,504840,1,0],[-13752402.67865517,-12975977.19519878,0,504900,0,0],[-13589513.352216516,-13212422.275322452,0,504960,1,0],[-13423834.500863077,-13445935.913103275,0,505020,1,0],[-13255357.908865137,-13676621.629644101,0,505080,1,0],[-13084127.27937404,-13904467.164662085,0,505140,2,0],[-12910095.542636942,-14129612.037012532,0,505200,1,0],[-12733303.341166379,-14351985.008153865,0,505260,1,0],[-12553924.350619089,-14571459.190095529,0,505320,2,0],[-12371909.592699276,-14788119.533555733,0,505380,1,0],[-12187281.076816987,-15001961.130986258,0,505440,1,0],[-12000243.450550271,-15212805.792358816,0,505500,0,0],[-11810964.533673929,-15420547.87882843,0,505560,2,0],[-11619374.813892296,-15625248.47232924,0,505620,1,0],[-11425385.747077066,-15827043.759088947,0,505680,1,0],[-11229200.719857978,-16025791.093423946,0,505740,2,0],[-11030737.206371527,-16221603.720429229,0,505800,0,0],[-10830186.663046682,-16414310.931861665,0,505860,0,0],[-10627844.821514387,-16603686.475398045,0,505920,0,0],[-10423774.9513581,-16789704.247993376,0,505980,1,0],[-10217919.46888521,-16972488.90724088,0,506040,1,0],[-10010149.390733702,-17152129.37547321,0,506100,2,0],[-9800422.065834811,-17328757.22627878,0,506160,0,0],[-9588904.977581006,-17502227.435653165,0,506220,2,0],[-9375659.511861721,-17672530.637426544,0,506280,1,0],[-9160609.693372121,-17839790.927679177,0,506340,0,0],[-8944051.04819705,-18003756.76166949,0,506400,1,0],[-8726078.756947437,-18164442.91848229,0,506460,1,0],[-8506558.46397748,-18321936.318228878,0,506520,1,0],[-8285556.26873908,-18476261.334653042,0,506580,2,0],[-8062984.723369614,-18627469.050904382,0,506640,1,0],[-7838866.792766131,-18775585.4448586,0,506700,2,0],[-7613258.437439106,-18920610.08601745,0,506760,1,0],[-7386235.682447525,-19062530.82309126,0,506820,0,0],[-7158107.241549256,-19201153.276331987,0,506880,1,0],[-6928950.745131668,-19336464.08483843,0,506940,1,0],[-6698638.132046783,-19468607.30685117,0,507000,1,0],[-6467233.927746718,-19597537.372366052,0,507060,1,0],[-6234766.777630773,-19723246.613031838,0,507120,0,0],[-6001433.948098478,-19845691.2425968,0,507180,1,0],[-5767311.120722322,-19964861.519599956,0,507240,1,0],[-5532265.082362931,-20080840.235196333,0,507300,2,0],[-5296172.231242406,-20193705.253295567,0,507360,0,0],[-5059255.805550347,-20303364.484055184,0,507420,2,0],[-4821537.1270149145,-20409861.15314261,0,507480,1,0],[-4582913.937590606,-20513263.174081136,0,507540,0,0],[-4343722.148981444,-20613408.44964176,0,507600,1,0],[-4104066.616123447,-20710328.6199064,0,507660,0,0],[-3863935.2110714773,-20804027.28897887,0,507720,1,0],[-3623386.1988363955,-20894517.564450473,0,507780,1,0],[-3382289.76737389,-20981861.021502867,0,507840,2,0],[-3140507.717581431,-21066117.635790996,0,507900,1,0],[-2898091.8905616347,-21147315.714918517,0,507960,1,0],[-2655258.1149732703,-21225390.563790258,0,508020,1,0],[-2412048.80946379,-21300328.39465945,0,508080,1,0],[-2168458.123144761,-21372193.119607963,0,508140,2,0],[-1924406.4506149637,-21441004.50868745,0,508200,1,0],[-1679894.6583369991,-21506784.987896655,0,508260,2,0],[-1434967.6603758251,-21569525.9031538,0,508320,2,0],[-1189483.0044765526,-21629300.47324271,0,508380,0,0],[-943821.359253873,-21686037.723660447,0,508440,1,0],[-698227.977504374,-21739650.224907763,0,508500,1,0],[-452510.9911516903,-21790260.931061555,0,508560,2,0],[-206585.12638719476,-21837888.73855784,0,508620,2,0],[39746.42164521039,-21882575.3166782,0,508680,1,0],[286243.717104506,-21924265.78833363,0,508740,0,0],[532514.8738062081,-21962968.38508693,0,508800,0,0],[778378.9835665965,-21998650.181322653,0,508860,0,0],[1023766.5860030431,-22031307.42957105,0,508920,2,0],[1269008.304306387,-22061027.801224962,0,508980,1,0],[1514284.228654519,-22087833.00122964,0,509040,2,0],[1759532.8394282537,-22111735.63003345,0,509100,1,0],[2004713.2611898012,-22132743.57580499,0,509160,1,0],[2249648.6963993097,-22150860.730021864,0,509220,0,0],[2494096.4717486426,-22166094.46643546,0,509280,2,0],[2738236.6132457457,-22178434.974227812,0,509340,0,0],[2982012.7352128252,-22187946.373164266,0,509400,1,0],[3225218.3385480926,-22194607.6617781,0,509460,0,0],[3467862.483760259,-22198453.406216145,0,509520,1,0],[3709876.8860366736,-22199478.19981957,0,509580,1,0],[3951404.809889035,-22197705.435536537,0,509640,1,0],[4192454.5256216293,-22193157.083929595,0,509700,2,0],[4433172.804326388,-22185851.130331308,0,509760,2,0],[4673707.516784375,-22175781.48672003,0,509820,0,0],[4913625.389127939,-22162966.512057874,0,509880,0,0],[5152618.029919956,-22147452.15037626,0,509940,1,0],[5390782.73477744,-22129245.359898552,0,510000,1,0],[5628298.635042644,-22108382.547862176,0,510060,1,0],[5865136.27206726,-22084815.142156877,0,510120,2,0],[6101458.248019574,-22058586.886945084,0,510180,0,0],[6337037.36684053,-22029712.653139997,0,510240,0,0],[6571494.601889651,-21998259.410896547,0,510300,2,0],[6805180.170374486,-21964178.001833014,0,510360,1,0],[7038262.907569516,-21927518.218206987,0,510420,2,0],[7270665.091328408,-21888226.974292144,0,510480,0,0],[7502226.224908213,-21846381.931049116,0,510540,2,0],[7732910.454240987,-21801993.38535352,0,510600,1,0],[7962892.299909769,-21755037.303339113,0,510660,0,0],[8191758.4344763635,-21705626.58213114,0,510720,2,0],[8419706.524988167,-21653683.479277365,0,510780,0,0],[8646653.52668396,-21599288.061567854,0,510840,0,0],[8872295.284834832,-21542522.28942668,0,510900,2,0],[9096940.398912748,-21483317.712457277,0,510960,1,0],[9320705.809164774,-21421627.726685412,0,511020,2,0],[9543607.115843913,-21357457.20569405,0,511080,0,0],[9765425.604343481,-21290920.056910276,0,511140,1,0],[9986018.245951686,-21222064.288968626,0,511200,1,0],[10205467.867691197,-21150821.372320473,0,511260,2,0],[10423961.122223157,-21077177.97219327,0,511320,1,0],[10641486.18250238,-21001183.696799994,0,511380,0,0],[10857651.444531767,-20922916.15025093,0,511440,0,0],[11072284.693862647,-20842484.11812891,0,511500,1,0],[11285572.487026343,-20759858.736597963,0,511560,1,0],[11497626.007733973,-20674938.150157075,0,511620,1,0],[11708412.464009978,-20587809.57773717,0,511680,1,0],[11917946.871334702,-20498442.988991927,0,511740,0,0],[12126042.867074914,-20406949.371523503,0,511800,0,0],[12332475.860517878,-20313396.758771975,0,511860,2,0],[12537633.97963509,-20217673.981257733,0,511920,1,0],[12741603.622642804,-20119748.46314534,0,511980,1,0],[12944195.910340052,-20019653.853555355,0,512040,0,0],[13145288.433359781,-19917523.776439026,0,512100,2,0],[13344985.000027893,-19813315.183466703,0,512160,2,0],[13543589.250665877,-19706813.239424735,0,512220,2,0],[13741097.112545393,-19598111.81198113,0,512280,0,0],[13937156.082793768,-19487335.36319152,0,512340,1,0],[14131600.4552346,-19374602.54316927,0,512400,0,0],[14324413.536604954,-19259988.84323154,0,512460,1,0],[14515607.369089061,-19143441.35646136,0,512520,1,0],[14705274.814061798,-19024900.596675925,0,512580,2,0],[14893605.48436485,-18904309.73090985,0,512640,1,0],[15080552.587277515,-18781697.013161477,0,512700,2,0],[15266081.33275908,-18657028.74371985,0,512760,1,0],[15450196.823982844,-18530361.420755383,0,512820,1,0],[15632751.100082055,-18401789.93223645,0,512880,1,0],[15813701.00533792,-18271348.48075431,0,512940,0,0],[15992890.6714423,-18139165.32722556,0,513000,2,0],[16170467.330402082,-18005127.468971767,0,513060,2,0],[16346682.528612318,-17869047.72014785,0,513120,2,0],[16521539.251673179,-17730943.41552994,0,513180,0,0],[16694735.788143134,-17591062.505889818,0,513240,0,0],[16865978.050433565,-17449635.24355144,0,513300,0,0],[17035220.511769876,-17306693.85634198,0,513360,2,0],[17202783.424934853,-17161985.80287817,0,513420,1,0],[17368763.483480725,-17015482.172782596,0,513480,2,0],[17533108.344719067,-16867133.10225387,0,513540,0,0],[17695740.03904718,-16717113.757891007,0,513600,0,0],[17856329.545890592,-16565686.12278345,0,513660,2,0],[18015178.211853262,-16412608.374411343,0,513720,0,0],[18172212.59875173,-16257887.027446246,0,513780,1,0],[18327324.577007443,-16101694.249374356,0,513840,1,0],[18480626.44423896,-15943913.951012883,0,513900,1,0],[18632098.420759767,-15784560.278355034,0,513960,2,0],[18781862.561167143,-15623526.820719095,0,514020,1,0],[18929904.870861575,-15460804.052398358,0,514080,1,0],[19076087.551979683,-15296570.389751984,0,514140,1,0],[19220386.991606273,-15130842.626667261,0,514200,0,0],[19362700.090921592,-14963769.175390232,0,514260,2,0],[19503102.83874411,-14795225.979812868,0,514320,1,0],[19641733.518586926,-14625077.88809899,0,514380,1,0],[19778426.452380423,-14453513.83684968,0,514440,2,0],[19913293.891481686,-14280409.73270215,0,514500,1,0],[20046345.447314184,-14105747.453863194,0,514560,0,0],[20177321.47399376,-13929889.013540415,0,514620,0,0],[20306113.063598055,-13752942.051920298,0,514680,0,0],[20432735.56440238,-13574959.240363637,0,514740,1,0],[20557288.490237575,-13395796.43466862,0,514800,1,0],[20679822.311330475,-13215325.24483824,0,514860,1,0],[20800326.779318843,-13033569.812951196,0,514920,2,0],[20918932.8400037,-12850416.48178366,0,514980,1,0],[21035628.686928075,-12665861.830471516,0,515040,2,0],[21150355.942229696,-12479903.891673313,0,515100,2,0],[21263235.16133825,-12292450.307602374,0,515160,0,0],[21374054.242589336,-12103804.494376834,0,515220,0,0],[21482587.036593117,-11914298.568075603,0,515280,1,0],[21588984.691774484,-11723795.093257628,0,515340,1,0],[21693282.245333407,-11532151.42125304,0,515400,1,0],[21795499.522755112,-11339411.387137285,0,515460,2,0],[21895682.80660431,-11145380.120387614,0,515520,0,0],[21993737.49415768,-10950292.021766586,0,515580,1,0],[22089580.43983127,-10754302.358219108,0,515640,2,0],[22183375.618475422,-10557112.073607462,0,515700,0,0],[22275038.710499067,-10358903.884286515,0,515760,1,0],[22364427.468384597,-10159860.88175758,0,515820,0,0],[22451600.009136766,-9959987.641479164,0,515880,0,0],[22536463.172130488,-9759488.646828512,0,515940,0,0],[22619001.657432668,-9558361.638058893,0,516000,2,0],[22699348.116270855,-9356321.528846942,0,516060,1,0],[22777549.304891773,-9153206.77965712,0,516120,1,0],[22853573.624330446,-8949193.333599288,0,516180,2,0],[22927401.906200383,-8744149.374962721,0,516240,0,0],[22999020.28996937,-8538256.499146696,0,516300,1,0],[23068354.883581564,-8331702.639496388,0,516360,2,0],[23135501.616777413,-8124162.794203231,0,516420,2,0],[23200498.707668647,-7915498.206076445,0,516480,1,0],[23263279.60811576,-7705874.605102222,0,516540,1,0],[23323791.62585362,-7495510.809792038,0,516600,0,0],[23381991.49803864,-7284604.10685813,0,516660,1,0],[23437836.479897175,-7073146.724418047,0,516720,1,0],[23491429.146673806,-6860993.7341353465,0,516780,2,0],[23542745.81217867,-6647992.106451159,0,516840,0,0],[23591738.846617267,-6434337.771827535,0,516900,0,0],[23638356.019059345,-6220425.314115926,0,516960,2,0],[23682652.319370672,-6005870.025373341,0,517020,2,0],[23724688.057477523,-5790390.498062558,0,517080,2,0],[23764444.90699176,-5573989.062296107,0,517140,1,0],[23801885.257240135,-5356838.63618622,0,517200,2,0],[23837018.58076382,-5138997.2443910055,0,517260,0,0],[23869794.359582692,-4920659.473988533,0,517320,0,0],[23900139.21749739,-4702163.216629221,0,517380,1,0],[23928080.500489242,-4483395.711340274,0,517440,0,0],[23953642.25006709,-4264365.440175454,0,517500,1,0],[23976777.85033283,-4045094.5359743903,0,517560,1,0],[23997519.766843703,-3825396.855417485,0,517620,2,0],[24015903.95821707,-3605137.2875956506,0,517680,2,0],[24031899.42733323,-3384169.997745204,0,517740,1,0],[24045479.259081293,-3162670.6988103385,0,517800,2,0],[24056662.877598673,-2940697.642112896,0,517860,2,0],[24065434.68440399,-2718036.8951095734,0,517920,1,0],[24071771.96985002,-2494961.5695888633,0,517980,2,0],[24075685.166946754,-2271406.7798247267,0,518040,0,0],[24077155.818118062,-2047669.500987652,0,518100,2,0],[24076161.043535292,-1823681.9584875703,0,518160,0,0],[24072735.89208745,-1599525.711077309,0,518220,0,0],[24066858.411976337,-1375592.2613556494,0,518280,0,0],[24058534.2635543,-1151839.1085010008,0,518340,0,0],[24047711.78872272,-928341.6695281997,0,518400,1,0],[24034471.259948634,-704940.807657495,0,518460,2,0],[24018714.654937938,-481279.3363372574,0,518520,0,0],[24000469.972294293,-257558.94407009723,0,518580,0,0],[23979764.501176696,-34171.18844886383,0,518640,1,0],[23956610.536209263,189021.57507255004,0,518700,2,0],[23930900.272516724,412394.1716991247,0,518760,0,0],[23902713.384912256,635723.02019053,0,518820,1,0],[23872019.575918738,858808.0446618422,0,518880,1,0],[23838814.64071402,1081784.2004296032,0,518940,1,0],[23803089.143871773,1304666.126602525,0,519000,1,0],[23764873.596068297,1527398.8155493708,0,519060,2,0],[23724055.44247356,1750156.5381178337,0,519120,1,0],[23680722.261543583,1972887.287182688,0,519180,2,0],[23634798.085111544,2195598.325826296,0,519240,1,0],[23586294.18798022,2418255.7156827613,0,519300,2,0],[23535202.36031407,2640823.6516966093,0,519360,0,0],[23481585.02451889,2863083.624743087,0,519420,2,0],[23425429.88996673,3085072.0237420085,0,519480,1,0],[23366669.65934597,3306865.1420744965,0,519540,0,0],[23305420.389733158,3528133.888989591,0,519600,1,0],[23241648.1239018,3748840.886181033,0,519660,1,0],[23175321.953705136,3969136.686442035,0,519720,0,0],[23106499.518711947,4188829.8639762662,0,519780,2,0],[23035118.68840658,4408066.402207291,0,519840,0,0],[22961161.04003053,4626782.698130289,0,519900,2,0],[22884644.18398901,4845018.180347078,0,519960,0,0],[22805559.005389135,5062686.269940018,0,520020,0,0],[22724045.834426805,5279448.8679756615,0,520080,1,0],[22640017.973966613,5495442.901315864,0,520140,0,0],[22553483.310525514,5710658.259802856,0,520200,2,0],[22464389.44963084,5925213.419126807,0,520260,0,0],[22372730.374767274,6139093.870527544,0,520320,2,0],[22278472.35070457,6352275.674334089,0,520380,2,0],[22181524.008179273,6565055.3165900335,0,520440,1,0],[22081913.614671417,6777229.718416525,0,520500,0,0],[21979825.281115867,6988430.176208298,0,520560,2,0],[21875125.8260619,7198844.176378971,0,520620,1,0],[21767823.70451922,7408576.4880794315,0,520680,2,0],[21657835.606136814,7617559.643553222,0,520740,0,0],[21545291.330269743,7825675.56919304,0,520800,0,0],[21430365.4306273,8032533.542369521,0,520860,2,0],[21312874.77680102,8238417.08192081,0,520920,0,0],[21192799.610970695,8443326.528198427,0,520980,2,0],[21070164.828726813,8647204.907315027,0,521040,2,0],[20944806.732891787,8850335.307832595,0,521100,1,0],[20816779.331598964,9052547.227580259,0,521160,0,0],[20686300.42829035,9253495.266133055,0,521220,2,0],[20553256.93493171,9453309.54231173,0,521280,1,0],[20417581.70390318,9652088.506048542,0,521340,2,0],[20279251.871115487,9849825.028992053,0,521400,0,0],[20138392.468178973,10046309.040280886,0,521460,2,0],[19994982.33984175,10241559.106812952,0,521520,2,0],[19848842.776318897,10435788.350972204,0,521580,1,0],[19700070.052239284,10628821.71375901,0,521640,0,0],[19548882.41080548,10820346.815420108,0,521700,0,0],[19395408.841721997,11010213.811926091,0,521760,0,0],[19239645.359923914,11198372.857624067,0,521820,1,0],[19081488.709760144,11384954.420852104,0,521880,2,0],[18920731.58219273,11570171.144106427,0,521940,1,0],[18757353.217512805,11753984.152346183,0,522000,0,0],[18591644.719755173,11936131.96138232,0,522060,1,0],[18423546.3507203,12116553.578414157,0,522120,2,0],[18252887.55575012,12295483.335192434,0,522180,1,0],[18079607.270397887,12472874.066903211,0,522240,0,0],[17904051.657458987,12648457.611652397,0,522300,2,0],[17726033.752557542,12822319.081073856,0,522360,1,0],[17545465.680448674,12994553.014938053,0,522420,1,0],[17362469.775712732,13165003.600727212,0,522480,0,0],[17177197.939619023,13333482.00461752,0,522540,2,0],[16989547.01411906,13500127.558621738,0,522600,1,0],[16799341.962376203,13664962.602423428,0,522660,1,0],[16606799.862279179,13827879.832573185,0,522720,0,0],[16412023.65814311,13988738.69952508,0,522780,1,0],[16215013.12995086,14147447.443372013,0,522840,0,0],[16015856.40875761,14304025.279330399,0,522900,2,0],[15814328.904607816,14458527.37656272,0,522960,2,0],[15610232.10111331,14611137.800442103,0,523020,1,0],[15403695.488777114,14761704.599334879,0,523080,1,0],[15194884.807639305,14910107.162115468,0,523140,2,0],[14983655.418310298,15056378.733583119,0,523200,1,0],[14770050.049387386,15200511.513509588,0,523260,0,0],[14554371.383027777,15342235.138067445,0,523320,1,0],[14336621.329031056,15481540.326630639,0,523380,2,0],[14116532.382571492,15618595.83248452,0,523440,1,0],[13894131.395263972,15753316.601368796,0,523500,0,0],[13669713.735871773,15885525.523056345,0,523560,2,0],[13443175.285050618,16015238.905869456,0,523620,1,0],[13214367.925801976,16142533.51396493,0,523680,2,0],[12983306.692289013,16267369.578358512,0,523740,0,0],[12750197.650001,16389622.737012066,0,523800,0,0],[12515349.18030119,16509063.874433283,0,523860,1,0],[12278654.073296273,16625784.817105902,0,523920,2,0],[12039802.237878835,16739865.336921709,0,523980,0,0],[11798962.740396252,16851199.29078384,0,524040,0,0],[11556540.725059137,16959630.403804943,0,524100,0,0],[11312486.534859046,17065075.986310203,0,524160,2,0],[11066576.688109927,17167692.859827306,0,524220,2,0],[10818450.334955908,17267535.304492645,0,524280,1,0],[10568318.797933703,17364524.88337713,0,524340,0,0],[10316563.099177884,17458477.10891519,0,524400,2,0],[10063012.804027991,17549429.60802128,0,524460,0,0],[9807732.66773748,17637343.324134517,0,524520,1,0],[9550903.983291915,17722110.32479727,0,524580,0,0],[9292582.96495036,17803705.04566615,0,524640,2,0],[9032616.090776946,17882160.8404813,0,524700,1,0],[8770844.805160306,17957473.12121589,0,524760,1,0],[8507506.252137732,18029536.63883542,0,524820,1,0],[8242620.809580278,18098356.13526634,0,524880,2,0],[7976068.397270129,18163904.367717016,0,524940,1,0],[7707864.0566045195,18226169.592989303,0,525000,0,0],[7438426.143503395,18285023.360718645,0,525060,1,0],[7167751.024936478,18340409.976835694,0,525120,0,0],[6895916.436433683,18392317.288344834,0,525180,1,0],[6622972.294943377,18440718.729185265,0,525240,1,0],[6348749.609175382,18485607.553598147,0,525300,2,0],[6073118.818330227,18526964.37994329,0,525360,1,0],[5796139.783543474,18564768.11181828,0,525420,2,0],[5517862.89663236,18598964.372719433,0,525480,1,0],[5238304.575922466,18629520.06955139,0,525540,1,0],[4957717.555381351,18656403.809222244,0,525600,0,0],[4676328.617979735,18679536.087560423,0,525660,1,0],[4394169.316678443,18698897.526995845,0,525720,1,0],[4111126.1028356743,18714491.1014882,0,525780,1,0],[3827246.970691613,18726250.05511362,0,525840,0,0],[3542770.3527371148,18734167.09329779,0,525900,0,0],[3257899.3752638274,18738195.80400857,0,525960,0,0],[2972727.739706849,18738294.48079466,0,526020,2,0],[2686911.7235222966,18734470.894201163,0,526080,2,0],[2400167.421983543,18726687.21073869,0,526140,1,0],[2112746.585189893,18714888.82062701,0,526200,2,0],[1824678.8192258887,18699067.030273937,0,526260,1,0],[1536045.0955829672,18679183.740822706,0,526320,0,0],[1247264.560534677,18655242.699664976,0,526380,1,0],[958363.8502319863,18627222.727268573,0,526440,2,0],[669103.0012511928,18595065.572571833,0,526500,1,0],[379492.0768554297,18558746.687057916,0,526560,2,0],[89617.50048355066,18518252.83597493,0,526620,2,0],[-200623.69873241853,18473502.121564507,0,526680,0,0],[-490811.8128699597,18424552.223484315,0,526740,0,0],[-780551.9494819066,18371454.89546618,0,526800,0,0],[-1069748.134767333,18314173.182954933,0,526860,1,0],[-1358521.3299259562,18252675.759544864,0,526920,2,0],[-1647149.6343306405,18186857.73655568,0,526980,1,0],[-1935561.3363081808,18116726.29810265,0,527040,1,0],[-2223513.289575837,18042298.433344156,0,527100,1,0],[-2510937.983162094,17963559.609971676,0,527160,1,0],[-2797763.7077317033,17880483.047540084,0,527220,2,0],[-3084084.6635930305,17793049.9919263,0,527280,0,0],[-3369655.643406157,17701265.428042334,0,527340,1,0],[-3654220.9494539383,17605207.985667203,0,527400,2,0],[-3938056.5167651894,17504740.860986065,0,527460,1,0],[-4221088.626868305,17399851.659868963,0,527520,0,0],[-4502883.799639349,17290694.82805953,0,527580,2,0],[-4783557.45115242,17177178.489309136,0,527640,0,0],[-5063024.3507291665,17059317.173207574,0,527700,1,0],[-5341022.680405001,16937194.145986643,0,527760,2,0],[-5617823.107807436,16810638.774855327,0,527820,1,0],[-5893341.985824964,16679675.443568973,0,527880,1,0],[-6167323.4599285545,16544405.531184388,0,527940,1,0],[-6439710.442679127,16404806.374976244,0,528000,1,0],[-6710410.239269104,16260921.573889226,0,528060,0,0],[-6979162.284857386,16112830.33125345,0,528120,1,0],[-7245929.0039259065,15960562.744738704,0,528180,0,0],[-7510591.021109614,15804132.08649035,0,528240,1,0],[-7773101.784836948,15643542.516010465,0,528300,1,0],[-8033514.260416889,15478761.723524498,0,528360,2,0],[-8291910.63607899,15309678.539868709,0,528420,1,0],[-8548205.66725519,15136344.739142926,0,528480,0,0],[-8801992.580962263,14958987.03533721,0,528540,1,0],[-9053237.140925424,14777623.556302674,0,528600,2,0],[-9302134.371817103,14592065.076082308,0,528660,2,0],[-9548735.768837871,14402256.340956846,0,528720,0,0],[-9792685.651351681,14208442.192585748,0,528780,1,0],[-10033751.280660734,14010778.632169439,0,528840,1,0],[-10272005.610178454,13809181.536306536,0,528900,1,0],[-10507373.353434708,13603709.91531546,0,528960,2,0],[-10739912.672665982,13394257.974327637,0,529020,0,0],[-10969408.560328133,13181011.230764067,0,529080,1,0],[-11195633.431177841,12964150.967714958,0,529140,1,0],[-11418675.63040104,12743574.121321145,0,529200,1,0],[-11638445.943757141,12519351.242033685,0,529260,1,0],[-11854866.018332189,12291537.652211448,0,529320,2,0],[-12067998.440441841,12060048.150954034,0,529380,1,0],[-12277768.085452314,11824934.710234314,0,529440,1,0],[-12483977.951672086,11586399.802803412,0,529500,2,0],[-12686677.711972306,11344364.780929543,0,529560,2,0],[-12885910.80517371,11098746.124797989,0,529620,0,0],[-13081392.92389824,10849887.93311509,0,529680,1,0],[-13272937.712562203,10598005.745964846,0,529740,0,0],[-13460488.902383216,10343171.491951438,0,529800,1,0],[-13643971.00840415,10085441.758772261,0,529860,0,0],[-13823361.929537797,9824899.936804863,0,529920,0,0],[-13998465.887734583,9561764.612402191,0,529980,1,0],[-14169372.383811165,9295958.758504756,0,530040,1,0],[-14336081.91893026,9027404.032705454,0,530100,0,0],[-14498466.246736817,8756363.896133123,0,530160,2,0],[-14656577.879111135,8482721.67205449,0,530220,2,0],[-14810540.817054044,8206250.393271181,0,530280,1,0],[-14960204.925700003,7927202.353667686,0,530340,1,0],[-15105448.654469507,7645832.939084376,0,530400,0,0],[-15246135.373092337,7362346.054172906,0,530460,2,0],[-15382327.89098697,7076669.232099077,0,530520,0,0],[-15513969.686076622,6788916.919348379,0,530580,2,0],[-15641019.043331737,6499158.010512353,0,530640,1,0],[-15763526.768692512,6207302.60145637,0,530700,2,0],[-15881452.276073743,5913465.090849709,0,530760,1,0],[-15994757.48474183,5617705.686021799,0,530820,2,0],[-16103424.324737843,5320131.718768177,0,530880,0,0],[-16207342.727969375,5020989.934834571,0,530940,1,0],[-16306450.559118845,4720531.82871188,0,531000,2,0],[-16400819.744210394,4418523.460724553,0,531060,2,0],[-16490507.880479041,4114881.4473883947,0,531120,0,0],[-16575359.2039033,3810032.062000521,0,531180,0,0],[-16655289.078349346,3504437.622316395,0,531240,0,0],[-16730300.21201708,3198152.099382225,0,531300,2,0],[-16800432.256762777,2890943.8283160203,0,531360,1,0],[-16865738.61162076,2582718.6978734676,0,531420,1,0],[-16926176.460292798,2273744.3850799096,0,531480,2,0],[-16981771.6944833,1963945.039078624,0,531540,1,0],[-17032516.208588105,1653412.449237394,0,531600,1,0],[-17078399.97069263,1342393.9060387218,0,531660,1,0],[-17119392.74719901,1031004.8337384867,0,531720,0,0],[-17155501.34339388,719487.5739814178,0,531780,2,0],[-17186741.28648474,407773.6265878272,0,531840,2,0],[-17213159.745460067,95580.17445668142,0,531900,0,0],[-17234734.816206276,-216644.76149400347,0,531960,0,0],[-17251463.372313406,-528433.9565358601,0,532020,1,0],[-17263378.131394,-839914.9530766418,0,532080,0,0],[-17270478.344169844,-1150957.931235949,0,532140,0,0],[-17272802.941494435,-1461343.1544333582,0,532200,1,0],[-17270354.736127596,-1771125.3097248527,0,532260,2,0],[-17263177.548003193,-2080631.120995771,0,532320,1,0],[-17251272.93911483,-2389727.845961815,0,532380,0,0],[-17234699.634509906,-2698003.5764644286,0,532440,2,0],[-17213471.719649848,-3005546.6013039174,0,532500,1,0],[-17187586.98725388,-3312457.2542982884,0,532560,0,0],[-17157130.998401556,-3618305.0389257194,0,532620,0,0],[-17122156.929574218,-3922832.1484739836,0,532680,1,0],[-17082647.488683492,-4226145.969209219,0,532740,0,0],[-17038677.78871992,-4528160.253274361,0,532800,1,0],[-16990273.492740054,-4828830.978770937,0,532860,0,0],[-16937476.28052384,-5128038.295889298,0,532920,2,0],[-16880285.997382615,-5425945.5659055235,0,532980,1,0],[-16818725.15066244,-5722610.9341243105,0,533040,2,0],[-16752813.700932147,-6017997.1907209195,0,533100,2,0],[-16682562.40257676,-6312212.668211756,0,533160,2,0],[-16607999.291403541,-6605166.793992808,0,533220,2,0],[-16529182.987577764,-6896830.860949223,0,533280,1,0],[-16446182.673899017,-7186922.876073448,0,533340,0,0],[-16359154.772249123,-7475063.278483899,0,533400,0,0],[-16268194.84879979,-7761021.631071652,0,533460,1,0],[-16173306.521158,-8044909.875044494,0,533520,2,0],[-16074420.24557152,-8326998.964955456,0,533580,1,0],[-15971604.040604219,-8607249.746541156,0,533640,2,0],[-15864869.44965869,-8885605.665152505,0,533700,1,0],[-15754284.299387146,-9162004.097849907,0,533760,0,0],[-15640030.563414179,-9436059.40064234,0,533820,2,0],[-15522100.359524012,-9707902.695866797,0,533880,0,0],[-15400543.324475054,-9977468.634347104,0,533940,2,0],[-15275399.494600732,-10244718.6423811,0,534000,2,0],[-15146579.173949579,-10509926.049436014,0,534060,0,0],[-15014299.780475607,-10772739.112687353,0,534120,1,0],[-14878682.33510793,-11032931.089394424,0,534180,0,0],[-14739788.352968134,-11290468.296861485,0,534240,2,0],[-14597588.645384734,-11545497.51500325,0,534300,2,0],[-14451955.939326964,-11798250.925841726,0,534360,0,0],[-14303156.84577047,-12048401.901440078,0,534420,0,0],[-14151380.46618913,-12295612.327140868,0,534480,1,0],[-13996629.618504873,-12539969.128859252,0,534540,0,0],[-13838940.193717074,-12781488.678664833,0,534600,2,0],[-13678288.325023655,-13020237.506923052,0,534660,1,0],[-13514609.260169042,-13256381.715535624,0,534720,1,0],[-13348085.641729763,-13489720.795965333,0,534780,0,0],[-13178867.781708017,-13720080.388584202,0,534840,2,0],[-13006879.136616355,-13947577.896965714,0,534900,0,0],[-12832223.036846744,-14172183.352681916,0,534960,0,0],[-12655151.175926404,-14393595.10228843,0,535020,2,0],[-12475482.613402314,-14612084.083641266,0,535080,1,0],[-12293199.57091533,-14827766.060931219,0,535140,2,0],[-12108314.422239715,-15040571.965326171,0,535200,0,0],[-11921021.511903288,-15250393.47336622,0,535260,1,0],[-11731486.389152266,-15457098.227657557,0,535320,1,0],[-11539651.500736928,-15660725.945655333,0,535380,0,0],[-11345699.706076894,-15861191.779761309,0,535440,2,0],[-11149531.525612967,-16058578.49999286,0,535500,2,0],[-10950987.445935113,-16253141.640585512,0,535560,0,0],[-10750352.180342881,-16444605.703550756,0,535620,2,0],[-10547663.077187885,-16632957.34289386,0,535680,0,0],[-10343010.142615687,-16818178.97939776,0,535740,2,0],[-10136418.210305668,-17000278.980099585,0,535800,1,0],[-9927821.332448281,-17179348.088418297,0,535860,0,0],[-9717540.807252195,-17355134.469751358,0,535920,2,0],[-9505493.45932862,-17527755.423973605,0,535980,2,0],[-9291419.199271122,-17697439.86933568,0,536040,0,0],[-9075699.501549032,-17863934.826605927,0,536100,0,0],[-8858657.399682106,-18027032.622020006,0,536160,1,0],[-8640173.084112022,-18186821.382410638,0,536220,1,0],[-8420178.718570003,-18343429.486815833,0,536280,0,0],[-8198854.83498158,-18496721.955543824,0,536340,2,0],[-7976105.252417107,-18646804.898715664,0,536400,2,0],[-7751685.632085175,-18793882.226512663,0,536460,0,0],[-7525947.519331175,-18937766.4611202,0,536520,1,0],[-7299076.1587349335,-19078323.933296308,0,536580,2,0],[-7070838.98075861,-19215772.77589795,0,536640,2,0],[-6841098.987114886,-19350183.15876292,0,536700,0,0],[-6610228.777054802,-19481399.878718756,0,536760,0,0],[-6378583.023960637,-19609214.551285233,0,536820,0,0],[-6146212.865175122,-19733651.139778823,0,536880,1,0],[-5912989.488110506,-19854812.094353024,0,536940,2,0],[-5678664.845497184,-19972829.49213363,0,537000,2,0],[-5443088.3881695075,-20087820.02911378,0,537060,2,0],[-5206341.258840685,-20199754.67879514,0,537120,2,0],[-4968422.196121062,-20308669.971991826,0,537180,1,0],[-4729584.657514379,-20414460.004765067,0,537240,0,0],[-4490153.62914024,-20516984.429439202,0,537300,0,0],[-4250386.271021698,-20616192.207532812,0,537360,2,0],[-4009941.515043055,-20712236.37595482,0,537420,0,0],[-3768892.6432021614,-20805125.492024325,0,537480,1,0],[-3527444.9435706744,-20894758.969646007,0,537540,0,0],[-3285620.022533789,-20981206.279818207,0,537600,1,0],[-3043489.699934747,-21064446.23925714,0,537660,1,0],[-2800900.9387631183,-21144552.688734654,0,537720,0,0],[-2558066.8151483415,-21221477.42125502,0,537780,2,0],[-2314835.3746691416,-21295284.129438058,0,537840,1,0],[-2071129.6262707333,-21366027.983918976,0,537900,1,0],[-1827098.7523253642,-21433680.48606154,0,537960,1,0],[-1582812.5526499045,-21498216.956470482,0,538020,1,0],[-1338302.144324525,-21559695.290961403,0,538080,1,0],[-1093590.7494675324,-21618106.123421896,0,538140,2,0],[-848553.6443220894,-21673497.17543833,0,538200,1,0],[-603235.8320828583,-21725878.49424034,0,538260,1,0],[-357813.5363677159,-21775224.39659191,0,538320,1,0],[-112353.42490997471,-21821545.07938359,0,538380,0,0],[132947.24908928957,-21864812.212374013,0,538440,1,0],[378059.41133982776,-21905055.233996656,0,538500,2,0],[623293.4923828659,-21942328.037309356,0,538560,1,0],[868602.1827034019,-21976656.02174827,0,538620,0,0],[1113636.2590430668,-22008009.87983565,0,538680,2,0],[1358526.453596574,-22036386.86520692,0,538740,1,0],[1603410.1106848433,-22061856.0690031,0,538800,1,0],[1848063.8344296836,-22084401.6981678,0,538860,2,0],[2092674.0937509187,-22104065.678058095,0,538920,1,0],[2337174.128783132,-22120828.081062403,0,538980,0,0],[2581207.8353370605,-22134701.95200273,0,539040,1,0],[2824712.913106321,-22145692.44531175,0,539100,0,0],[3067668.97819084,-22153824.299024228,0,539160,2,0],[3310234.6708570095,-22159098.558594275,0,539220,2,0],[3552761.79063402,-22161562.263644855,0,539280,1,0],[3794984.251783353,-22161214.36506189,0,539340,2,0],[4036936.3782471255,-22158091.408193152,0,539400,0,0],[4278363.159762215,-22152149.125079177,0,539460,2,0],[4519264.432896568,-22143461.635756012,0,539520,0,0],[4759588.059846245,-22132001.96674603,0,539580,0,0],[4998986.61527114,-22117841.563870475,0,539640,0,0],[5237395.436223525,-22100986.074217614,0,539700,0,0],[5474785.350351123,-22081432.03198596,0,539760,0,0],[5711182.780458218,-22059240.950136576,0,539820,2,0],[5946870.030785478,-22034332.723116115,0,539880,1,0],[6182024.335157358,-22006795.797272224,0,539940,1,0],[6416446.306326699,-21976581.851153012,0,540000,1,0],[6650095.095709511,-21943746.904092994,0,540060,0,0],[6882767.473107502,-21908331.67782116,0,540120,1,0],[7114449.418432976,-21870342.75692234,0,540180,2,0],[7345457.707041688,-21829758.418003146,0,540240,1,0],[7575794.04250609,-21786555.165263858,0,540300,0,0],[7805072.328556532,-21740856.33276256,0,540360,2,0],[8033432.910991995,-21692620.051165678,0,540420,2,0],[8261206.875674842,-21641787.58659012,0,540480,0,0],[8488056.925175615,-21588473.566320837,0,540540,2,0],[8713909.000654595,-21532654.605633207,0,540600,0,0],[8938769.331873976,-21474381.39139993,0,540660,2,0],[9162598.085492577,-21413657.752838857,0,540720,0,0],[9385392.604029568,-21350506.798963677,0,540780,2,0],[9607124.12286609,-21284949.75761639,0,540840,2,0],[9828139.90928526,-21216882.05503986,0,540900,0,0],[10048021.011435537,-21146414.88653363,0,540960,2,0],[10266804.32687537,-21073608.682745688,0,541020,0,0],[10484413.513994433,-20998439.83232187,0,541080,1,0],[10700727.897924129,-20921008.825802676,0,541140,0,0],[10915660.087939547,-20841316.80302052,0,541200,0,0],[11129059.397181265,-20759472.27170146,0,541260,0,0],[11340887.16553081,-20675472.606076594,0,541320,2,0],[11551492.109805448,-20589203.69944032,0,541380,2,0],[11761179.042575566,-20500548.20509292,0,541440,1,0],[11969745.365817107,-20409593.520971563,0,541500,0,0],[12176836.377322152,-20316514.310532384,0,541560,1,0],[12382472.405202925,-20221308.661996063,0,541620,1,0],[12586764.01323615,-20123905.01807189,0,541680,0,0],[12789532.80850206,-20024454.455959916,0,541740,2,0],[12990953.217861164,-19922840.224671222,0,541800,1,0],[13191135.421834022,-19819033.86357229,0,541860,1,0],[13389910.191133168,-19713094.378262952,0,541920,2,0],[13587438.705570577,-19605024.633454185,0,541980,0,0],[13783516.14541566,-19494836.84956114,0,542040,2,0],[13978137.152617749,-19382615.422921397,0,542100,0,0],[14171311.178106418,-19268355.070460163,0,542160,2,0],[14362985.802234728,-19152074.163106564,0,542220,1,0],[14553289.174073983,-19033682.54612915,0,542280,0,0],[14741971.245125161,-18913413.353097558,0,542340,2,0],[14929067.019187761,-18791170.683438305,0,542400,2,0],[15114952.88377292,-18666789.44532984,0,542460,2,0],[15299551.615727477,-18540255.860894002,0,542520,0,0],[15482599.539253864,-18411824.048292067,0,542580,1,0],[15663868.383042058,-18281577.089929227,0,542640,2,0],[15843679.20837502,-18149380.23504577,0,542700,1,0],[16022016.011753984,-18015189.386902973,0,542760,1,0],[16198714.20962689,-17879154.1696904,0,542820,1,0],[16373737.514968084,-17741280.941034045,0,542880,1,0],[16547122.338722542,-17601625.163564835,0,542940,2,0],[16718939.077417415,-17460050.42619347,0,543000,1,0],[16889205.208501067,-17316587.391299944,0,543060,0,0],[17057633.358678587,-17171474.867495045,0,543120,0,0],[17224049.056465194,-17024883.788441043,0,543180,1,0],[17388570.402970064,-16876672.750808205,0,543240,1,0],[17551370.7066176,-16726782.955975315,0,543300,1,0],[17712392.77690893,-16575165.126039555,0,543360,2,0],[17871772.769933216,-16421795.512783783,0,543420,2,0],[18029601.675689254,-16266529.055716772,0,543480,0,0],[18185632.148906246,-16109605.31144278,0,543540,1,0],[18339721.65381971,-15951204.992645498,0,543600,0,0],[18491847.374318812,-15791375.90839348,0,543660,2,0],[18642109.613501664,-15629924.530351974,0,543720,1,0],[18790674.421456784,-15466810.322683062,0,543780,1,0],[18937340.40701817,-15302123.395326864,0,543840,2,0],[19082263.289969604,-15135806.685491093,0,543900,2,0],[19225505.452413186,-14967702.925425896,0,543960,0,0],[19366855.118569333,-14798146.368150294,0,544020,1,0],[19506158.86784698,-14627238.3854317,0,544080,0,0],[19643415.631231148,-14455016.216076357,0,544140,2,0],[19778752.801651143,-14281372.40164815,0,544200,1,0],[19912227.262942232,-14106169.653820239,0,544260,2,0],[20043840.79126044,-13929417.717936324,0,544320,1,0],[20173597.003999367,-13751183.689584909,0,544380,0,0],[20301242.95402665,-13571710.529027449,0,544440,1,0],[20426789.83612839,-13391048.033721102,0,544500,0,0],[20550235.476827916,-13209225.984282518,0,544560,1,0],[20671539.407622218,-13026253.961274598,0,544620,0,0],[20790714.21008265,-12842145.800976817,0,544680,2,0],[20907856.389087107,-12656769.000630988,0,544740,1,0],[21023031.842980113,-12469994.522938157,0,544800,0,0],[21136043.178139552,-12282168.60711986,0,544860,2,0],[21246993.816592317,-12093127.246754624,0,544920,0,0],[21355852.672328096,-11902889.442186793,0,544980,2,0],[21462603.86466536,-11711477.159183413,0,545040,1,0],[21567339.147072777,-11518782.364915082,0,545100,2,0],[21670043.316611994,-11324772.300169833,0,545160,0,0],[21770618.39304716,-11129678.237060621,0,545220,1,0],[21868987.811593503,-10933630.43969227,0,545280,2,0],[21965272.005892664,-10736337.940388761,0,545340,0,0],[22059401.03355012,-10538019.83242748,0,545400,0,0],[22151234.5885013,-10338991.999537198,0,545460,1,0],[22240789.470318113,-10139078.173378617,0,545520,1,0],[22328184.116197653,-9938204.462409016,0,545580,2,0],[22413427.864525802,-9736166.96448013,0,545640,0,0],[22496485.726113923,-9533193.25074854,0,545700,1,0],[22577250.60220009,-9329431.759831082,0,545760,1,0],[22655801.25762429,-9124733.906992245,0,545820,1,0],[22732120.86070552,-8919178.391553061,0,545880,1,0],[22806194.485761654,-8712711.53874716,0,545940,2,0],[22878078.155145846,-8505230.038296351,0,546000,1,0],[22947787.43572731,-8296744.582802475,0,546060,0,0],[23015145.382054206,-8087587.181851556,0,546120,2,0],[23080242.889428847,-7877665.013802593,0,546180,1,0],[23143099.562473107,-7666758.6235885285,0,546240,2,0],[23203715.672509123,-7454925.516647347,0,546300,1,0],[23262094.085671406,-7242197.8009170955,0,546360,0,0],[23318112.65367765,-7028926.458976766,0,546420,1,0],[23371751.319183223,-6815109.28898803,0,546480,2,0],[23423139.47630864,-6600462.274905449,0,546540,2,0],[23472248.243625876,-6384778.779970109,0,546600,0,0],[23519042.246966977,-6168486.08055147,0,546660,1,0],[23563423.037755672,-5951739.289859633,0,546720,0,0],[23605426.604011487,-5734577.3201733045,0,546780,0,0],[23645019.01618674,-5517197.7565723285,0,546840,1,0],[23682183.196316194,-5299451.502942033,0,546900,1,0],[23716965.579438947,-5081156.749206329,0,546960,2,0],[23749413.271985378,-4862181.198618578,0,547020,1,0],[23779473.244396325,-4642520.112973743,0,547080,1,0],[23807164.001500268,-4422430.937329438,0,547140,0,0],[23832403.00168959,-4202027.28770408,0,547200,1,0],[23855200.479390446,-3981415.7463383246,0,547260,1,0],[23875616.068094026,-3760367.3487876644,0,547320,2,0],[23893581.609079234,-3538780.0892915786,0,547380,0,0],[23909150.188367847,-3316840.006737871,0,547440,1,0],[23922239.991255514,-3094712.4811732806,0,547500,1,0],[23932883.676449183,-2872287.671025055,0,547560,2,0],[23941102.141986117,-2649380.762739397,0,547620,1,0],[23946848.11189766,-2426018.702137526,0,547680,1,0],[23950131.516654942,-2202428.0306749768,0,547740,2,0],[23950970.545448817,-1978400.4681473435,0,547800,0,0],[23949312.919731446,-1754180.9478065353,0,547860,1,0],[23945172.871649355,-1529970.6162974061,0,547920,2,0],[23938560.14437926,-1305416.6273445145,0,547980,1,0],[23929427.052882675,-1080525.024145044,0,548040,0,0],[23917822.72978556,-855737.9669214711,0,548100,0,0],[23903708.45453387,-631204.5555083354,0,548160,0,0],[23887149.590077482,-406956.9682453538,0,548220,1,0],[23868061.51764254,-182856.78970053076,0,548280,0,0],[23846477.789990775,41087.5221862403,0,548340,2,0],[23822382.484837282,265034.94953516574,0,548400,0,0],[23795729.63540887,488952.0739656933,0,548460,2,0],[23766572.657714434,712806.7830484034,0,548520,2,0],[23734806.261418186,936966.7108961047,0,548580,2,0],[23700468.51515101,1161374.2756290976,0,548640,0,0],[23663572.858818065,1385639.143175907,0,548700,2,0],[23624125.074651793,1609751.817098918,0,548760,1,0],[23582089.895532016,1833889.5385956182,0,548820,0,0],[23537566.745923717,2057646.3081895618,0,548880,1,0],[23490488.671350207,2280984.562468592,0,548940,2,0],[23440818.20443579,2504269.0152153377,0,549000,2,0],[23388484.332800206,2727622.2352408012,0,549060,0,0],[23333584.26733919,2950687.505202184,0,549120,2,0],[23276122.7151904,3173430.6229281626,0,549180,1,0],[23216028.638140157,3395973.281462675,0,549240,0,0],[23153412.202587236,3617964.179632037,0,549300,1,0],[23088253.105242103,3839388.8290837095,0,549360,2,0],[23020443.297509924,4060574.956543297,0,549420,0,0],[22950074.135742236,4281287.711649452,0,549480,1,0],[22877167.045998402,4501329.378195688,0,549540,2,0],[22801621.89357352,4721049.155024126,0,549600,2,0],[22723358.538765907,4940581.906570908,0,549660,0,0],[22642495.17822502,5159534.124516266,0,549720,0,0],[22559174.87565177,5377569.0526492,0,549780,0,0],[22473365.13897996,5594644.292468266,0,549840,1,0],[22385066.00880608,5810915.253862228,0,549900,2,0],[22294061.21087395,6026673.025558587,0,549960,2,0],[22200339.90607806,6242061.900047555,0,550020,0,0],[22104024.16657517,6456694.864596773,0,550080,1,0],[22005172.03922737,6670431.187146484,0,550140,1,0],[21903723.841152593,6883380.714221458,0,550200,0,0],[21799757.12065274,7095337.378775535,0,550260,2,0],[21693207.91396466,7306458.462205676,0,550320,1,0],[21583972.73144183,7516861.94568823,0,550380,1,0],[21472139.935783576,7726367.411181993,0,550440,1,0],[21357718.346679304,7934935.223287201,0,550500,1,0],[21240700.090929594,8142548.742084741,0,550560,0,0],[21121197.68948385,8349011.495639309,0,550620,0,0],[20999283.191902854,8554144.064374799,0,550680,1,0],[20874872.529184777,8758042.313819105,0,550740,2,0],[20747780.60858221,8961029.01059157,0,550800,2,0],[20617923.653314378,9163216.721822763,0,550860,0,0],[20485480.000069007,9364245.282079974,0,550920,2,0],[20350474.724064685,9564104.83078166,0,550980,0,0],[20212919.82435928,9762756.495220758,0,551040,0,0],[20072963.075301953,9959879.322856383,0,551100,1,0],[19930584.736215428,10155568.821930684,0,551160,2,0],[19785529.362466104,10350128.356077291,0,551220,2,0],[19637713.729570955,10543613.916655459,0,551280,0,0],[19487349.151792925,10735734.952488925,0,551340,1,0],[19334557.62138224,10926332.683150051,0,551400,0,0],[19179353.01099566,11115343.524344606,0,551460,1,0],[19021731.13055189,11302767.218932329,0,551520,2,0],[18861472.286258705,11488838.466377757,0,551580,1,0],[18698588.73820948,11673483.396133624,0,551640,2,0],[18533062.156885836,11856714.051122418,0,551700,2,0],[18364815.571290817,12038611.15499922,0,551760,0,0],[18194081.535128985,12218901.24421348,0,551820,1,0],[18020983.502517637,12397353.848892441,0,551880,1,0],[17845417.706062764,12574134.364835901,0,551940,1,0],[17667371.211627122,12749179.069736376,0,552000,0,0],[17487037.984120965,12922329.899366705,0,552060,1,0],[17304389.873138204,13093542.102174636,0,552120,2,0],[17119147.604495406,13263035.978103008,0,552180,1,0],[16931369.053849403,13430794.647627506,0,552240,1,0],[16741191.8677645,13596617.81902139,0,552300,2,0],[16548471.489526104,13760632.424044168,0,552360,0,0],[16353386.07851817,13922673.58009665,0,552420,1,0],[16156064.393202255,14082561.17309645,0,552480,0,0],[15956514.422281627,14240301.038706386,0,552540,0,0],[15754927.16664396,14395716.350535307,0,552600,2,0],[15551000.363629382,14549016.683790851,0,552660,1,0],[15344614.813041443,14700258.48718631,0,552720,1,0],[15135952.265974957,14849309.113686284,0,552780,0,0],[14925162.18268293,14996010.03023405,0,552840,2,0],[14712093.793259619,15140440.949806115,0,552900,2,0],[14496476.745881837,15282767.930864304,0,552960,1,0],[14278486.028364506,15422843.417096417,0,553020,2,0],[14058141.190740798,15560619.615768177,0,553080,0,0],[13835627.634062106,15696001.144740468,0,553140,2,0],[13610920.787280729,15828914.41236312,0,553200,0,0],[13384079.912507236,15959319.292016052,0,553260,2,0],[13155101.561716609,16087193.254435927,0,553320,0,0],[12924030.052758837,16212507.980979592,0,553380,2,0],[12690883.264679851,16335208.376796799,0,553440,1,0],[12455500.107614247,16455329.609722013,0,553500,0,0],[12218256.116572088,16572700.891076813,0,553560,0,0],[11979341.870455753,16687182.306487171,0,553620,0,0],[11738749.706883129,16798754.555351283,0,553680,2,0],[11496205.02616529,16907503.88405957,0,553740,1,0],[11251573.984514209,17013499.65064846,0,553800,0,0],[11005193.402137073,17116560.286296975,0,553860,2,0],[10756942.783920705,17216701.930110846,0,553920,2,0],[10506521.316827467,17314017.997777678,0,553980,1,0],[10254101.883251648,17408411.46789193,0,554040,1,0],[9999914.066905221,17499760.116129175,0,554100,2,0],[9743800.011551071,17588115.971607484,0,554160,0,0],[9485966.008925993,17673361.93236082,0,554220,1,0],[9226613.818679346,17755415.05496555,0,554280,1,0],[8965610.315138236,17834287.524539955,0,554340,0,0],[8703151.024907347,17909890.26491341,0,554400,2,0],[8439123.924696166,17982230.25773126,0,554460,0,0],[8173544.782156129,18051289.63756127,0,554520,0,0],[7906820.103252239,18116923.975129113,0,554580,2,0],[7638603.268201534,18179190.11296769,0,554640,1,0],[7368797.478885923,18238104.31834823,0,554700,2,0],[7097427.53247833,18293619.35823935,0,554760,1,0],[6824517.7334473515,18345677.19526935,0,554820,1,0],[6550304.618492785,18394242.939438745,0,554880,0,0],[6275030.04504684,18439222.483568285,0,554940,1,0],[5998707.863522198,18480602.91605912,0,555000,0,0],[5721377.574006539,18518330.71028869,0,555060,2,0],[5442922.663424982,18552405.280895974,0,555120,0,0],[5163382.442964668,18582809.61744813,0,555180,0,0],[4883191.656667805,18609453.52915043,0,555240,1,0],[4602172.094143095,18632344.331053253,0,555300,2,0],[4320045.1051710555,18651441.090538792,0,555360,1,0],[4036855.9903072957,18666760.042226516,0,555420,1,0],[3752832.7910160115,18678217.561351582,0,555480,2,0],[3467843.468152263,18685809.22593409,0,555540,2,0],[3181776.9129779264,18689504.24158509,0,555600,0,0],[2895058.120659254,18689266.816587485,0,555660,0,0],[2608067.497329812,18685059.284887377,0,555720,1,0],[2320692.396507665,18676866.611938424,0,555780,0,0],[2033012.2957716684,18664669.169423833,0,555840,1,0],[1745063.749302807,18648422.283735905,0,555900,2,0],[1456569.1191213054,18628095.856812846,0,555960,1,0],[1167556.853248043,18603655.299751803,0,556020,1,0],[878295.6917332009,18575094.94722413,0,556080,1,0],[588830.9418890047,18542388.073608764,0,556140,2,0],[299063.10557281127,18505489.53760622,0,556200,1,0],[9034.81543188608,18464381.693049725,0,556260,2,0],[-281165.0114675821,18419046.420241486,0,556320,1,0],[-571469.0208911081,18369449.955578152,0,556380,1,0],[-861664.2802422838,18315604.44177318,0,556440,1,0],[-1151631.0116371077,18257500.465410147,0,556500,2,0],[-1441519.9189495824,18195068.130910076,0,556560,1,0],[-1731244.3311640904,18128314.78748045,0,556620,1,0],[-2020554.479330978,18057237.094275337,0,556680,0,0],[-2309196.333650927,17981909.6789978,0,556740,1,0],[-2597115.7508213045,17902293.815708928,0,556800,2,0],[-2884582.776168071,17818266.79697958,0,556860,1,0],[-3171514.7381758797,17729860.841146316,0,556920,0,0],[-3457489.465969114,17637144.637727335,0,556980,1,0],[-3742446.9281479944,17540137.039754823,0,557040,1,0],[-4026476.5302744703,17438769.14490164,0,557100,2,0],[-4309674.568474067,17332960.539161354,0,557160,2,0],[-4592105.528462447,17222663.587758534,0,557220,0,0],[-4873383.730829351,17107999.27353597,0,557280,0,0],[-5153079.922953997,16989116.18208293,0,557340,0,0],[-5431112.801406214,16866025.63824481,0,557400,2,0],[-5707764.82186876,16738584.274401331,0,557460,1,0],[-5983088.8617775235,16606714.147733416,0,557520,2,0],[-6257022.256593671,16470427.548815943,0,557580,0,0],[-6529308.918562354,16329840.13813012,0,557640,0,0],[-6799563.713127903,16185098.214010894,0,557700,1,0],[-7067848.57125287,16036148.884635324,0,557760,0,0],[-7334092.1703163,15883018.325791247,0,557820,2,0],[-7598374.037162098,15725628.460493648,0,557880,1,0],[-7860753.9681993695,15563912.332004132,0,557940,1,0],[-8121017.283389789,15397985.228953961,0,558000,0,0],[-8378901.333870648,15227964.43112817,0,558060,2,0],[-8634511.047237528,15053776.044302152,0,558120,1,0],[-8887898.76519208,14875365.549257012,0,558180,2,0],[-9138978.223317273,14692742.951597665,0,558240,2,0],[-9387828.679361578,14505826.653232401,0,558300,1,0],[-9634198.329721209,14314769.10942477,0,558360,1,0],[-9877875.080639318,14119731.342721472,0,558420,2,0],[-10118928.513696322,13920594.083146807,0,558480,1,0],[-10357255.274796741,13717445.063939897,0,558540,1,0],[-10592667.59247566,13510407.330911392,0,558600,1,0],[-10825084.76142631,13299545.619574161,0,558660,0,0],[-11054275.597282337,13085023.11684515,0,558720,1,0],[-11280178.306957742,12866874.304280642,0,558780,1,0],[-11502864.339830166,12645055.538726233,0,558840,1,0],[-11722243.412607139,12419592.425106568,0,558900,2,0],[-11938355.43659357,12190426.876235167,0,558960,1,0],[-12151156.520964956,11957618.125330029,0,559020,1,0],[-12360433.75364683,11721336.494394423,0,559080,0,0],[-12565997.654137405,11481781.874845035,0,559140,2,0],[-12767915.99082879,11238887.466918826,0,559200,0,0],[-12966101.58012309,10992730.73153121,0,559260,2,0],[-13160508.888169663,10743351.834677393,0,559320,2,0],[-13351281.216028478,10490539.906286076,0,559380,0,0],[-13538133.945472261,10234669.947615026,0,559440,0,0],[-13720810.192733513,9976074.515500052,0,559500,0,0],[-13899243.05639213,9714849.335147848,0,559560,1,0],[-14073492.622149264,9450907.648391828,0,559620,1,0],[-14243577.37764564,9184189.484395012,0,559680,1,0],[-14409487.223839335,8914764.01737947,0,559740,1,0],[-14571144.500730556,8642698.688465983,0,559800,1,0],[-14728487.987945596,8368097.846381847,0,559860,1,0],[-14881495.83947798,8091016.586342701,0,559920,0,0],[-15030017.369180208,7811721.356565575,0,559980,0,0],[-15173927.82316119,7530410.287060683,0,560040,2,0],[-15313374.03848924,7246885.958957642,0,560100,2,0],[-15448455.998181982,6960903.459930471,0,560160,1,0],[-15579045.1657831,6672713.220729415,0,560220,0,0],[-15704979.341789791,6382710.818367137,0,560280,2,0],[-15826286.334892146,6090827.357006577,0,560340,0,0],[-15942939.100853099,5797156.771226744,0,560400,2,0],[-16054898.511902956,5501778.007477802,0,560460,1,0],[-16162208.008214984,5204615.385285593,0,560520,2,0],[-16264852.19009328,4905755.265271959,0,560580,0,0],[-16362724.396948544,4605464.27939662,0,560640,0,0],[-16455710.760195052,4304173.266800946,0,560700,0,0],[-16543801.532765485,4001980.8808453246,0,560760,2,0],[-16627070.691382833,3698597.149278247,0,560820,2,0],[-16705609.926234612,3393796.362016151,0,560880,0,0],[-16779307.44062339,3088035.220283915,0,560940,1,0],[-16848111.780399147,2781548.9600190492,0,561000,0,0],[-16912024.48962708,2474425.0919490405,0,561060,1,0],[-16971039.499983292,2166771.419226048,0,561120,0,0],[-17025164.633694705,1858676.6828449038,0,561180,2,0],[-17074434.351518102,1550048.0471272313,0,561240,2,0],[-17118884.858559724,1240625.6653668208,0,561300,0,0],[-17158480.191186883,930861.8058479205,0,561360,0,0],[-17193180.031492412,621178.5446617297,0,561420,2,0],[-17223032.520623475,311317.9946007261,0,561480,1,0],[-17248065.235969722,1182.822814531679,0,561540,1,0],[-17268288.5329766,-308940.1345000719,0,561600,1,0],[-17283685.467776448,-618960.7647730053,0,561660,2,0],[-17294296.37791081,-929020.5774607928,0,561720,2,0],[-17300156.510512494,-1239172.48800655,0,561780,0,0],[-17301247.574002553,-1548977.053589283,0,561840,0,0],[-17297607.46764269,-1858002.889248888,0,561900,1,0],[-17289247.507001538,-2166330.65079586,0,561960,1,0],[-17276211.313085824,-2474088.072296863,0,562020,2,0],[-17258488.769909892,-2781353.3974074903,0,562080,1,0],[-17236117.11151396,-3088047.563855856,0,562140,1,0],[-17209152.38944877,-3393926.368346592,0,562200,0,0],[-17177625.718897466,-3698717.3025864433,0,562260,2,0],[-17141556.549247917,-4002528.8772748895,0,562320,1,0],[-17100956.72227006,-4305466.074908128,0,562380,1,0],[-17055870.950916603,-4607258.002374761,0,562440,1,0],[-17006350.66523915,-4907886.588020499,0,562500,0,0],[-16952469.191514045,-5207046.409954684,0,562560,1,0],[-16894252.55290561,-5504697.000169632,0,562620,1,0],[-16831722.92560979,-5800918.37129104,0,562680,1,0],[-16764906.350104041,-6095695.969607897,0,562740,2,0],[-16693813.173360419,-6389095.775123124,0,562800,2,0],[-16618429.01394489,-6681232.698810879,0,562860,0,0],[-16538905.88212353,-6971719.12368752,0,562920,1,0],[-16455325.803484721,-7260285.812103312,0,562980,2,0],[-16367622.198243668,-7547239.470902914,0,563040,1,0],[-16275875.0586225,-7832510.254581504,0,563100,1,0],[-16180153.8474239,-8115879.640577786,0,563160,0,0],[-16080574.659186456,-8397115.315611493,0,563220,1,0],[-15977192.648354875,-8676164.947734412,0,563280,0,0],[-15870062.775649454,-8952961.51076943,0,563340,1,0],[-15759237.701271437,-9227482.06273166,0,563400,0,0],[-15644768.440572454,-9499648.459976695,0,563460,1,0],[-15526693.425492618,-9769433.971896067,0,563520,2,0],[-15404950.82290162,-10037130.618808284,0,563580,2,0],[-15279491.180203496,-10302826.939587824,0,563640,2,0],[-15150381.01514031,-10566478.060960436,0,563700,1,0],[-15017734.716608798,-10827885.885243282,0,563760,0,0],[-14881788.792938339,-11086681.573614918,0,563820,0,0],[-14742656.607621219,-11342663.321713781,0,563880,2,0],[-14600241.916330969,-11596139.792352065,0,563940,2,0],[-14454414.366354212,-11847350.70769298,0,564000,2,0],[-14305222.628440564,-12096266.47767379,0,564060,1,0],[-14152813.79256398,-12342704.211279897,0,564120,2,0],[-13997253.18801752,-12586600.467351794,0,564180,0,0],[-13838679.065369243,-12827815.884521794,0,564240,1,0],[-13677245.864700027,-13066122.187127126,0,564300,1,0],[-13512925.086994216,-13301661.78891194,0,564360,0,0],[-13345843.90749687,-13534263.09362447,0,564420,0,0],[-13176192.68591654,-13763724.600022657,0,564480,1,0],[-13003925.616175832,-13990202.693437034,0,564540,1,0],[-12828985.425267901,-14213795.413969709,0,564600,2,0],[-12651286.64602036,-14434637.448904347,0,564660,1,0],[-12470918.930552011,-14652668.661158327,0,564720,0,0],[-12288161.04089157,-14867623.02652237,0,564780,0,0],[-12103167.512311665,-15079323.691368852,0,564840,2,0],[-11915782.092440758,-15288040.191402974,0,564900,2,0],[-11725810.578316862,-15494009.864260469,0,564960,1,0],[-11533404.80014434,-15697075.535823787,0,565020,0,0],[-11338901.598709265,-15896961.9390295,0,565080,2,0],[-11142208.09944081,-16093781.653664118,0,565140,2,0],[-10943120.951128935,-16287790.955751788,0,565200,2,0],[-10741692.364587665,-16478954.28159692,0,565260,0,0],[-10538250.841965862,-16667012.572823739,0,565320,1,0],[-10332965.883331662,-16851804.57637895,0,565380,1,0],[-10125771.626411496,-17033493.716692105,0,565440,1,0],[-9916698.359815123,-17212028.015347607,0,565500,1,0],[-9705807.496897453,-17387412.1702305,0,565560,1,0],[-9493152.464151675,-17559647.161378976,0,565620,1,0],[-9278788.393712932,-17728700.57873681,0,565680,2,0],[-9062624.231386289,-17894707.22945679,0,565740,0,0],[-8844844.538315052,-18057510.63947267,0,565800,0,0],[-8625799.649628328,-18216917.368679572,0,565860,0,0],[-8405531.607163772,-18372927.948831838,0,565920,2,0],[-8183783.550046257,-18525743.258996382,0,565980,1,0],[-7960499.314458727,-18675463.87297953,0,566040,1,0],[-7735840.839996339,-18821963.666942466,0,566100,0,0],[-7510022.414279645,-18965180.734558735,0,566160,1,0],[-7283066.304519231,-19105084.10501395,0,566220,0,0],[-7055065.002122301,-19241690.92854882,0,566280,2,0],[-6825872.646514621,-19375087.251167987,0,566340,1,0],[-6595403.649046351,-19505374.749884218,0,566400,2,0],[-6363668.484308327,-19632551.009261534,0,566460,1,0],[-6130755.037200605,-19756581.51236245,0,566520,1,0],[-5896856.688965277,-19877424.73597236,0,566580,0,0],[-5662168.040671223,-19994976.26837106,0,566640,2,0],[-5426560.163411541,-20109333.928227227,0,566700,2,0],[-5189766.43588497,-20220679.08239359,0,566760,2,0],[-4951825.285202667,-20328964.385419328,0,566820,0,0],[-4713117.993417813,-20434064.781427484,0,566880,2,0],[-4473677.85624207,-20535983.71355038,0,566940,0,0],[-4233541.404033567,-20634734.527020037,0,567000,2,0],[-3992754.7698132377,-20730312.184978172,0,567060,2,0],[-3751030.434289354,-20822849.411166463,0,567120,2,0],[-3508398.6555580474,-20912379.063372917,0,567180,0,0],[-3265223.208713406,-20998752.817549136,0,567240,0,0],[-3021928.8777976646,-21081878.19710268,0,567300,0,0],[-2778503.306414408,-21161744.33533258,0,567360,2,0],[-2534675.609812231,-21238482.274924062,0,567420,1,0],[-2290302.837964273,-21312174.335387316,0,567480,0,0],[-2045789.0355089456,-21382696.225200243,0,567540,1,0],[-1801123.9789294421,-21450086.930547558,0,567600,1,0],[-1556208.189573534,-21514387.67092197,0,567660,0,0],[-1311238.633637873,-21575550.206594203,0,567720,2,0],[-1066096.9505497876,-21633675.86537596,0,567780,0,0],[-820804.1271836174,-21688718.2818099,0,567840,1,0],[-575561.1185547237,-21740695.28279874,0,567900,1,0],[-330239.497745964,-21789638.314145893,0,567960,0,0],[-85064.80087846759,-21835542.203215413,0,568020,1,0],[159962.32006725422,-21878389.16829931,0,568080,1,0],[404970.0834315869,-21918237.51576149,0,568140,2,0],[650089.5172876101,-21955109.870397784,0,568200,0,0],[895125.752027493,-21989029.200366445,0,568260,2,0],[1140053.1341595086,-22019988.229509644,0,568320,0,0],[1384806.9851439437,-22048001.81194662,0,568380,0,0],[1629030.7741960404,-22073027.263092976,0,568440,1,0],[1872858.7475547895,-22095124.636913832,0,568500,2,0],[2116605.3676525503,-22114328.897853434,0,568560,1,0],[2360277.9578736774,-22130649.608613376,0,568620,2,0],[2603811.6934066373,-22144107.418776132,0,568680,2,0],[2847366.665452844,-22154704.26297716,0,568740,2,0],[3090916.601874901,-22162489.465448655,0,568800,2,0],[3334437.887878768,-22167412.416530605,0,568860,0,0],[3577530.224971458,-22169522.7557103,0,568920,0,0],[3819796.8520553517,-22168840.062211305,0,568980,1,0],[4061412.910604323,-22165344.947207432,0,569040,1,0],[4302508.20675659,-22159073.19142068,0,569100,0,0],[4542896.8518641805,-22150031.774717126,0,569160,0,0],[4782370.881753574,-22138289.7388267,0,569220,1,0],[5021057.930545319,-22123796.15013538,0,569280,2,0],[5259317.211760738,-22106584.3416531,0,569340,1,0],[5497112.037191668,-22086640.90940085,0,569400,2,0],[5734409.9127378315,-22064001.102685064,0,569460,0,0],[5971033.179761292,-22038684.375806127,0,569520,1,0],[6206746.886756523,-22010751.722874366,0,569580,1,0],[6441711.72690489,-21980160.092838727,0,569640,1,0],[6675893.444077811,-21946938.595280487,0,569700,1,0],[6909286.630742052,-21911116.616902355,0,569760,0,0],[7141698.14630417,-21872736.22316413,0,569820,2,0],[7373269.592994607,-21831773.218660735,0,569880,0,0],[7603967.7553654425,-21788249.700741302,0,569940,0,0],[7833441.523103296,-21742249.173141398,0,570000,1,0],[8061811.461526393,-21693747.420626957,0,570060,2,0],[8289417.745227676,-21642706.640244137,0,570120,1,0],[8516250.094078949,-21589145.187102806,0,570180,2,0],[8742299.190662038,-21533046.921893947,0,570240,1,0],[8967499.964928262,-21474433.361186195,0,570300,2,0],[9191872.533025203,-21413357.360395856,0,570360,1,0],[9415353.449902875,-21349777.370005213,0,570420,2,0],[9637956.587004887,-21283744.60851677,0,570480,1,0],[9859643.891134193,-21215263.51555919,0,570540,1,0],[10080240.86655853,-21144415.07358051,0,570600,0,0],[10299519.504819864,-21071254.54057063,0,570660,0,0],[10517324.76331205,-20995861.541100264,0,570720,1,0],[10733784.493635625,-20918205.25887128,0,570780,2,0],[10949253.942184709,-20838182.706353113,0,570840,2,0],[11163827.279075561,-20755743.61116859,0,570900,0,0],[11377195.409569846,-20671018.54127461,0,570960,2,0],[11589304.60643284,-20584039.66626054,0,571020,0,0],[11800157.314159686,-20494823.226012513,0,571080,0,0],[12009409.472780177,-20403516.141084258,0,571140,2,0],[12217343.781942587,-20310006.276929908,0,571200,0,0],[12423990.0515482,-20214319.663023714,0,571260,2,0],[12629264.788986951,-20116429.82301634,0,571320,2,0],[12833541.401036622,-20016275.456610132,0,571380,1,0],[13036588.307300968,-19913864.849070385,0,571440,0,0],[13238098.344877537,-19809440.043350074,0,571500,0,0],[13437876.498756658,-19703065.51636333,0,571560,2,0],[13636246.817800295,-19594607.302427694,0,571620,2,0],[13833511.775440829,-19483924.738264807,0,571680,0,0],[14029272.929809792,-19371170.977122433,0,571740,1,0],[14223452.003539173,-19256499.2622369,0,571800,2,0],[14416270.99286328,-19139697.63537145,0,571860,0,0],[14607590.547330817,-19020913.353267744,0,571920,1,0],[14797237.624447932,-18900251.370524485,0,571980,2,0],[14985514.701521013,-18777527.20167037,0,572040,2,0],[15172533.553742558,-18652657.857739467,0,572100,1,0],[15358121.62326027,-18525746.758401964,0,572160,0,0],[15541991.729751956,-18397062.899857774,0,572220,1,0],[15724135.78531241,-18266566.619412724,0,572280,0,0],[15904495.014122637,-18134318.807440873,0,572340,1,0],[16083093.468453191,-18000321.703206956,0,572400,1,0],[16260041.670044372,-17864490.712689266,0,572460,2,0],[16435499.057137439,-17726722.568820935,0,572520,0,0],[16609261.675755672,-17587164.83062101,0,572580,0,0],[16781069.759132564,-17446044.57605645,0,572640,1,0],[16951055.304738726,-17303264.489816766,0,572700,1,0],[17119325.141275905,-17158739.812522653,0,572760,1,0],[17285863.597284514,-17012493.733569562,0,572820,1,0],[17450665.168254185,-16864533.58469665,0,572880,0,0],[17613571.472451694,-16715016.690628553,0,572940,1,0],[17774593.378532667,-16563927.52690864,0,573000,1,0],[17933839.443773407,-16411180.647497196,0,573060,1,0],[18091256.365519367,-16256799.820382096,0,573120,2,0],[18247035.64527814,-16100670.3549111,0,573180,0,0],[18401011.441891618,-15942945.77593297,0,573240,2,0],[18553142.99079186,-15783627.480613224,0,573300,0,0],[18703402.335698318,-15622735.914608587,0,573360,1,0],[18851726.761552673,-15460445.013214914,0,573420,0,0],[18998015.93100597,-15296744.362447836,0,573480,1,0],[19142354.405296393,-15131678.732488174,0,573540,2,0],[19284893.376505993,-14964968.021717135,0,573600,0,0],[19425563.062138774,-14796784.84929259,0,573660,2,0],[19564280.451031733,-14627129.563469594,0,573720,0,0],[19701075.2552675,-14456065.855872737,0,573780,1,0],[19835853.006060675,-14283710.526616512,0,573840,1,0],[19968653.7343358,-14109947.710384287,0,573900,2,0],[20099615.746982247,-13934642.193269162,0,573960,0,0],[20228590.269997098,-13757967.026670221,0,574020,2,0],[20355607.272327445,-13579975.092310214,0,574080,1,0],[20480709.003252637,-13400495.329041133,0,574140,1,0],[20603804.651552547,-13219677.969825048,0,574200,1,0],[20724910.80768985,-13037602.0379207,0,574260,0,0],[20843881.5991672,-12854379.302666131,0,574320,1,0],[20960703.690228097,-12670066.468004597,0,574380,2,0],[21075597.369667474,-12484372.346106844,0,574440,2,0],[21188598.548800908,-12297123.86177033,0,574500,0,0],[21299535.72479485,-12108683.62311479,0,574560,2,0],[21408416.97718204,-11919058.183379803,0,574620,0,0],[21515202.320435856,-11728286.905993354,0,574680,2,0],[21619877.156502962,-11536368.627627341,0,574740,2,0],[21722625.988416933,-11342989.488443304,0,574800,0,0],[21823234.932937372,-11148513.323353913,0,574860,1,0],[21921658.751917433,-10953141.219045034,0,574920,2,0],[22018013.85592284,-10756499.2382011,0,574980,1,0],[22112290.544829626,-10558669.532860916,0,575040,0,0],[22204342.85489698,-10359967.236809485,0,575100,2,0],[22294222.627909552,-10160233.240463829,0,575160,0,0],[22381962.233281136,-9959540.117347397,0,575220,1,0],[22467404.213076334,-9758010.37318194,0,575280,2,0],[22550755.959319465,-9555392.510603305,0,575340,0,0],[22631882.324374482,-9351821.318731913,0,575400,0,0],[22710672.286510006,-9147678.373973904,0,575460,2,0],[22787216.948360324,-8942636.988355983,0,575520,1,0],[22861634.16915885,-8736563.663005617,0,575580,2,0],[22933854.583543405,-8529437.287217405,0,575640,0,0],[23003830.99796565,-8321507.240242987,0,575700,0,0],[23071432.062089395,-8113094.889786658,0,575760,1,0],[23136717.219786145,-7904044.863120653,0,575820,1,0],[23199756.550480332,-7694230.400324423,0,575880,1,0],[23260485.683498517,-7483660.661065945,0,575940,2,0],[23318980.318794984,-7272187.536143177,0,576000,1,0],[23375224.20158526,-7059811.108465061,0,576060,1,0],[23429194.910828423,-6846734.31292653,0,576120,2,0],[23480855.43615475,-6632823.09941747,0,576180,1,0],[23530275.774561428,-6418080.429973459,0,576240,1,0],[23577336.63333441,-6202679.160160272,0,576300,0,0],[23622051.78719603,-5986881.303021861,0,576360,1,0],[23664369.264089778,-5770629.023598173,0,576420,2,0],[23704378.697966855,-5553648.928958486,0,576480,0,0],[23742024.589572538,-5336108.060405814,0,576540,2,0],[23777290.429342017,-5118009.618600452,0,576600,0,0],[23810214.759005662,-4899442.051024996,0,576660,0,0],[23840716.070056893,-4680740.914970476,0,576720,2,0],[23868805.950810272,-4461542.822251493,0,576780,0,0],[23894516.010554828,-4241908.915308969,0,576840,2,0],[23917807.089779496,-4021863.6050110734,0,576900,1,0],[23938748.507032305,-3801227.6957418583,0,576960,2,0],[23957260.899444804,-3580020.480192793,0,577020,2,0],[23973402.66256292,-3358086.8943723133,0,577080,0,0],[23987113.37830571,-3135815.52667834,0,577140,1,0],[23998372.368495304,-2913431.0564363273,0,577200,2,0],[24007213.434939943,-2690553.5745555,0,577260,0,0],[24013611.065701988,-2467406.4086367637,0,577320,1,0],[24017540.88905999,-2244163.308318131,0,577380,0,0],[24019009.385009483,-2020904.1792585657,0,577440,1,0],[24018051.03236752,-1797613.7168730693,0,577500,1,0],[24014595.67845671,-1574123.942284192,0,577560,2,0],[24008679.089367498,-1350300.6527396326,0,577620,0,0],[24000286.97123847,-1126319.2611561518,0,577680,1,0],[23989404.141974002,-902426.894823878,0,577740,1,0],[23976033.41776646,-678438.9813509057,0,577800,2,0],[23960176.057180416,-454195.58137627156,0,577860,0,0],[23941821.49664626,-229896.43946752237,0,577920,0,0],[23920958.24223168,-5932.3979174261085,0,577980,2,0],[23897625.12330401,218024.08537236496,0,578040,1,0],[23871741.05827872,442131.315941302,0,578100,0,0],[23843365.4622082,666022.9662304571,0,578160,2,0],[23812488.20188489,889857.9366084029,0,578220,1,0],[23779040.11430876,1113743.8127316672,0,578280,1,0],[23743058.862271436,1337529.0678712218,0,578340,0,0],[23704597.90924867,1560993.7650401054,0,578400,1,0],[23663609.035677772,1784102.7811768155,0,578460,0,0],[23620106.42733734,2006872.2675906112,0,578520,1,0],[23574100.483952794,2229222.5997563237,0,578580,2,0],[23525536.220912494,2451519.7151546055,0,578640,2,0],[23474298.062385313,2673906.793306922,0,578700,1,0],[23420509.53993876,2896170.752575567,0,578760,2,0],[23364079.223145977,3118289.2668941896,0,578820,0,0],[23305105.262710087,3340072.9287315835,0,578880,0,0],[23243691.40459396,3561122.4888185738,0,578940,1,0],[23179729.47130931,3781627.1017251825,0,579000,2,0],[23113158.962011695,4001875.2723940713,0,579060,0,0],[23044000.51761909,4221690.091644726,0,579120,0,0],[22972417.55243858,4440686.891053748,0,579180,1,0],[22898294.280364748,4659000.087598396,0,579240,2,0],[22821520.56986013,4876976.480223375,0,579300,1,0],[22742125.486152448,5094560.248952867,0,579360,1,0],[22660172.872853253,5311585.160364926,0,579420,0,0],[22575678.72511658,5527828.387064299,0,579480,2,0],[22488607.67116903,5743434.136326699,0,579540,2,0],[22398822.290280912,5958713.710293325,0,579600,0,0],[22306479.063146595,6173307.459596718,0,579660,0,0],[22211660.775769092,6386866.773186158,0,579720,2,0],[22114271.968424167,6599662.617692702,0,579780,2,0],[22014154.336405158,6812043.648660094,0,579840,0,0],[21911453.748456996,7023601.139250394,0,579900,1,0],[21806251.71341589,7234178.201193011,0,579960,2,0],[21698399.413373854,7444074.074653085,0,580020,2,0],[21587783.32582973,7653377.2107632505,0,580080,0,0],[21474599.265999682,7861772.903938549,0,580140,2,0],[21358836.631692715,8069241.823159093,0,580200,1,0],[21240411.834010415,8275880.000413631,0,580260,1,0],[21119406.278296456,8481531.384749766,0,580320,1,0],[20995839.49341349,8686134.79366692,0,580380,0,0],[20869806.391763076,8889517.746820902,0,580440,1,0],[20741283.12578245,9091677.698105866,0,580500,1,0],[20610210.64822922,9292695.41151258,0,580560,2,0],[20476477.204627912,9492721.604117721,0,580620,1,0],[20340081.453525793,9691712.30898751,0,580680,0,0],[20201245.079016756,9889325.755444393,0,580740,1,0],[20059966.1017359,10085545.12796806,0,580800,1,0],[19916139.350973897,10280497.275355585,0,580860,0,0],[19769880.11169518,10473995.962503929,0,580920,0,0],[19621305.474575676,10665853.86373572,0,580980,2,0],[19470205.401367657,10856345.793935858,0,581040,0,0],[19316596.70014946,11045432.690069051,0,581100,2,0],[19160445.593338493,11233071.815069111,0,581160,0,0],[19001823.35928227,11419256.92585027,0,581220,2,0],[18840666.2510643,11603920.41270007,0,581280,1,0],[18676895.6336487,11787202.802853657,0,581340,1,0],[18510640.04970358,11968892.004415313,0,581400,1,0],[18341921.48968569,12148978.227764226,0,581460,2,0],[18170590.076463893,12327571.215847706,0,581520,1,0],[17996651.685118333,12504621.291723084,0,581580,2,0],[17820169.999617957,12680084.912846826,0,581640,2,0],[17640969.544495136,12854078.649170168,0,581700,1,0],[17459212.70485277,13026416.667810496,0,581760,2,0],[17274891.988882788,13197057.798557919,0,581820,0,0],[17088162.554918207,13365874.574368566,0,581880,0,0],[16899295.51832252,13532552.364002883,0,581940,1,0],[16708191.320565067,13697206.526677243,0,582000,1,0],[16514697.526519908,13859905.222117644,0,582060,1,0],[16318839.289724415,14020636.937102756,0,582120,1,0],[16120644.889606673,14179336.127919368,0,582180,2,0],[15919938.430039385,14336097.99326251,0,582240,2,0],[15716629.355918573,14490973.65114155,0,582300,0,0],[15511042.468203673,14643728.927423202,0,582360,1,0],[15303277.705753835,14794216.01110446,0,582420,0,0],[15093397.49795789,14942401.137936587,0,582480,0,0],[14881552.484184077,15088130.555254573,0,582540,1,0],[14667611.572398478,15231481.388619285,0,582600,0,0],[14451606.840642821,15372442.20400995,0,582660,2,0],[14233362.648557322,15511040.134035198,0,582720,0,0],[14012950.739097016,15647242.785372825,0,582780,2,0],[13790375.784949189,15781041.72649567,0,582840,2,0],[13565328.215343557,15912549.047073985,0,582900,0,0],[13338157.577768346,16041569.640353581,0,582960,2,0],[13108857.736976845,16168051.323743751,0,583020,0,0],[12877500.590965765,16291965.865917522,0,583080,1,0],[12644228.786800358,16413177.560956333,0,583140,1,0],[12408906.011267493,16531731.616342317,0,583200,2,0],[12171428.21770248,16647708.137680506,0,583260,2,0],[11931622.181159534,16761090.287572185,0,583320,0,0],[11689848.358535515,16871719.72441685,0,583380,2,0],[11446135.393746905,16979539.61109467,0,583440,1,0],[11200347.837963147,17084622.89990404,0,583500,2,0],[10952498.978860646,17186885.631849412,0,583560,0,0],[10702811.775281724,17286227.526481144,0,583620,1,0],[10451456.308409091,17382557.24311777,0,583680,1,0],[10198300.875829522,17475898.83551671,0,583740,1,0],[9943376.701296981,17566203.71707879,0,583800,0,0],[9686892.890250113,17653391.89598723,0,583860,0,0],[9429049.505804814,17737352.476950925,0,583920,0,0],[9169884.863643572,17818079.203998733,0,583980,1,0],[8909249.4209296,17895575.732002717,0,584040,2,0],[8646841.52022873,17969903.174469784,0,584100,1,0],[8382688.501734941,18041034.666070726,0,584160,2,0],[8116838.772380546,18108921.389896423,0,584220,0,0],[7849506.551922069,18173467.725201454,0,584280,2,0],[7580710.669929004,18234666.563865196,0,584340,1,0],[7310340.331828496,18292507.777417596,0,584400,1,0],[7038598.877329282,18346915.95599137,0,584460,0,0],[6765690.374776087,18397816.45801877,0,584520,2,0],[6491490.552235029,18445212.378905263,0,584580,1,0],[6215865.293393006,18489086.972420003,0,584640,1,0],[5939058.424766684,18529396.191734456,0,584700,0,0],[5661264.264492753,18566066.45555116,0,584760,1,0],[5382543.939076432,18599083.33623921,0,584820,1,0],[5102743.468801532,18628409.22273944,0,584880,2,0],[4821751.782037709,18654058.797810894,0,584940,1,0],[4539617.854185947,18675964.415683113,0,585000,2,0],[4256385.435070361,18694125.135826755,0,585060,0,0],[3972282.8658931907,18708466.9964661,0,585120,2,0],[3687366.728359795,18718980.052256715,0,585180,2,0],[3401329.808368398,18725625.670958057,0,585240,1,0],[3114402.929848704,18728377.771926347,0,585300,1,0],[2826843.404198323,18727223.303857744,0,585360,0,0],[2538856.311273466,18722085.053992182,0,585420,1,0],[2250502.461112839,18712998.05565609,0,585480,0,0],[1961837.7727807073,18699891.70425276,0,585540,1,0],[1672937.8598002072,18682755.15739038,0,585600,0,0],[1383864.0510339101,18661570.21082204,0,585660,1,0],[1094655.4074764082,18636312.87250605,0,585720,1,0],[805202.1587751572,18606944.589393333,0,585780,1,0],[515589.25448112446,18573446.49713476,0,585840,0,0],[226023.65736033279,18535823.038533222,0,585900,0,0],[-63226.41404973197,18494063.78899818,0,585960,2,0],[-352469.66281624814,18448099.75085587,0,586020,1,0],[-641807.3540567545,18397903.566315223,0,586080,2,0],[-931188.9149684088,18343433.089265324,0,586140,1,0],[-1220512.5068303298,18284694.058703613,0,586200,2,0],[-1509747.0816712242,18221657.70693478,0,586260,1,0],[-1798781.0526038192,18154285.985618208,0,586320,0,0],[-2087216.022760046,18082682.34083684,0,586380,0,0],[-2374823.823021154,18006858.17590192,0,586440,1,0],[-2661669.506713752,17926778.5648856,0,586500,2,0],[-2948067.94922978,17842306.983945206,0,586560,0,0],[-3233731.7089354363,17753526.410699062,0,586620,2,0],[-3518604.402407159,17660411.41316702,0,586680,0,0],[-3802620.915055478,17562946.449793193,0,586740,0,0],[-4085356.487177205,17461259.316607166,0,586800,2,0],[-4367085.593974962,17355227.483459186,0,586860,2,0],[-4648042.813269566,17244719.320697755,0,586920,2,0],[-4928171.8827412715,17129739.708332125,0,586980,1,0],[-5207216.417989166,17010333.67912916,0,587040,0,0],[-5484768.269417869,16886680.323287055,0,587100,0,0],[-5760581.332044889,16758839.97634149,0,587160,1,0],[-6034744.032978712,16626771.02319035,0,587220,0,0],[-6307185.42692126,16490460.78929006,0,587280,2,0],[-6577981.116663272,16349842.143949028,0,587340,2,0],[-6847383.06386422,16204770.255109493,0,587400,1,0],[-7115122.093284234,16055361.733443141,0,587460,2,0],[-7381147.463903362,15901582.166674307,0,587520,1,0],[-7645334.490433124,15743489.90290299,0,587580,2,0],[-7907657.080428308,15581089.82354401,0,587640,0,0],[-8167851.725145448,15414499.156801185,0,587700,0,0],[-8425518.582245044,15243929.855469257,0,587760,1,0],[-8680750.889159095,15069349.87010638,0,587820,0,0],[-8933473.855443638,14890740.845894523,0,587880,1,0],[-9183603.446345773,14708146.90172448,0,587940,0,0],[-9431057.124671098,14521629.193041584,0,588000,1,0],[-9675767.436771238,14331189.664811792,0,588060,1,0],[-9917778.897175778,14136798.816676494,0,588120,2,0],[-10157180.773965577,13938341.809236625,0,588180,1,0],[-10393865.717999494,13735856.222852182,0,588240,0,0],[-10627515.875974847,13529645.78323345,0,588300,2,0],[-10858152.66067734,13319623.70730316,0,588360,2,0],[-11086006.60456179,13105581.141722213,0,588420,1,0],[-11310816.127752602,12887700.891280392,0,588480,1,0],[-11532414.29891944,12666160.823296417,0,588540,0,0],[-11750614.282683019,12441126.613196163,0,588600,2,0],[-11965432.770973895,12212529.670040244,0,588660,0,0],[-12176823.604508013,11980429.825575246,0,588720,1,0],[-12384574.712359436,11745024.63776257,0,588780,1,0],[-12588768.232717706,11506211.623925226,0,588840,1,0],[-12789311.156550251,11264080.474255634,0,588900,1,0],[-12986149.494645948,11018681.483210849,0,588960,1,0],[-13179212.12197068,10770086.239553338,0,589020,2,0],[-13368554.041239562,10518193.390350828,0,589080,1,0],[-13554106.833416022,10263117.655060358,0,589140,2,0],[-13735799.442628874,10004870.327133907,0,589200,2,0],[-13913680.220019758,9743428.408770733,0,589260,0,0],[-14087486.161458343,9479122.59259907,0,589320,1,0],[-14257083.225027353,9212188.298567887,0,589380,0,0],[-14422381.329413595,8942713.32640108,0,589440,0,0],[-14583266.50455437,8670916.034156764,0,589500,1,0],[-14739772.536829652,8396710.656162877,0,589560,2,0],[-14892037.418931557,8119897.399054623,0,589620,1,0],[-15040015.216619827,7840543.7062512105,0,589680,2,0],[-15183645.287813501,7558712.274224633,0,589740,0,0],[-15322819.820652002,7274665.642004323,0,589800,1,0],[-15457392.773809975,6988636.558026914,0,589860,2,0],[-15587510.505237877,6700387.612141938,0,589920,0,0],[-15713049.993981406,6410168.850229608,0,589980,1,0],[-15833898.833230717,6118237.013389605,0,590040,2,0],[-15950173.865320913,5824342.069714149,0,590100,1,0],[-16061847.63118956,5528579.166525236,0,590160,1,0],[-16168804.299576018,5231198.0252680825,0,590220,2,0],[-16271092.783757713,4932109.961388885,0,590280,1,0],[-16368695.875539439,4631409.722112957,0,590340,0,0],[-16461486.506926943,4329539.565461504,0,590400,0,0],[-16549364.895306919,4026752.311445699,0,590460,0,0],[-16632330.382998215,3723150.2217591396,0,590520,0,0],[-16710405.981504502,3418809.778747061,0,590580,2,0],[-16783643.288823497,3113480.108079363,0,590640,2,0],[-16852120.32947854,2806885.6842089323,0,590700,1,0],[-16915781.181410972,2499321.0186859705,0,590760,0,0],[-16974550.873575255,2191219.257354031,0,590820,0,0],[-17028402.24420944,1882845.482735049,0,590880,2,0],[-17077397.361508485,1573924.4391286934,0,590940,1,0],[-17121553.290309608,1264383.888583214,0,591000,2,0],[-17160886.47775013,954297.8986652081,0,591060,0,0],[-17195354.70114037,643967.3521737077,0,591120,2,0],[-17224998.138570815,333426.8557445973,0,591180,0,0],[-17249806.60500753,22815.623723100114,0,591240,2,0],[-17269786.23032492,-287821.6996351691,0,591300,1,0],[-17284963.044990476,-598553.1207778448,0,591360,0,0],[-17295347.066899423,-908938.7446737627,0,591420,1,0],[-17300938.885987625,-1218881.5526210552,0,591480,2,0],[-17301788.32639844,-1528690.2496462625,0,591540,2,0],[-17297880.403811123,-1838419.2111991157,0,591600,0,0],[-17289273.801884137,-2147667.405799538,0,591660,2,0],[-17275969.80462711,-2456317.65837453,0,591720,1,0],[-17257981.323567353,-2764489.6421024646,0,591780,1,0],[-17235372.56346275,-3071927.7105099605,0,591840,2,0],[-17208131.450835336,-3378711.4433819624,0,591900,1,0],[-17176285.706184976,-3684770.5603999076,0,591960,1,0],[-17139906.574095555,-3989872.854585624,0,592020,1,0],[-17099017.15614698,-4293907.413730863,0,592080,2,0],[-17053615.072607376,-4597008.944640148,0,592140,0,0],[-17003774.13832045,-4898892.267354423,0,592200,0,0],[-16949588.010437425,-5199170.523858753,0,592260,1,0],[-16891078.447584465,-5497925.57713583,0,592320,0,0],[-16828277.16140887,-5795099.454514652,0,592380,0,0],[-16761268.00579754,-6090446.25900964,0,592440,1,0],[-16690062.184414381,-6384079.419791187,0,592500,2,0],[-16614606.26164499,-6676281.555359156,0,592560,0,0],[-16535012.610460263,-6966805.303772412,0,592620,2,0],[-16451295.748454662,-7255616.833800929,0,592680,1,0],[-16363486.644088024,-7542811.5909608,0,592740,0,0],[-16271697.069761703,-7827953.587246867,0,592800,1,0],[-16176016.181124829,-8111053.1379595585,0,592860,1,0],[-16076405.04699813,-8392157.385858377,0,592920,2,0],[-15972866.96268371,-8671439.076008834,0,592980,1,0],[-15865443.99228165,-8948790.187688833,0,593040,1,0],[-15754261.072145991,-9224038.03728488,0,593100,2,0],[-15639293.544454455,-9497267.600567326,0,593160,1,0],[-15520583.145239025,-9768451.545502447,0,593220,1,0],[-15398275.217647543,-10037342.252842117,0,593280,0,0],[-15272472.253747983,-10303762.865819385,0,593340,0,0],[-15143334.521227838,-10567483.266514683,0,593400,2,0],[-15010728.925659193,-10828813.825096937,0,593460,2,0],[-14874570.238078633,-11087993.740451101,0,593520,1,0],[-14734982.611176157,-11344853.88438757,0,593580,1,0],[-14592110.073917914,-11599175.657790037,0,593640,1,0],[-14445999.38633032,-11850936.278697731,0,593700,2,0],[-14296617.382052146,-12100247.787489964,0,593760,0,0],[-14144122.028371466,-12346908.719885556,0,593820,0,0],[-13988755.656379491,-12590576.494210983,0,593880,1,0],[-13830467.757094538,-12831390.49687702,0,593940,1,0],[-13669231.77966202,-13069472.561548106,0,594000,0,0],[-13505192.62244207,-13304634.49004562,0,594060,1,0],[-13338404.434387194,-13536844.255349254,0,594120,2,0],[-13168723.86081405,-13766367.02355522,0,594180,0,0],[-12996325.648504473,-13993020.317385223,0,594240,2,0],[-12821240.390712488,-14216815.747388419,0,594300,2,0],[-12643293.181504834,-14437976.723459283,0,594360,1,0],[-12462674.685158968,-14656337.827436158,0,594420,1,0],[-12279565.993817233,-14871759.51316559,0,594480,0,0],[-12094106.544595955,-15084057.870832933,0,594540,0,0],[-11906474.470575182,-15293091.815398732,0,594600,1,0],[-11716632.798412995,-15498978.546528025,0,594660,1,0],[-11524477.413759049,-15701833.52007969,0,594720,2,0],[-11329977.391147682,-15901768.021807143,0,594780,1,0],[-11133162.082336089,-16098768.316082569,0,594840,2,0],[-10934071.301929051,-16292827.1556972,0,594900,2,0],[-10732667.990688292,-16484020.875934908,0,594960,0,0],[-10529229.114504682,-16672114.986926345,0,595020,2,0],[-10323827.805303788,-16857098.397556417,0,595080,2,0],[-10116231.505244961,-17039163.56758873,0,595140,1,0],[-9906637.705390131,-17218236.993065827,0,595200,0,0],[-9695369.555180382,-17394000.658887025,0,595260,1,0],[-9482468.871116852,-17566536.589567136,0,595320,2,0],[-9267721.864272818,-17735993.974926617,0,595380,0,0],[-9051324.102893881,-17902267.292060483,0,595440,0,0],[-8833607.787714167,-18065153.760402072,0,595500,0,0],[-8614615.499532819,-18224629.32076215,0,595560,0,0],[-8394399.158075929,-18380699.67758457,0,595620,0,0],[-8173032.113841617,-18533388.898244116,0,595680,2,0],[-7950231.499442182,-18682855.804700743,0,595740,1,0],[-7725927.201673195,-18829218.736519616,0,595800,2,0],[-7500164.051727697,-18972481.0638889,0,595860,0,0],[-7273132.562379952,-19112553.241316885,0,595920,2,0],[-7044880.710268474,-19249399.366985172,0,595980,1,0],[-6815284.970380971,-19383128.82877538,0,596040,1,0],[-6584577.191685158,-19513671.89542504,0,596100,1,0],[-6352775.096350713,-19640986.244661942,0,596160,1,0],[-6119949.1925337,-19765110.658961564,0,596220,2,0],[-5885960.581173086,-19886122.68718762,0,596280,1,0],[-5650872.8007763615,-20003991.04148981,0,596340,0,0],[-5415055.894465138,-20118598.032086175,0,596400,2,0],[-5178364.917190712,-20230008.695071444,0,596460,0,0],[-4940856.189032007,-20338237.345097743,0,596520,0,0],[-4702919.287424758,-20443143.952066068,0,596580,1,0],[-4464385.215767979,-20544782.272396926,0,596640,2,0],[-4225021.6774137225,-20643325.227904264,0,596700,2,0],[-3984654.8204345484,-20738839.9687876,0,596760,1,0],[-3743534.8259343696,-20831262.47712559,0,596820,1,0],[-3501851.504231058,-20920533.894793343,0,596880,1,0],[-3259611.291367661,-21006665.802797284,0,596940,1,0],[-3016905.5415956653,-21089630.006636146,0,597000,0,0],[-2773938.1363895866,-21169438.651435364,0,597060,1,0],[-2530710.0147617594,-21246063.638566315,0,597120,1,0],[-2287105.996659072,-21319555.880797427,0,597180,1,0],[-2043182.9487870128,-21389964.95881264,0,597240,2,0],[-1798795.392988282,-21457326.240853637,0,597300,1,0],[-1553966.4579246596,-21521652.486480825,0,597360,0,0],[-1309084.3021548076,-21582848.38909411,0,597420,0,0],[-1064372.1145794387,-21640918.99127971,0,597480,1,0],[-819684.5022045157,-21695882.916423887,0,597540,0,0],[-575073.1509466367,-21747742.373862315,0,597600,2,0],[-330368.41213320184,-21796601.09102681,0,597660,1,0],[-85440.69805025683,-21842468.28364029,0,597720,1,0],[159509.51347654703,-21885327.594204962,0,597780,2,0],[404594.11907146464,-21925200.48462501,0,597840,1,0],[649815.4650419522,-21962138.226922102,0,597900,1,0],[894948.896123822,-21996104.94023759,0,597960,2,0],[1140137.0490012113,-22027154.10401514,0,598020,0,0],[1385170.724652032,-22055221.73635648,0,598080,2,0],[1630038.9144729706,-22080375.7862896,0,598140,0,0],[1874673.8074832943,-22102607.105274674,0,598200,2,0],[2119053.7208338343,-22121948.796316322,0,598260,0,0],[2363160.388761981,-22138379.04018231,0,598320,1,0],[2606794.8335207305,-22151923.790258262,0,598380,2,0],[2850275.006455895,-22162600.998085637,0,598440,1,0],[3093540.509035313,-22170446.19868493,0,598500,2,0],[3336623.0016512573,-22175469.241639126,0,598560,0,0],[3579253.2336062156,-22177661.001389187,0,598620,1,0],[3821256.1645431803,-22177040.596119795,0,598680,2,0],[4062976.4689587085,-22173624.907978795,0,598740,0,0],[4304180.192932755,-22167457.93397149,0,598800,1,0],[4544657.539401591,-22158508.867508575,0,598860,2,0],[4784766.094844174,-22146805.81606135,0,598920,1,0],[5024444.19857206,-22132360.13409822,0,598980,0,0],[5263336.907521621,-22115227.372068368,0,599040,1,0],[5501402.113649175,-22095392.420677006,0,599100,0,0],[5738625.988865244,-22072882.77718135,0,599160,1,0],[5974979.72113291,-22047751.62203028,0,599220,1,0],[6210597.417310422,-22019936.011353422,0,599280,0,0],[6445311.596545612,-21989511.90708117,0,599340,1,0],[6679058.6540588355,-21956480.218523193,0,599400,1,0],[6912019.743208157,-21920848.765837666,0,599460,2,0],[7144362.052109331,-21882599.660287116,0,599520,0,0],[7375849.092843217,-21841790.19168376,0,599580,2,0],[7606457.955966965,-21798399.80512313,0,599640,2,0],[7836567.348588954,-21752420.84930809,0,599700,0,0],[8065733.992514064,-21703907.127904,0,599760,1,0],[8293818.415158078,-21652906.00092153,0,599820,1,0],[8520930.22356642,-21599424.615593612,0,599880,1,0],[8747062.437511878,-21543483.446900655,0,599940,2,0]]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/trajectory.json\n// module id = 37\n// module chunks = 0","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.ts"],"sourceRoot":""}